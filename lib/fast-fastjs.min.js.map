{"version":3,"sources":["webpack://fast-fastjs/webpack/universalModuleDefinition","webpack://fast-fastjs/webpack/bootstrap","webpack://fast-fastjs/./src/utilities.js","webpack://fast-fastjs/./node_modules/fast-fluent/lib/fast-fluent.min.js","webpack://fast-fastjs/./src/models/Configuration.js","webpack://fast-fastjs/external \"moment\"","webpack://fast-fastjs/./src/models/Form.js","webpack://fast-fastjs/external \"bluebird\"","webpack://fast-fastjs/./src/Wrappers/Connection.js","webpack://fast-fastjs/./src/models/Submission.js","webpack://fast-fastjs/./node_modules/await-to-js/dist/await-to-js.es5.js","webpack://fast-fastjs/external \"axios\"","webpack://fast-fastjs/./src/Wrappers/Event.js","webpack://fast-fastjs/./src/models/Translation.js","webpack://fast-fastjs/./src/models/Pages.js","webpack://fast-fastjs/./src/models/User.js","webpack://fast-fastjs/./src/repositories/Auth/Auth.js","webpack://fast-fastjs/./src/models/Role.js","webpack://fast-fastjs/./src/repositories/Database/Sync.js","webpack://fast-fastjs/./node_modules/md5/md5.js","webpack://fast-fastjs/./node_modules/charenc/charenc.js","webpack://fast-fastjs/./src/repositories/Database/Scheduler.js","webpack://fast-fastjs/(webpack)/buildin/global.js","webpack://fast-fastjs/./node_modules/lokijs/src/loki-indexed-adapter.js","webpack://fast-fastjs/./node_modules/uuid/v4.js","webpack://fast-fastjs/./src/index.js","webpack://fast-fastjs/./src/start.js","webpack://fast-fastjs/./src/models/repositories/Labels.js","webpack://fast-fastjs/./src/repositories/Database/SyncInterval.js","webpack://fast-fastjs/./node_modules/crypt/crypt.js","webpack://fast-fastjs/./node_modules/is-buffer/index.js","webpack://fast-fastjs/./src/models/repositories/Columns.js","webpack://fast-fastjs/./src/repositories/Submission/OfflineData.js","webpack://fast-fastjs/./src/Fluent/Connectors/local/Loki/FluentConnector.js","webpack://fast-fastjs/./src/Fluent/Connectors/local/Loki/Database.js","webpack://fast-fastjs/./node_modules/lokijs/src/lokijs.js","webpack://fast-fastjs/./node_modules/process/browser.js","webpack://fast-fastjs/./node_modules/uuid/lib/rng-browser.js","webpack://fast-fastjs/./node_modules/uuid/lib/bytesToUuid.js","webpack://fast-fastjs/../fluent-formio/lib/fluent-formio.min.js","webpack://fast-fastjs/(webpack)/buildin/module.js","webpack://fast-fastjs/./src/Fluent/Connectors/merged/Formio-Loki/FluentConnector.js","webpack://fast-fastjs/./src/repositories/Date/moment.js","webpack://fast-fastjs/./src/repositories/Submission/ParallelSurvey.js","webpack://fast-fastjs/./src/repositories/Submission/Import.js","webpack://fast-fastjs/./src/offlinePlugin/offlinePlugin.js","webpack://fast-fastjs/./src/offlinePlugin/getRequest.js","webpack://fast-fastjs/./src/repositories/Submission/Hash.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utilities","fn","def","e","getFromPath","obj","path","_path","includes","split","assignedName","Array","isArray","trim","undefined","result","replace","filter","Boolean","map","every","step","label","eachComponent","components","includeAll","parent","forEach","component","hasColumns","columns","hasRows","rows","hasComps","noRecurse","newPath","_extends","componentMap","tree","subPath","type","column","row","freeze","cloneDeep","JSON","parse","stringify","orderBy","isEmpty","length","debounce","time","timeout","_this","_arguments","arguments","clearTimeout","setTimeout","apply","deleteNulls","k","splice","_typeof","findComponents","query","results","matches","keys","matchComponent","push","unixDate","Math","round","Date","default","a","u","f","concat","methods","properties","props","initializers","init","composers","deepProperties","deepProps","h","propertyDescriptors","v","staticProperties","statics","g","staticDeepProperties","y","deepStatics","w","configuration","b","conf","A","deepConfiguration","P","deepConf","_","E","O","x","F","staticPropertyDescriptors","j","C","N","M","R","compose","slice","__proto__","defineProperties","instance","stamp","args","indexOf","composables","Function","eval","window","assign","config","remote","token","pullForm","local","connector","merge","getModelName","getFluentConfig","_FLUENT_","getConnector","getConnectorFromArray","find","connectors","Error","remoteConnection","merged","from","data","all","avg","average","reduce","chunks","collapse","unChunk","combine","_value","contains","isFunction","some","count","toString","Interface","Fluent","Model","registerGlobalVariable","model","registerModel","extend","collect","models","REMOTE_CONNECTORS","LOCAL_CONNECTORS","MERGE_CONNECTORS","getConfig","getPrototypeOf","WeakMap","configurable","Privatize","set","for","privatizeMethods","Promise","done","resolve","then","chainReference","whereArray","orWhereArray","selectArray","orderByArray","limitNumber","offsetNumber","populate","chunk","pullSize","ownerEmail","operators","findOne","remove","softDelete","insert","update","clear","updateOrCreate","findAndRemove","paginate","owner","method","own","first","regeneratorRuntime","mark","wrap","prev","next","sent","abrupt","stop","select","prepareInput","jsApplySelect","offset","skip","where","andWhere","orWhere","limit","take","pluck","jsApplyOrderBy","sort","ArrayInsert","iterator","showProgress","console","log","t0","catch","t1","return","finish","_fastFluent","_ref","_asyncToGenerator","_callee","appConf","forceOnline","_context","setOffline","setOnline","_ref2","_this2","_callee2","localConfig","localConfigDate","offlineConfigDate","_context2","getConfigDate","offlineFiles","lastUpdated","date","sure","Configuration","fastUpdated","_moment2","unix","_ref3","_this3","_callee3","remoteConfig","_context3","privatize","getModel","cardFormattedForms","action","cards","tags","title","customIcon","icon","subtitle","modified","fromNow","actions","text","target","view","FormLabels","i18n","forms","Labels","getUpdatedAt","_callee4","localForms","localDate","offlineForms","_context4","Forms","_ref4","form","_x","_this4","_callee5","remoteForms","_context5","element","_ref5","_this5","_callee6","_context6","getFastTableTemplates","_ref6","_this6","_callee7","fullForm","templates","_context7","FAST_TABLE_TEMPLATE","template","Connection","online","navigator","onLine","isOnline","reject","axios","res","err","initEventListeners","Event","listen","callback","emit","getUnsync","unsynced","Auth","email","queuedForSync","showView","cols","submissions","Columns","getTableView","Form","sub","_id","status","sync","draft","HumanUpdated","Number","isInteger","moment","syncError","updated","newFx","error","getParallelParticipants","currentSubmission","groupId","parallelSurvey","submission","parallelSurveyID","survey","getParallelSurvey","parallelsurveyInfo","paraparallelSurvey","setParallelSurvey","getGroups","formId","groups","formio","groupName","group","uniqBy","getGroup","id","removeFromGroup","_this7","assingToGroup","submissionId","_this8","_callee8","parallelData","_context8","to","promise","errorExt","__webpack_exports__","CustomEvent","event","params","evt","document","createEvent","bubbles","cancelable","detail","initCustomEvent","customEvent","dispatchEvent","addEventListener","removeEventListener","getFormTranslations","localTranslations","languageCode","supportedLanguages","translations","isoLanguages","languages","getIsoLanguages","iso","code","getLocalizationDate","offlineTranslations","trans","Translations","process","storeTranslations","appTranslations","translationsArray","lenguages","language","translation","updateLabel","newTranslations","createTranslation","_this9","_callee9","_context9","en","localPages","offlinePages","getUpdatedDate","Pages","pages","submit","_awaitToJs2","_slicedToArray","storeLocally","user","localUser","onlineUser","updateUser","login","url","credentials","role","APP_URL","post","localAuthenticate","username","password","hashedPassword","dbUser","userFound","_md2","MD5_KEY","User","remoteAuthenticate","baseUrl","response","_x2","_x3","_x4","authenticate","_x5","_x6","_x7","hasRole","roleName","localStorage","getItem","rolesNames","hasRoleIdIn","rolesIds","appRoles","roles","Role","reducer","roleId","_x9","logOut","removeItem","hasRoleIn","check","x_jwt_token","attempt","headers","setItem","_x8","getRolesDate","localRoles","remoteRoles","insertedRoles","rolesDate","Roles","Sync","_classCallCheck","_createClass","vm","syncUsers","syncSubmission","unsyncSubmissions","isSyncing","areUsersSynced","_Submission2","Scheduler","OfflineData","send","users","getUsersToSync","crypt","utf8","isBuffer","bin","md5","message","options","constructor","String","encoding","stringToBytes","bytesToWords","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","_blocksize","_digestsize","digestbytes","wordsToBytes","asBytes","asString","bytesToString","bytesToHex","charenc","str","unescape","encodeURIComponent","bytes","decodeURIComponent","escape","charCodeAt","fromCharCode","join","FastIsSyncing","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","LokiIndexedAdapter","appname","app","catalog","checkAvailability","LokiCatalog","db","initializeLokiCatalog","indexedDB","loadDatabase","dbname","appName","adapter","getAppKey","val","cat","loadKey","saveDatabase","dbstring","saveCallback","success","setAppKey","saveKey","deleteDatabase","deleteAppKey","deleteKey","deleteDatabasePartitions","self","getDatabaseList","startsWith","getAppKeys","names","idx","getKeyList","getCatalogSummary","getAllKeys","size","oapp","okey","oval","entries","openRequest","open","onupgradeneeded","thisDB","objectStoreNames","deleteObjectStore","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","onerror","transaction","store","index","appkey","request","usercallback","lres","getAppKeyById","requestPut","put","delete","singleKeyRange","IDBKeyRange","only","cursor","openCursor","currObject","continue","rng","bytesToUuid","buf","rnds","random","ii","Moment","FAST","Submission","ParallelSurvey","Translation","Import","OfflinePlugin","Hash","start","promises","fluentFormioBaseUrl","appConfigUrl","loki","formioLoki","defaultLanguage","handle","fetchAllLabels","labels","translationsLabels","translationLabel","allLabels","formLabels","getFormLabels","getAppLabels","appLabels","mergeLabels","getPagesLabels","pagesLabels","newObject","location","picture","labelsObject1","labelsObject2","createOrAdd","componentLabels","formioLabelsPositions","position","values","content","questions","q","page","card","SyncInterval","milliseconds","rInterval","_debouncedSync","delay","dateNow","now","requestAnimation","requestAnimationFrame","intervalFunc","base64map","rotl","rotr","randomBytes","floor","words","hex","hexToBytes","parseInt","substr","bytesToBase64","base64","triplet","charAt","base64ToBytes","imod4","pow","readFloatLE","isSlowBuffer","_isBuffer","input","tableView","offlineSubmissions","PromiseEach","_ref8","_ref9","_ref7","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","item","startSync","_ref10","offlineSubmission","sendSubmission","stopSync","remoteEndPoint","insertedData","filterObject","prepareFilter","t2","chain","andObject","$and","orObject","$or","globalFilter","conditionToObject","lokiOperator","getLokiOperator","operator","lokiOperators","=","<",">","<=",">=","<>","!=","in","nin","like","regexp","endsWith","converted","DB","Database","getCollection","_v2","mod","_this10","removeIndices","getModels","global","shouldCreate","windowModels","dbModels","collections","acc","collection","recreateModels","idbAdapter","pa","dbConfig","autosave","autosaveInterval","autoload","autoloadCallback","baseModels","dbModel","addCollection","throttledSaves","Loki","LokiPartitioningAdapter","paging","Utils","copyProperties","src","dest","prop","resolveTransformObject","subObj","depth","pname","substring","resolveTransformParams","transform","clonedStep","resolvedTransform","clone","Comparators","aeq","aeqHelper","lt","ltHelper","gt","gtHelper","prop1","prop2","cv1","cv2","equal","sortHelper","desc","dotSubScan","paths","fun","poffset","pathOffset","valueFound","len","containsCheckFn","doQueryOp","op","LokiOps","$eq","$aeq","$ne","$dteq","$gt","$gte","$lt","$lte","$jgt","$jgte","$jlt","$jlte","$between","vals","$jbetween","$in","$nin","$keyin","$nkeyin","$definedin","$undefinedin","$regex","test","$containsString","$containsNone","$containsAny","checkFn","$contains","$type","$finite","isFinite","$size","$len","$where","$not","indexedOps","cloned","cloneMethod","jQuery","localStorageAvailable","LokiEventEmitter","filename","databaseVersion","engineVersion","autosaveHandle","persistenceMethod","persistenceAdapter","throttledSavePending","throttledCallbacks","verbose","events","loaded","flushChanges","close","changes","warning","ENV","env","android","NSObject","URL","configureOptions","on","clearChanges","LokiMemoryAdapter","hashStore","asyncResponses","asyncTimeout","dbref","pageIterator","pageSize","delimiter","LokiFsAdapter","fs","LokiLocalStorageAdapter","Resultset","filteredrows","filterInitialized","DynamicView","rebuildPending","persistent","sortPriority","minRebuildInterval","resultset","resultdata","resultsdirty","cachedresultset","filterPipeline","sortFunction","sortCriteria","sortCriteriaSimple","sortDirty","rebuild","Collection","idIndex","binaryIndices","constraints","exact","uniqueNames","transforms","objType","dirty","cachedIndex","cachedBinaryIndex","cachedData","UniqueIndex","ExactIndex","adaptiveBinaryIndices","transactional","cloneObjects","asyncListeners","disableMeta","disableChangesApi","disableDeltaChangesApi","autoupdate","serializableIndices","ttl","age","ttlInterval","daemon","setTTL","maxId","DynamicViews","pre-insert","pre-update","flushbuffer","ensureId","indices","TypeError","ensureIndex","getObjectDelta","oldObject","propertyNames","delta","propertyName","propertyDelta","observerCallback","changedObjects","Set","add","change","removeAutoUpdateObserver","getChangeDelta","old","getChanges","setChangesApi","enabled","createChange","warn","isDeepProperty","field","parseBase10","num","parseFloat","array","deepProperty","isDeep","pieces","shift","binarySearch","compared","mid","lo","hi","found","BSonSort","KeyValueStore","uniqueField","keyMap","lokiMap","exactField","eventName","listener","currentEventName","selfArgs","addListener","removeListener","listeners","getIndexedAdapter","initialConfig","persistenceMethods","memory","autosaveDisable","autosaveEnable","autosaveCallback","serializationMethod","destructureDelimiter","NODEJS","BROWSER","CORDOVA","MEMORY","copy","clen","databaseCopy","loadJSONObject","retainDirtyFlags","removeNonSerializable","loadCollection","collectionName","renameCollection","oldName","newName","listCollections","colls","removeCollection","tmpcol","curcol","getName","serializeReplacer","serialize","serializeDestructured","toJson","sidx","resultlen","dbcopy","reconstruct","partitioned","delimited","partition","serializeCollection","collectionIndex","doccount","docidx","resultlines","deserializeDestructured","destructuredSource","cdb","collCount","workarray","collIndex","lineIndex","deserializeCollection","pop","loadJSON","serializedDb","dbObject","coll","copyColl","loader","collObj","makeLoader","inflater","collOptions","proto","inflate","addAutoUpdateObserver","ensureUniqueIndex","colldv","dv","addDynamicView","rematerialize","removeWhereFilters","ensureAllIndexes","autosaveDirty","generateChangesNotification","arrayOfCollectionNames","getCollName","selectedCollections","serializeChanges","collectionNamesArray","saveCount","savecount","lastsave","pageIndex","loadNextPartition","keyname","loadNextPage","dlen","isLastPage","exportDatabase","dirtyPartitions","saveNextPartition","docIndex","saveNextPage","pageLen","cdlen","delimlen","serializedObject","pageBuilder","doneWithPartition","doneWithPage","pageSaveCallback","stat","stats","isFile","readFile","tmpdbname","writeFile","rename","unlink","throttledSaveDrain","getTime","recursiveWait","recursiveWaitLimit","recursiveWaitLimitDuration","started","loadDatabaseInternal","cFun","dbString","parseSuccess","saveDatabaseInternal","autosaveClearFlags","localCallbacks","unshift","pcb","save","setInterval","clearInterval","reset","toJSON","qty","prepareFullDocIndex","rscopy","pos","branch","parameters","rs","simplesort","compoundsort","dataOptions","eqJoin","joinData","leftJoinKey","rightJoinKey","mapFun","mapReduce","mapFunction","reduceFunction","comparefun","wrappedComparer","userComparer","propname","eff","targetEff","dc","frl","hasBinaryIndex","reverse","disableIndexIntersect","useJavascriptSorting","forceIndexIntersect","fr","io","pv","obj1","obj2","val1","val2","compoundeval","findOr","expressionArray","fri","frlen","docset","idxset","origCount","ei","elen","findAnd","firstOnly","queryObjectOp","queryObject","searchByIndex","filters","RegExp","usingDotNotation","doIndexCheck","rowIdx","segm","calculateRange","viewFunction","removeMeta","forceClones","forceCloneMethod","$loki","meta","updateFunction","rcd","removeBatchByPositions","leftDataLength","rightDataLength","leftData","rightData","leftKeyisFunction","rightKeyisFunction","joinMap","left","right","fpl","fpi","ofp","applyFind","branchResultset","removeFilters","queueSortPhase","applySort","applySimpleSort","applySortCriteria","criteria","startTransaction","commit","rollback","_indexOfFilterWithId","uid","_addFilter","reapplyFilters","queueRebuildEvent","applyFilter","applyWhere","removeFilter","performSortPhase","suppressRebuildEvent","evaluateDocument","objIndex","isNew","ofr","oldPos","oldlen","evalResultset","newPos","removeDocument","rmidx","rmlen","rxo","fxo","adjels","drs","di","filt","operation","insertMeta","created","revision","updateMeta","createInsertChange","createUpdateChange","insertMetaWithChange","updateMetaWithChange","observe","unobserve","addTransform","getTransform","setTransform","removeTransform","byExample","findObject","findObjects","ttlDaemonFuncGen","toRemove","member","timestamp","diff","interval","indexes","force","checkAllIndexes","bIndices","checkIndex","randomSamplingFactor","randomSampling","iter","biv","valid","repair","getBinaryIndexValues","idxvals","flagBinaryIndexesDirty","flagBinaryIndexDirty","ensureIdAsync","async","removeDynamicView","getDynamicView","findAndUpdate","updateWhere","doc","insertOne","bulkInsert","returnObj","biname","uiname","adaptiveBatchOverride","oldInternal","newInternal","adaptiveBinaryIndexUpdate","isNaN","version","constrUnique","addedPos","dvlen","adaptiveBinaryIndexInsert","filterFunction","removeWhere","list","removeDataOnly","positions","didx","xo","bic","uic","adaptiveOverride","adaptiveBinaryIndexRemove","removeBatch","batch","xlt","posx","returnPosition","retpos","max","min","getBinaryIndexPosition","dataPosition","binaryIndexName","range","idxPos","calculateRangeStart","removedFromIndexOnly","curr","bi","sortedPositions","adaptive","lbound","calculateRangeEnd","ubound","lval","minVal","maxVal","segResult","seg","by","findOneUnindexed","leftJoinProp","rightJoinProp","stages","getStage","commitLog","stage","stageName","commitStage","no_op","extract","isDotNotation","maxRecord","deep","minRecord","extractNumerical","stdDev","avgSquareDiff","sqrDiff","sqrt","standardDeviation","dict","median","half","setSort","bs","fieldValue","byId","idxSet","persistenceAdapters","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","browser","argv","versions","once","off","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","byteToHex","bth","getToken","httpGET","httpPOST","httpPUT","httpDelete","getUrl","getHeaders","getTokenType","getSpacer","getFilters","getLimit","getSkip","getSelect","S","webpackPolyfill","deprecate","children","localFx","remoteFx","localData","remoteData","prepareMergedFunctions","locale","getLenguage","createWizard","submissionHasGroup","getGroupId","getNewUserWizard","getNewGroupWizard","createNewSurvey","info","prepareNewUserObject","prepareNewGroupObject","progressSteps","steps","$t","inputValidator","participantName","nextParticipant","file","reader","FileReader","onload","json","ex","parseJson","readAsText","getFormIOInstance","each","prepareSubmission","saveSubmission","imported","$swal","$eventHub","redirect","trigger","OFFLINE_PLUGIN","priority","preRequest","GetRequest","staticRequest","handleExternalAPI","handleLocalForm","handleInternalResource","formID","string","hashed"],"mappings":"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","file":"fast-fastjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"), require(\"bluebird\"), require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fast-fastjs\", [\"moment\", \"bluebird\", \"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fast-fastjs\"] = factory(require(\"moment\"), require(\"bluebird\"), require(\"axios\"));\n\telse\n\t\troot[\"fast-fastjs\"] = factory(root[\"moment\"], root[\"bluebird\"], root[\"axios\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","/* eslint-disable no-unused-vars */\nlet Utilities = (() => {\n  /**\n   * Deep clones a JS object using JSON.parse\n   * This function will not clone object\n   * functions\n   * @param {Object} object\n   */\n  const cloneDeep = object => {\n    return JSON.parse(JSON.stringify(object));\n  };\n  /**\n   * Given an Object and its path, if exisits it will\n   * return the value of it, if not the default\n   * @param {Object} obj\n   * @param {String} path\n   * @param {*} def\n   */\n  const get = (fn, def) => {\n    try {\n      return fn();\n    } catch (e) {\n      return def;\n    }\n  };\n  /**\n   *\n   * @param {*} obj\n   * @param {*} path\n   * @param {*} def\n   */\n  const getFromPath = (obj, path, def) => {\n    let _path = path;\n\n    if (path.includes(' as ')) {\n      path = path.split(' as ');\n      _path = path[0];\n    }\n\n    let assignedName = get(() => {\n      return Array.isArray(path) && path[1].trim();\n    }, undefined);\n\n    let fullPath = _path\n      .replace(/\\[/g, '.')\n      .replace(/]/g, '')\n      .split('.')\n      .filter(Boolean)\n      .map(e => e.trim());\n\n    function everyFunc (step) {\n      return !(step && (obj = obj[step]) === undefined);\n    }\n\n    let result = fullPath.every(everyFunc) ? obj : def;\n\n    return { label: assignedName || _path, value: result };\n  };\n  /**\n   *\n   * @param {*} arr\n   * @param {*} predicate\n   */\n  const uniqBy = (arr, predicate) => {\n    const cb = typeof predicate === 'function' ? predicate : o => o[predicate];\n\n    return [\n      ...arr\n        .reduce((map, item) => {\n          const key = cb(item);\n\n          map.has(key) || map.set(key, item);\n\n          return map;\n        }, new Map())\n        .values()\n    ];\n  };\n  /**\n   *\n   */\n  const orderBy = () => {};\n  /**\n   *\n   * @param {*} value\n   */\n  const isEmpty = value => {\n    if (!value) {\n      return true;\n    }\n    if (Array.isArray(value) || typeof value === 'string') {\n      return !value.length;\n    }\n    for (let key in value) {\n      if (hasOwnProperty.call(value, key)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\n   *\n   * @param {*} fn\n   * @param {*} time\n   */\n  const debounce = (fn, time) => {\n    let timeout;\n\n    return function () {\n      const functionCall = () => fn.apply(this, arguments);\n\n      clearTimeout(timeout);\n      timeout = setTimeout(functionCall, time);\n    };\n  };\n  /**\n   * Recursively removes all NULL values\n   * from an Object or an Array\n   *\n   * @static\n   * @param {Array|Object} object Array, Object to clean\n   * @returns {Array|Object} returns the cleaned value\n   */\n  const deleteNulls = object => {\n    let obj = object;\n    var isArray = obj instanceof Array;\n\n    for (let k in obj) {\n      if (obj[k] === null) isArray ? obj.splice(k, 1) : delete obj[k];\n      else if (typeof obj[k] === 'object') deleteNulls(obj[k]);\n    }\n    return obj;\n  };\n\n  const eachComponent = (components, fn, includeAll, path, parent) => {\n    if (!components) return;\n    path = path || '';\n    components.forEach(component => {\n      if (!component) {\n        return;\n      }\n      const hasColumns = component.columns && Array.isArray(component.columns);\n      const hasRows = component.rows && Array.isArray(component.rows);\n      const hasComps =\n        component.components && Array.isArray(component.components);\n      let noRecurse = false;\n      const newPath = component.key ?\n        path ?\n          `${path}.${component.key}` :\n          component.key :\n        '';\n\n      // Keep track of parent references.\n      if (parent) {\n        // Ensure we don't create infinite JSON structures.\n        component.parent = { ...parent };\n        delete component.parent.components;\n        delete component.parent.componentMap;\n        delete component.parent.columns;\n        delete component.parent.rows;\n      }\n\n      if (\n        includeAll ||\n        component.tree ||\n        (!hasColumns && !hasRows && !hasComps)\n      ) {\n        noRecurse = fn(component, newPath);\n      }\n\n      const subPath = () => {\n        if (\n          component.key &&\n          ![\n            'panel',\n            'table',\n            'well',\n            'columns',\n            'fieldset',\n            'tabs',\n            'form'\n          ].includes(component.type) &&\n          (['datagrid', 'container', 'editgrid'].includes(component.type) ||\n            component.tree)\n        ) {\n          return newPath;\n        } else if (component.key && component.type === 'form') {\n          return `${newPath}.data`;\n        }\n        return path;\n      };\n\n      if (!noRecurse) {\n        if (hasColumns) {\n          component.columns.forEach(column =>\n            eachComponent(\n              column.components,\n              fn,\n              includeAll,\n              subPath(),\n              parent ? component : null\n            )\n          );\n        } else if (hasRows) {\n          component.rows.forEach(row => {\n            if (Array.isArray(row)) {\n              row.forEach(column =>\n                eachComponent(\n                  column.components,\n                  fn,\n                  includeAll,\n                  subPath(),\n                  parent ? component : null\n                )\n              );\n            }\n          });\n        } else if (hasComps) {\n          eachComponent(\n            component.components,\n            fn,\n            includeAll,\n            subPath(),\n            parent ? component : null\n          );\n        }\n      }\n    });\n  };\n\n  const matchComponent = (component, query) => {\n    if (typeof query === 'string') {\n      return component.key === query;\n    }\n    let matches = false;\n\n    Object.keys(query).forEach(path => {\n      matches = getFromPath(component, path).value === query[path];\n      if (!matches) {\n        return false;\n      }\n    });\n    return matches;\n  };\n\n  const findComponents = (components, query) => {\n    const results = [];\n\n    eachComponent(\n      components,\n      (component, path) => {\n        if (matchComponent(component, query)) {\n          component.path = path;\n          results.push(component);\n        }\n      },\n      true\n    );\n    return results;\n  };\n\n  const unixDate = () => {\n    return Math.round(+new Date() / 1000);\n  };\n\n  return Object.freeze({\n    cloneDeep,\n    get,\n    orderBy,\n    isEmpty,\n    debounce,\n    getFromPath,\n    deleteNulls,\n    eachComponent,\n    findComponents,\n    unixDate\n  });\n})();\n\nexport default Utilities;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"fast-fluent\",[],t):\"object\"==typeof exports?exports[\"fast-fluent\"]=t():e[\"fast-fluent\"]=t()}(this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=12)}([function(e,t,r){var n=r(2),o=r(16),i=r(6),a=r(17),s=r(1),c=r(3),u=r(8),f=r(7),l=Array.prototype.concat;function p(){var e=l.apply([],arguments).filter(c);return 0===e.length?void 0:e}function d(e){if(!s(e))return e;var t=e.methods,r=e.properties,n=e.props,o=e.initializers,i=e.init,c=e.composers,l=e.deepProperties,d=e.deepProps,h=e.propertyDescriptors,v=e.staticProperties,m=e.statics,g=e.staticDeepProperties,y=e.deepStatics,w=e.configuration,b=e.conf,A=e.deepConfiguration,P=e.deepConf,_=s(n)||s(r)?f({},n,r):void 0,E=s(d)?u({},d):void 0;E=s(l)?u(E,l):E;var O=s(m)||s(v)?f({},m,v):void 0,x=s(y)?u({},y):void 0;x=s(g)?u(x,g):x;var F=e.staticPropertyDescriptors;a(e.name)&&(F=f({},F||{},{name:{value:e.name}}));var j=s(b)||s(w)?f({},b,w):void 0,C=s(P)?u({},P):void 0;C=s(A)?u(C,A):C;var N=p(i,o),M=p(c),R={};return t&&(R.methods=t),_&&(R.properties=_),N&&(R.initializers=N),M&&(R.composers=M),E&&(R.deepProperties=E),O&&(R.staticProperties=O),x&&(R.staticDeepProperties=x),h&&(R.propertyDescriptors=h),F&&(R.staticPropertyDescriptors=F),j&&(R.configuration=j),C&&(R.deepConfiguration=C),R}function h(){\"use strict\";for(var e=arguments.length,t=[],r=0;r<e;r+=1){var o=arguments[r];t.push(i(o)?o:d(o))}return n.apply(this||v,t)}var v=o.compose({staticProperties:{create:function(){return this.apply(this,arguments)},compose:h}}),m=o.compose.staticProperties;for(var g in m)h[g]=m[g].bind(v);h.compose=h.bind(),e.exports=h},function(e,t){e.exports=function(e){var t=typeof e;return Boolean(e)&&(\"object\"===t||\"function\"===t)}},function(e,t,r){var n=r(5),o=r(3),i=r(1),a=r(6),s=r(14),c=r(7),u=r(8),f=Array.prototype.slice;function l(e,t){var r=function e(t){var r=e.compose||{},n={__proto__:r.methods};if(u(n,r.deepProperties),c(n,r.properties),Object.defineProperties(n,r.propertyDescriptors||{}),!r.initializers||0===r.initializers.length)return n;void 0===t&&(t={});for(var i=r.initializers,a=i.length,s=0;s<a;s+=1){var l=i[s];if(o(l)){var p=l.call(n,t,{instance:n,stamp:e,args:f.apply(arguments)});n=void 0===p?n:p}}return n};e.staticDeepProperties&&u(r,e.staticDeepProperties),e.staticProperties&&c(r,e.staticProperties),e.staticPropertyDescriptors&&Object.defineProperties(r,e.staticPropertyDescriptors);var n=o(r.compose)?r.compose:t;return r.compose=function(){\"use strict\";return n.apply(this,arguments)},c(r.compose,e),r}function p(e,t,r){if(n(t)){var i=t.length,a=e[r]||[];e[r]=a;for(var s=0;s<i;s+=1){var c=t[s];o(c)&&a.indexOf(c)<0&&a.push(c)}}}function d(e,t,r,n){i(t[r])&&(i(e[r])||(e[r]={}),n(e[r],t[r]))}function h(e,t,r){d(e,t,r,u)}function v(e,t,r){d(e,t,r,c)}function m(e,t){var r=t&&t.compose||t;v(e,r,\"methods\"),v(e,r,\"properties\"),h(e,r,\"deepProperties\"),v(e,r,\"propertyDescriptors\"),v(e,r,\"staticProperties\"),h(e,r,\"staticDeepProperties\"),v(e,r,\"staticPropertyDescriptors\"),v(e,r,\"configuration\"),h(e,r,\"deepConfiguration\"),p(e,r.initializers,\"initializers\"),p(e,r.composers,\"composers\")}e.exports=function e(){\"use strict\";var t={},r=[];s(this)&&(m(t,this),r.push(this));for(var o=0;o<arguments.length;o++){var i=arguments[o];s(i)&&(m(t,i),r.push(i))}var c=l(t,e),u=t.composers;if(n(u)&&u.length>0)for(var f=0;f<u.length;f+=1){var p=(0,u[f])({stamp:c,composables:r});c=a(p)?p:c}return c}},function(e,t){e.exports=function(e){return\"function\"==typeof e}},function(e,t){var r;r=function(){return this}();try{r=r||Function(\"return this\")()||(0,eval)(\"this\")}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t){e.exports=Array.isArray},function(e,t,r){var n=r(3);e.exports=function(e){return n(e)&&n(e.compose)}},function(e,t){e.exports=Object.assign},function(e,t,r){var n=r(15),o=r(1),i=r(5);function a(e,t){if(void 0===t)return e;if(i(t))return(i(e)?e:[]).concat(t);if(!n(t))return t;for(var r=o(e)?e:{},s=Object.keys(t),c=0;c<s.length;c+=1){var u=s[c],f=t[u];if(void 0!==f){var l=r[u],p=n(l)||i(f)?l:{};r[u]=a(p,f)}}return r}e.exports=function(e){for(var t=1;t<arguments.length;t++)e=a(e,arguments[t]);return e}},function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(0)),o=i(r(18));function i(e){return e&&e.__esModule?e:{default:e}}t.default=(0,n.default)({properties:{name:\"baseModel\",config:{remote:{path:void 0,token:void 0,pullForm:!1},local:{connector:\"loki\"},merge:{connector:\"formio-loki\"}}},methods:{getModelName:function(){return this.name},getFluentConfig:function(){var t=void 0;return\"undefined\"!=typeof window&&window&&window._FLUENT_?t=window._FLUENT_:e&&e._FLUENT_&&(t=e._FLUENT_),t},getConnector:function(e,t){return Array.isArray(e)?this.getConnectorFromArray(e,t):e instanceof Object?e:void 0},getConnectorFromArray:function(e,t){var r=this;if(1===e.length)return e[0];if(this.config&&this.config[t]&&this.config[t].connector){var n=e.find(function(e){return e.name===r.config[t].connector});if(n instanceof Object)return n}var o=e.find(function(e){return e.default});return o instanceof Object?o:void 0},remote:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.token,r=void 0===t?void 0:t,n=e.pullForm,o=void 0===n?void 0:n,i=this.getFluentConfig(),a=i&&i.connectors&&i.connectors.remote;if(!a)throw new Error(\"No remote connector was defined. Please define it using Fluent.config()\");var s=this.getConnector(a,\"remote\");if(this.config.remote.token=r||this.config.remote.token,o&&(this.config.remote.pullForm=o||this.config.remote.pullForm),s)return s.connector({remoteConnection:this.config.remote,connector:s});throw new Error(\"No default remote connector found. Please assign one as your default in Fluent.config\")},local:function(){var e=this.getFluentConfig(),t=e&&e.connectors&&e.connectors.local;if(!t)throw new Error(\"No local connector was defined. Please define it using Fluent.config()\");var r=this.getConnector(t,\"local\");if(r)return r.connector({name:this.name,connector:r});throw new Error(\"No default local connector found. Please assign one as your default in Fluent.config\")},merged:function(){var e=this.local(),t=this.remote(),r=this.getFluentConfig(),n=r&&r.connectors&&r.connectors.merge;if(!n)throw new Error(\"No merge connector was defined. Please define it using Fluent.config()\");var o=this.getConnector(n,\"merge\");if(o)return o.connector({local:e,remote:t,name:this.name,connector:o});throw new Error(\"No default merge connector found. Please assign one as your default in Fluent.config\")}}}).compose(o.default)}).call(this,r(4))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o=a(r(0)),i=a(r(11));function a(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}t.default=(0,o.default)({init:function(e){if(!Array.isArray(e))throw new Error(\"Collect method only accepts arrays of data\");this.data=e},properties:{data:[]},methods:{get:function(){return this.data},all:function(){return this.get()},avg:function(e){return this.average(e)},average:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=[].concat(s(this.data)),r=t.reduce(function(t,r){var n=r;if(r instanceof Object){var o=i.default.getFromPath(r,e,void 0);void 0!==o&&o.value&&(n=o.value)}return t+n},0);try{return r/t.length}catch(e){throw new Error('Division between \"'+r+'\" and \"'+t.length+'\" is not valid.')}},chunks:function(e){for(var t=[].concat(s(this.data)),r=[];t.length;)r.push(t.splice(0,e));return this.data=r,this},collapse:function(){var e=[];return[].concat(s(this.data)).forEach(function(t){Array.isArray(t)?t.forEach(function(t){e.push(t)}):e.push(t)}),this.data=e,this},unChunk:function(){return this.collapse()},combine:function(e){var t=void 0;return[].concat(s(this.data)).forEach(function(r,o){r instanceof Object?(t||(t=[]),t[o]=n({},r,{_value:e[o]})):(t||(t={}),t[r]=e[o])}),this.data=t,this},concat:function(e){return this.data=[].concat(s(this.data),s(e)),this},contains:function(){var e=void 0,t=void 0,r=void 0;return 1===arguments.length?(this.isFunction(arguments.length<=0?void 0:arguments[0])&&(r=arguments.length<=0?void 0:arguments[0]),e=arguments.length<=0?void 0:arguments[0]):(e=arguments.length<=1?void 0:arguments[1],t=arguments.length<=0?void 0:arguments[0]),[].concat(s(this.data)).some(function(n,o){if(r)return!!r(n,o);var a=n;if(n instanceof Object){var s=i.default.getFromPath(n,t,void 0);s.value&&(a=s.value)}return a===e})},count:function(){return this.data.length},isFunction:function(e){return e&&\"[object Function]\"==={}.toString.call(e)}}})},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(){var e=function(e,t){try{return e()}catch(e){return t}};return Object.freeze({get:e,getFromPath:function(t,r,n){var o=r;r.includes(\" as \")&&(o=(r=r.split(\" as \"))[0]);var i=e(function(){return Array.isArray(r)&&r[1].trim()},void 0);var a=o.replace(/\\[/g,\".\").replace(/]/g,\"\").split(\".\").filter(Boolean).map(function(e){return e.trim()}).every(function(e){return!(e&&void 0===(t=t[e]))})?t:n;return{label:i||o,value:a}}})}();t.default=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Interface=t.Fluent=t.Model=void 0;var n=a(r(13)),o=a(r(9)),i=a(r(19));function a(e){return e&&e.__esModule?e:{default:e}}t.Model=o.default,t.Fluent=n.default,t.Interface=i.default},function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(0)),o=a(r(9)),i=a(r(10));function a(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}var c=(0,n.default)({init:function(){this.registerGlobalVariable()},properties:{},methods:{model:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,s(t))},extend:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,s(t))},compose:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,s(t))},collect:function(e){return(0,i.default)(e)},registerGlobalVariable:function(){\"undefined\"!=typeof window&&window&&!window._FLUENT_&&(window._FLUENT_={connectors:{},models:{}}),e&&!e._FLUENT_&&(e._FLUENT_={connectors:{},models:{}})},registerModel:function(t){var r=t&&t[0]&&t[0].properties&&t[0].properties.name?t[0].properties.name:void 0;if(r&&\"baseModel\"!==r){if(\"string\"!=typeof r)throw new Error(\"You must assign a name to your Model when using Fluent.compose\");\"undefined\"==typeof window?e._FLUENT_.models[r]=!0:window._FLUENT_.models[r]=!0}},config:function(t){var r=t.REMOTE_CONNECTORS,n=void 0===r?void 0:r,o=t.LOCAL_CONNECTORS,i=void 0===o?void 0:o,a=t.MERGE_CONNECTORS,s=void 0===a?void 0:a;\"undefined\"!=typeof window&&window&&(window._FLUENT_.connectors={local:i,remote:n,merge:s}),void 0!==e&&e&&(e._FLUENT_.connectors={local:i,remote:n,merge:s})},getConfig:function(){return\"undefined\"!=typeof window&&window?window._FLUENT_:void 0!==e&&e?e._FLUENT_:void 0}}})();t.default=c}).call(this,r(4))},function(e,t,r){e.exports=r(1)},function(e,t){e.exports=function(e){return Boolean(e)&&\"object\"==typeof e&&Object.getPrototypeOf(e)===Object.prototype}},function(e,t,r){var n=r(2);function o(e){return function(t){\"use strict\";var r={};return r[e]=t,this&&this.compose?this.compose(r):n(r)}}var i=o(\"properties\"),a=o(\"staticProperties\"),s=o(\"configuration\"),c=o(\"deepProperties\"),u=o(\"staticDeepProperties\"),f=o(\"deepConfiguration\"),l=o(\"initializers\");e.exports=n({staticProperties:{methods:o(\"methods\"),props:i,properties:i,statics:a,staticProperties:a,conf:s,configuration:s,deepProps:c,deepProperties:c,deepStatics:u,staticDeepProperties:u,deepConf:f,deepConfiguration:f,init:l,initializers:l,composers:o(\"composers\"),propertyDescriptors:o(\"propertyDescriptors\"),staticPropertyDescriptors:o(\"staticPropertyDescriptors\")}})},function(e,t){e.exports=function(e){return\"string\"==typeof e}},function(e,t,r){var n=r(2),o=new WeakMap,i=function(e,t){function r(){\"use strict\";var t=o.get(this);return e.apply(t,arguments)}return Object.defineProperty(r,\"name\",{value:t,configurable:!0}),r};function a(e,t){var r=t.stamp.compose,n=r.deepConfiguration.Privatize.methods,a={};o.set(a,this);var s=r.methods;if(!s)return a;for(var c=Object.keys(s),u=0;u<c.length;u++){var f=c[u];n.indexOf(f)<0&&(a[f]=i(s[f],f))}if(\"undefined\"!=typeof Symbol){var l=Symbol.for(\"stamp\");s[l]&&(a[l]=t.stamp)}return a}var s=n({initializers:[a],deepConfiguration:{Privatize:{methods:[]}},staticProperties:{privatizeMethods:function(){\"use strict\";for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];\"string\"==typeof r&&r.length>0&&e.push(r)}return(this&&this.compose?this:s).compose({deepConfiguration:{Privatize:{methods:e}}})}},composers:[function(e){var t=e.stamp.compose.initializers;t.splice(t.indexOf(a),1),t.push(a)}]});e.exports=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(0)),o=a(r(11)),i=a(r(10));function a(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function c(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){return function n(o,i){try{var a=t[o](i),s=a.value}catch(e){return void r(e)}if(!a.done)return Promise.resolve(s).then(function(e){n(\"next\",e)},function(e){n(\"throw\",e)});e(s)}(\"next\")})}}t.default=(0,n.default)({init:function(e){var t=e.name,r=e.remoteConnection,n=e.connector;if(!t&&!r)throw new Error(\"Model must have a name or path\");if(!n)throw new Error(\"Model must have a connector. Please register one using Fluent.config\");this.name=t||this.name,this.remoteConnection=r||this.remoteConnection,this.connector=n||this.connector,this.chainReference=[],this.whereArray=[],this.orWhereArray=[],this.selectArray=[],this.orderByArray=[],this.limitNumber=void 0,this.offsetNumber=void 0,this.populate=[],this.chunk=null,this.pullSize=null,this.ownerEmail=void 0},properties:{operators:[\"=\",\"<\",\">\",\"<=\",\">=\",\"<>\",\"!=\",\"in\",\"nin\",\"like\",\"regexp\",\"startsWith\",\"endsWith\",\"contains\"]},methods:{get:function(){throw new Error(\"get() method not implemented\")},all:function(){throw new Error(\"all() method not implemented\")},find:function(e){throw new Error(\"find() method not implemented\")},findOne:function(){throw new Error(\"findOne() method not implemented\")},remove:function(){throw new Error(\"remove() method not implemented\")},softDelete:function(){throw new Error(\"softDelete() method not implemented\")},insert:function(){throw new Error(\"insert() method not implemented\")},update:function(){throw new Error(\"update() method not implemented\")},clear:function(){throw new Error(\"clear() method not implemented\")},updateOrCreate:function(){throw new Error(\"updateOrCreate() method not implemented\")},findAndRemove:function(){throw new Error(\"findAndRemove() method not implemented\")},paginate:function(e,t){throw new Error(\"paginate() method not implemented\")},owner:function(e){return this.chainReference.push({method:\"owner\",args:e}),this.ownerEmail=e,this},own:function(e){return this.owner(e)},first:function(){var e=this;return c(regeneratorRuntime.mark(function t(){var r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.get();case 2:return r=t.sent,t.abrupt(\"return\",o.default.get(function(){return r[0]},[]));case 4:case\"end\":return t.stop()}},t,e)}))()},collect:function(){var e=this;return c(regeneratorRuntime.mark(function t(){var r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.get();case 2:if(r=t.sent,Array.isArray(r)){t.next=5;break}throw new Error(\"Collect method only accepts arrays of data\");case 5:return t.abrupt(\"return\",(0,i.default)(r));case 6:case\"end\":return t.stop()}},t,e)}))()},select:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return t=this.prepareInput(t),this.chainReference.push({method:\"select\",args:t}),this.selectArray=this.selectArray.concat(t).filter(function(e,t,r){return r.indexOf(e)===t}),this},jsApplySelect:function(e){var t=this,r=Array.isArray(e)?[].concat(s(e)):[e];return this.selectArray.length>0&&(r=r.map(function(e){var r={};return t.selectArray.forEach(function(t){var n=o.default.getFromPath(e,t,void 0);void 0!==o.default.get(function(){return n.value},void 0)&&(r[n.label]=n.value)}),r})),r},offset:function(e){return this.chainReference.push({method:\"offset\",args:e}),this.offsetNumber=e,this},skip:function(e){return this.offset(e)},where:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"where\",args:r}),this.whereArray=[],(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There where clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.whereArray.push(t)}),this},andWhere:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"andWhere\",args:r}),(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There where clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.whereArray.push(t)}),this},orWhere:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"orWhere\",args:r}),(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There orWhere clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.orWhereArray.push(t)}),this},limit:function(e){return this.chainReference.push({method:\"limit\",args:e}),this.limitNumber=e,this},take:function(e){return this.limit(e)},pluck:function(e){var t=this;return c(regeneratorRuntime.mark(function r(){var n;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return t.chainReference.push({method:\"pluck\",args:e}),r.next=3,t.get();case 3:return n=(n=r.sent).map(function(t){var r=o.default.getFromPath(t,e,void 0);if(void 0!==r.value)return r.value}),r.abrupt(\"return\",n);case 6:case\"end\":return r.stop()}},r,t)}))()},orderBy:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.chainReference.push({method:\"orderBy\",args:t}),this.orderByArray=t,this},jsApplyOrderBy:function(e){var t=[].concat(s(e));if(0===this.orderByArray.length)return t;var r=this.orderByArray[0];if(this.selectArray.length>0&&(r.includes(\".\")||r.includes(\"[\")))throw new Error('Cannot orderBy nested attribute \"'+r+'\" when using Select. You must rename the attribute');var n=this.orderByArray[1],i=this.orderByArray[2];return i||(i=\"string\"),t=t.sort(function(e,t){var a=o.default.getFromPath(e,r,void 0).value,s=o.default.getFromPath(t,r,void 0).value;if(void 0===a||void 0===s)throw new Error('Cannot order by property \"'+r+'\" not all values have this property');return i.includes(\"string\")||i.includes(\"number\")?\"asc\"===n?a>s?1:a<s?-1:0:a>s?-1:a<s?1:0:i.includes(\"date\")?\"asc\"===n?new Date(a)-new Date(s):new Date(s)-new Date(a):void 0})},prepareInput:function(e){var t=[];return e.forEach(function(e){var r=Array.isArray(e)?e:e.split(\",\");r=r.map(function(e){return e.trim()}),t=t.concat(r)}),t.filter(function(e,t,r){return r.indexOf(e)===t}),t},ArrayInsert:function(e,t){var r=this;return c(regeneratorRuntime.mark(function n(){var o,i,a,s,c,u,f,l;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:o=1,i=e.length,a=!0,s=!1,c=void 0,n.prev=5,u=e[Symbol.iterator]();case 7:if(a=(f=u.next()).done){n.next=26;break}return l=f.value,t&&t.showProgress&&console.log(\"Inserting \"+o+\" of \"+i),n.prev=10,n.next=13,r.insert(l,t);case 13:n.sent,t&&t.showProgress&&console.log(\"Element \"+o+\" inserted\"),o++,n.next=23;break;case 18:n.prev=18,n.t0=n.catch(10),console.log(\"ERROR - Element \"+o+\" - \"+JSON.stringify(l)+\" could not be inserted\"),console.log(n.t0),o++;case 23:a=!0,n.next=7;break;case 26:n.next=32;break;case 28:n.prev=28,n.t1=n.catch(5),s=!0,c=n.t1;case 32:n.prev=32,n.prev=33,!a&&u.return&&u.return();case 35:if(n.prev=35,!s){n.next=38;break}throw c;case 38:return n.finish(35);case 39:return n.finish(32);case 40:case\"end\":return n.stop()}},n,r,[[5,28,32,40],[10,18],[33,,35,39]])}))()}}})}])});\n//# sourceMappingURL=fast-fluent.min.js.map","import { Fluent } from \"fast-fluent\";\nimport Utilities from \"utilities\";\nimport moment from \"moment\";\n// TODO We still have to figure out how to solve the problem of\n// The CONFIG URL and FLUENT_URL changing on APP sync\n// Every page refresh will make the urls go back to their default\nexport default Fluent.model({\n  properties: {\n    name: \"Configuration\",\n    config: {\n      remote: {\n        connector: 'formioConfig',\n        token: ''\n      }\n    }\n  },\n  methods: {\n    /**\n     * Decides whether to set Configurations\n     * Online or Offline\n     * @param {Object} config.appConfig The application Config\n     * @param {Boolean} config.forceOnline If we need online\n     */\n    async set({ appConf, forceOnline }) {\n      if (!forceOnline) {\n        return this.setOffline({ appConf });\n      }\n      return this.setOnline({ appConf });\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async setOffline({ appConf }) {\n      let localConfig = await this.local().first();\n\n      let localConfigDate = this.getConfigDate(localConfig);\n      let offlineConfigDate = appConf.offlineFiles.lastUpdated.date;\n\n      // If local config is newer than offline\n      if (localConfigDate > offlineConfigDate) {\n        return localConfig;\n      }\n\n      if (localConfig) {\n        await this.local().clear({ sure: true });\n      }\n\n      return this.local().insert({\n        ...appConf.offlineFiles.Configuration.data,\n        fastUpdated: moment().unix()\n      });\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async setOnline({ appConf }) {\n      let localConfig = await this.local().first();\n\n      let remoteConfig = await this.remote().first();\n\n      if (!localConfig && !remoteConfig) {\n        throw new Error(\n          \"Application is not connected to internet, or the configuration file cannot be pulled\"\n        );\n      }\n\n      if (!remoteConfig) {\n        return localConfig;\n      }\n\n      if (localConfig) {\n        await this.local().clear({ sure: true });\n      }\n      return this.local().insert({\n        ...remoteConfig.data,\n        fastUpdated: moment().unix()\n      });\n    },\n    /**\n     *\n     * @param {*} config\n     */\n    getConfigDate(config) {\n      return Utilities.get(() => config.fastUpdated, 0);\n    }\n  }\n})\n  .compose(Fluent.privatize)\n  .privatizeMethods(\n    \"setOnlineConfig\",\n    \"setOfflineConfig\",\n    \"getConfigDate\",\n    \"assingGlobalVariable\",\n    \"getRemote\"\n  )();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import moment from \"moment\";\nimport Utilities from \"utilities\";\nimport { Fluent } from \"fast-fluent\";\nimport Labels from \"./repositories/Labels\";\nimport Configuration from \"./Configuration\";\n\nexport default Fluent.model({\n  properties: {\n    name: \"Form\",\n    config: {\n      remote: {\n        path: \"form\",\n        pullForm: true\n      }\n    }\n  },\n  methods: {\n    getModel({ path }) {\n      return Fluent.model({\n        properties: {\n          config: {\n            remote: { path }\n          }\n        }\n      })();\n    },\n    find({ path }) {\n      return this.local()\n        .where(\"data.path\", \"=\", path)\n        .first();\n    },\n    /**\n     *\n     * @param {*} action\n     */\n    async cardFormattedForms(action) {\n      let result = await this.local().get();\n      result = result.filter(o => {\n        return o.data.tags.indexOf(\"visible\") > -1;\n      });\n      result = result.sort((a, b) => {\n        a = a.data.title;\n        b = b.data.title;\n        return a > b ? 1 : a < b ? -1 : 0;\n      });\n\n      result = result.map(f => {\n        return {\n          title: f.data.title,\n          tags: f.data.tags,\n          customIcon: true,\n          icon:\n            action === \"create\"\n              ? \"statics/customSVG/startSurvey.svg\"\n              : \"statics/customSVG/collectedData.svg\",\n          subtitle: \"Last updated: \" + moment(f.data.modified).fromNow(),\n          actions: [\n            {\n              text: action === \"create\" ? \"Start\" : \"View data\",\n              target: \"form\",\n              view: action,\n              path: f.data.path\n            }\n          ]\n        };\n      });\n\n      result = { cards: result };\n      return result;\n    },\n    /**\n     *\n     */\n    async FormLabels(i18n) {\n      let forms = await this.local().get();\n\n      return Labels.get(forms, i18n);\n    },\n    /**\n     *\n     * @param {*} forms\n     */\n    getUpdatedAt(forms) {\n      return Utilities.get(() => forms[0].fastUpdated, 0);\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async setOffline({ appConf }) {\n      let localForms = await this.local().get();\n\n      let localDate = this.getUpdatedAt(localForms);\n      let config = await Configuration.local().first();\n      let offlineForms = Utilities.get(() => appConf.offlineFiles.Forms);\n\n      // If the JSON file is newer than the local\n      // DB data\n      if (config.fastUpdated < localDate) {\n        return localForms;\n      }\n\n      if (localForms) {\n        await this.local().clear({ sure: true });\n      }\n      const unixDate = moment().unix();\n      offlineForms.forEach(async form => {\n        await this.local().insert({ data: form, fastUpdated: unixDate });\n      });\n      return offlineForms;\n    },\n    /**\n     *\n     */\n    async setOnline() {\n      let remoteForms = await this.remote().limit(9999999).get();\n      let unixDate = moment().unix();\n\n      if (remoteForms && !Utilities.isEmpty(remoteForms)) {\n        await this.local().clear({ sure: true });\n        const forms = remoteForms.reduce((forms, form) => {\n          const element = {\n            data: form,\n            fastUpdated: unixDate\n          };\n          forms.push(element);\n          return forms;\n        }, []);\n        return await this.local().insert(forms, { showProgress: true });\n      }\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async set({ appConf, forceOnline }) {\n      if (!forceOnline) {\n        return this.setOffline({ appConf });\n      }\n      return this.setOnline();\n    },\n    async getFastTableTemplates({ path }) {\n      let fullForm = await this.local()\n        .where(\"data.path\", \"=\", path)\n        .first();\n\n      let templates = [];\n\n      Utilities.eachComponent(fullForm.data.components, c => {\n        if (c.properties && c.properties.FAST_TABLE_TEMPLATE) {\n          templates.push({\n            key: c.key,\n            template: c.properties.FAST_TABLE_TEMPLATE\n          });\n        }\n      });\n\n      return templates;\n    }\n  }\n})();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import Event from './Event';\nimport Promise from 'bluebird';\nimport axios from 'axios';\n/* eslint-disable no-unused-vars */\nlet Connection = (() => {\n  let online = (typeof window !== 'undefined') && window && window.navigator ? window.navigator.onLine : true;\n\n  function setOnline() {\n    if (!online) {\n      online = true;\n      Event.emit({\n        name: 'FAST:CONNECTION:ONLINE',\n        data: online,\n        text: 'Application is now online'\n      });\n    }\n  }\n\n  function setOffline() {\n    if (online) {\n      online = false;\n      Event.emit({\n        name: 'FAST:CONNECTION:OFFLINE',\n        data: online,\n        text: 'Application is now offline'\n      });\n    }\n  }\n\n  /**\n   * [status description]\n   * @return {Promise} [description]\n   */\n  function initEventListeners() {\n    Event.listen({\n      name: 'online',\n      callback: function () {\n        console.log('App is now online');\n        setOnline();\n      }\n    });\n    Event.listen({\n      name: 'offline',\n      callback: function () {\n        console.log('App is now offline');\n        setOffline();\n      }\n    });\n  }\n\n  function isOnline() {\n    return new Promise((resolve, reject) => {\n      axios.get('https://yesno.wtf/api')\n      .then(function (res) {\n        resolve(true);\n      })\n      .catch(function (err) {\n        resolve(false);\n      })\n    });\n  }\n\n  return Object.freeze({\n    isOnline,\n    initEventListeners\n  });\n})();\n\nexport default Connection;\n","import Auth from \"repositories/Auth/Auth\";\nimport moment from \"moment\";\nimport Utilities from \"utilities\";\nimport Form from \"models/Form\";\nimport { Fluent } from \"fast-fluent\";\nimport Columns from \"./repositories/Columns\";\n\nexport default Fluent.model({\n  properties: {\n    name: \"Submission\",\n    config: {\n      remote: undefined\n    }\n  },\n  init({ path }) {\n    this.path = path;\n    this.config = {\n      remote: { path }\n    };\n  },\n  methods: {\n    async form() {\n      // return this.belongTo('Form', 'path', 'path');\n    },\n    async getUnsync() {\n      let unsynced = (await this.local()\n        .where(\"sync\", \"=\", false)\n        .andWhere(\"draft\", \"=\", false)\n        .andWhere(\"syncError\", \"=\", false)\n        .owner(Auth.email())\n        .orderBy(\"created\", \"desc\", \"date\")\n        .get()).filter(d => {\n        return !d.queuedForSync;\n      });\n\n      return unsynced;\n    },\n    async showView({ from, limit, owner }) {\n      let cols = (await Columns.getTableView(this.path)).map(\n        o => `data.${o.path} as ${o.path}`\n      );\n\n      cols = [\n        ...cols,\n        \"_id\",\n        \"created\",\n        \"modified\",\n        \"syncError\",\n        \"draft\",\n        \"sync\"\n      ];\n\n      let submissions = [];\n\n      if (from === \"remote\") {\n        submissions = await this.remote()\n          .select(cols)\n          .limit(limit)\n          .get();\n      } else {\n        submissions = await this.merged()\n          .select(cols)\n          .limit(limit)\n          .owner(owner)\n          .get();\n      }\n\n      let templates = await Form.getFastTableTemplates({ path: this.path });\n\n      submissions = submissions.map(s => {\n        let sub = {\n          _id: s._id,\n          status: s.sync === false ? \"offline\" : \"online\",\n          draft: s.draft,\n          HumanUpdated: Number.isInteger(s.modified)\n            ? moment.unix(s.modified).fromNow()\n            : moment(s.modified).fromNow(),\n          syncError: s.syncError ? s.syncError : false,\n          updated: Number.isInteger(s.modified)\n            ? s.modified\n            : moment(s.modified).unix()\n        };\n\n        // Custom templates using FAST_TABLE_TEMPLATE propertie\n        templates.forEach(t => {\n          /* eslint-disable */\n          let newFx = new Function(\"value\", \"data\", t.template);\n          /* eslint-enable */\n          try {\n            s[t.key] = newFx(s[t.key], s);\n          } catch (error) {\n            console.log(\"There is an error in one of your calculations\", error);\n          }\n        });\n\n        return { ...sub, ...s };\n      });\n\n      submissions = submissions.sort((a, b) => {\n        a = new Date(a.updated);\n        b = new Date(b.updated);\n        return a > b ? -1 : a < b ? 1 : 0;\n      });\n\n      return submissions;\n    },\n    async getParallelParticipants(_id) {\n      let currentSubmission = await this.local()\n        .where(\"_id\", \"=\", _id)\n        .get();\n\n      currentSubmission = currentSubmission[0];\n      let groupId = Utilities.get(\n        () => currentSubmission.data.data.parallelSurvey\n      );\n\n      groupId =\n        groupId && groupId !== \"[object Object]\"\n          ? JSON.parse(groupId).groupId\n          : undefined;\n\n      let submissions = await this.local()\n        .where(\"path\", \"=\", this.path)\n        .get();\n\n      let a = submissions.filter(submission => {\n        let parallelSurveyID = Utilities.get(\n          () => submission.data.data.parallelSurvey\n        );\n\n        parallelSurveyID =\n          parallelSurveyID && parallelSurveyID !== \"[object Object]\"\n            ? JSON.parse(parallelSurveyID).groupId\n            : undefined;\n        return parallelSurveyID && parallelSurveyID === groupId;\n      });\n\n      a = a.map(e => {\n        e.data.data.parallelSurvey;\n      });\n      a = a.map(survey => {\n        return JSON.parse(survey);\n      });\n      return a;\n    },\n    getParallelSurvey(submission) {\n      let parallelsurveyInfo =\n        Utilities.get(() => submission.data.data.paraparallelSurvey) ||\n        Utilities.get(() => submission.data.parallelSurvey);\n\n      parallelsurveyInfo =\n        parallelsurveyInfo && parallelsurveyInfo !== \"[object Object]\"\n          ? JSON.parse(parallelsurveyInfo)\n          : undefined;\n\n      return parallelsurveyInfo;\n    },\n    setParallelSurvey(parallelsurveyInfo) {\n      return JSON.stringify(parallelsurveyInfo);\n    },\n    async getGroups(formId) {\n      let submissions = await this.local().find();\n\n      submissions = formId\n        ? submissions.filter(submission => {\n            return submission.data.formio.formId === formId;\n          })\n        : submissions;\n\n      let groups = submissions.map(submission => {\n        return this.local().getParallelSurvey(submission)\n          ? {\n              groupId: this.local().getParallelSurvey(submission).groupId,\n              groupName: this.local().getParallelSurvey(submission).groupName\n            }\n          : undefined;\n      });\n\n      groups = groups.filter(group => {\n        return typeof group !== \"undefined\";\n      });\n\n      return Utilities.uniqBy(groups, \"groupId\");\n    },\n    async getGroup(id) {\n      let groups = await this.local().getGroups();\n\n      groups = groups.filter(group => {\n        return group.groupId === id;\n      });\n      return groups[0];\n    },\n\n    async removeFromGroup(submission) {},\n\n    async assingToGroup(submissionId, groupId) {\n      let group = await this.local().getGroup(groupId[0]);\n      let submission = await this.local().get(submissionId);\n\n      let parallelData = this.local().getParallelSurvey(submission);\n\n      let parallelSurvey = {\n        ...parallelData,\n        groupId: group.groupId,\n        groupName: group.groupName\n      };\n\n      submission.data.data.parallelSurvey = this.local().setParallelSurvey(\n        parallelSurvey\n      );\n      await this.local().update(submission);\n    }\n  }\n});\n","/**\n * @param { Promise } promise\n * @param { Object= } errorExt - Additional Information you can pass to the err object\n * @return { Promise }\n */\nfunction to(promise, errorExt) {\n    return promise\n        .then(function (data) { return [null, data]; })\n        .catch(function (err) {\n        if (errorExt) {\n            Object.assign(err, errorExt);\n        }\n        return [err, undefined];\n    });\n}\n\nexport { to };\nexport default to;\n//# sourceMappingURL=await-to-js.es5.js.map\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","let Event = (() => {\n  let CustomEvent = function (event, params) {\n    var evt = document.createEvent('CustomEvent');\n\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n\n  function emit ({ name, data, text }) {\n    if (!name) throw new Error('Event must have a name.');\n    if (!data) throw new Error('Event must have data.');\n    if (!text) throw new Error('Event must have a text.');\n    let customEvent = CustomEvent(name, {\n      detail: {\n        data: data,\n        text: text\n      }\n    });\n\n    window.dispatchEvent(customEvent);\n  }\n  function listen ({ name, callback }) {\n    if (!name) throw new Error('Listener must have a name.');\n    if (!callback) throw new Error('Listener must have a callback.');\n    window.addEventListener(name, callback);\n  }\n\n  function remove ({ name, callback }) {\n    if (!name) throw new Error('Listener must have a name to detach');\n    if (!callback) throw new Error('Listener must have a callback to detach');\n    window.removeEventListener(name, callback);\n  }\n  return Object.freeze({\n    emit,\n    listen,\n    remove\n  });\n})();\n\nexport default Event;\n","import Utilities from 'utilities';\nimport { Fluent } from \"fast-fluent\";\nimport Configuration from './Configuration';\nimport moment from 'moment';\n\nexport default Fluent.model({\n  properties: {\n    name: 'Translation',\n    config: {\n      remote: {\n        path: 'translations'\n      }\n    }\n  },\n  methods: {\n    async getFormTranslations() {\n      let i18n = {};\n\n      let localTranslations = await this.local().first();\n\n      localTranslations = Utilities.get(() => localTranslations.data, {});\n\n      Object.keys(localTranslations).forEach(languageCode => {\n        if (languageCode !== 'type') {\n          i18n[languageCode] = localTranslations[languageCode];\n        }\n      });\n      return i18n;\n    },\n    /**\n     *\n     */\n    async supportedLanguages() {\n      let translations = await this.local().get();\n\n      if (translations.length === 0) {\n        return [];\n      }\n\n      let isoLanguages = this.getIsoLanguages();\n      let languages = [];\n\n      translations = Utilities.get(() => translations[0].data, []);\n\n      Object.keys(translations).forEach(languageCode => {\n        let iso = isoLanguages.find(l => {\n          return l.code === languageCode;\n        });\n\n        if (iso) {\n          languages.push(iso);\n        }\n      });\n\n      languages = languages.sort((a, b) => {\n        a = a.label;\n        b = b.label;\n        return a > b ? 1 : a < b ? -1 : 0;\n      });\n      return languages;\n    },\n    /**\n     *\n     */\n    getIsoLanguages() {\n      return require('resources/isoLanguages.json');\n    },\n    /**\n     *\n     * @param {*} localTranslations\n     */\n    getLocalizationDate(localTranslations) {\n      return Utilities.get(() => localTranslations[0].fastUpdated, 0);\n    },\n    /**\n     * [authenticate description]\n     * @param  {[type]} username [description]\n     * @param  {[type]} password [description]\n     * @return {[type]}          [description]\n     */\n    async set({ appConf, forceOnline }) {\n      if (!forceOnline) {\n        return this.setOffline({ appConf });\n      }\n      return this.setOnline({ appConf });\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async setOffline({ appConf }) {\n      let localTranslations = await this.local().get();\n      let localDate = this.getLocalizationDate(localTranslations);\n      let config = await Configuration.local().first();\n      let offlineTranslations = appConf.offlineFiles.Translations;\n\n      // If the offline Json is older than the local data\n      if (config.fastUpdated < localDate) {\n        return localTranslations[0].data;\n      }\n      let trans = await this.process(offlineTranslations);\n\n      return this.storeTranslations(trans);\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async setOnline({ appConf }) {\n      let localTranslations = await this.local().get();\n      let appTranslations = await this.remote()\n        .limit(50000)\n        .get();\n\n      if (appTranslations) {\n        appTranslations = await this.process(appTranslations);\n        appTranslations = await this.storeTranslations(appTranslations);\n        return appTranslations;\n      }\n\n      if (localTranslations.length > 0 && localTranslations[0].data) {\n        return localTranslations[0].data;\n      }\n    },\n    /**\n     *\n     * @param {*} translationsArray\n     */\n    async storeTranslations(translationsArray) {\n      // Remove all previous translations\n      this.local().clear({ sure: true });\n\n      // Insert the new ones\n      let appTranslations = await this.local().insert({\n        data: translationsArray,\n        fastUpdated: moment().unix()\n      });\n\n      return appTranslations.data;\n    },\n    /**\n     * [setTranslations description]\n     * @param {[type]} appTranslations [description]\n     */\n    async process(translations) {\n      let lenguages = this.getIsoLanguages();\n      let result = {};\n\n      result.label = {};\n      // Foreach of the locale lenguages, set the translations\n      lenguages.forEach(language => {\n        translations.forEach(translation => {\n          if (translation.data && translation.data[language.code]) {\n            if (!result[language.code]) {\n              result[language.code] = {};\n            }\n            result[language.code][translation.data.label] =\n              translation.data[language.code];\n          }\n\n          if (translation.data && translation.data.label) {\n            result['label'][translation.data.label] = translation.data.label;\n          }\n        });\n      });\n\n      return result;\n    },\n\n    async updateLabel(label, translation) {\n      let trans = await this.remote()\n        .where('data.label', '=', label)\n        .first();\n\n      let id = trans._id;\n\n      const newTranslations = { ...trans.data, ...translation };\n\n      let result = await this.remote().update({\n        _id: id,\n        data: newTranslations\n      });\n\n      return result;\n    },\n\n    async createTranslation(label) {\n      return this.remote().insert({\n        data: {\n          en: label,\n          label: label\n        }\n      });\n    }\n  }\n})();\n","import { Fluent } from \"fast-fluent\";\nimport Utilities from \"utilities\";\nimport Configuration from \"./Configuration\";\nimport to from \"await-to-js\";\nimport moment from \"moment\";\n\nexport default Fluent.model({\n  properties: {\n    name: \"Pages\",\n    config: {\n      remote: {\n        path: \"fast-app-pages\",\n        token: undefined\n      }\n    }\n  },\n  methods: {\n    /**\n     * Decides whether to set submissions\n     * Online or Offline\n     * @param {Object} config.appConfig The application Config\n     * @param {Boolean} config.forceOnline If we need online\n     */\n    async set({ appConf, forceOnline }) {\n      if (!forceOnline) {\n        return this.setOffline({ appConf });\n      }\n      return this.setOnline();\n    },\n    /**\n     * Sets all pages from the offline\n     * JSON files\n     * @param {Object} appConfig Application config\n     * @return {Object} App pages\n     */\n    async setOffline({ appConf }) {\n      let localPages = await this.local().first();\n      let localDate = this.getUpdatedDate(localPages);\n      let config = await Configuration.local().first();\n      let offlinePages = Utilities.get(\n        () => appConf.offlineFiles.Pages[0].data\n      );\n\n      // Check if pages follows new or legacy format\n      if (!offlinePages.hasOwnProperty(\"pages\")) {\n        const p = [];\n\n        for (let i = 0; i < appConf.offlineFiles.Pages.length; i += 1) {\n          p.push(appConf.offlineFiles.Pages[i].data);\n        }\n\n        offlinePages = {\n          pages: p,\n          submit: true\n        };\n      }\n\n      // If the configuration in the JSON file is\n      // older than the one in the local DB\n      if (config.fastUpdated < localDate) {\n        return Utilities.get(() => localPages.data);\n      }\n\n      if (localPages) {\n        await this.local().clear({ sure: true });\n      }\n      return this.local().insert({\n        ...offlinePages,\n        fastUpdated: moment().unix()\n      });\n    },\n    /**\n     * Sets all pages from the online\n     * JSON files\n     * @return {Object} App pages\n     */\n    async setOnline() {\n      let localPages = await this.local().first();\n      let [error, pages] = await to(\n        this.remote()\n          .limit(9999999)\n          .get()\n      );\n\n      if (error) {\n        console.log(error);\n        throw new Error(\"Could not get remote Pages.\");\n      }\n\n      // Check if pages follows new or legacy format\n      if (!pages[0].data.hasOwnProperty(\"pages\")) {\n        const p = [];\n\n        for (let i = 0; i < pages.length; i += 1) {\n          p.push(pages[i].data);\n        }\n\n        pages = {\n          pages: p,\n          submit: true\n        };\n      } else {\n        pages = Utilities.get(() => pages[0].data);\n      }\n\n      // If we pulled the remote pages and\n      // The submission is not empty\n      if (pages && !Utilities.isEmpty(pages)) {\n        if (localPages) {\n          await this.local().clear({ sure: true });\n        }\n        return this.local().insert({ ...pages, fastUpdated: moment().unix() });\n      }\n\n      return localPages;\n    },\n    /**\n     * Takes the local pages and gets the\n     * updated at date\n     *\n     * @param {Array} pages Array of local pages\n     * @returns {number} date las updated\n     */\n    getUpdatedDate(pages) {\n      return Utilities.get(() => pages.fastUpdated, 0);\n    }\n  }\n})();\n","import axios from 'axios';\nimport Configuration from './Configuration';\nimport Utilities from 'utilities';\nimport { Fluent } from \"fast-fluent\";\nimport Connection from '../Wrappers/Connection';\nimport to from 'await-to-js';\nimport Form from '../models/Form';\n\nexport default Fluent.model({\n  properties: {\n    name: 'User',\n    config: {\n      remote: {\n        path: 'user',\n        token: undefined\n      }\n    }\n  },\n  methods: {\n    async storeLocally(user) {\n      let localUser = await this.local()\n        .where('data.email', '=', user.data.email)\n        .first();\n\n      user = Utilities.deleteNulls(user);\n      let isUserAlreadyStored = !!localUser && !Utilities.isEmpty(localUser);\n\n      //  check if user is already present in local storage\n      if (isUserAlreadyStored) {\n        throw new Error('The user email is already taken');\n      }\n\n      if (Connection.isOnline()) {\n        let [error, onlineUser] = await to(\n          Form.getModel({ path: 'userregister' })\n            .remote()\n            .insert(user)\n        );\n\n        if (error) {\n          throw new Error('The user email is already taken');\n        }\n        return this.local().insert(onlineUser);\n      }\n\n      return this.local().insert(user);\n    },\n    async updateUser(user) {\n      let localUser = await this.local()\n        .where('data.email', '=', user.data.email)\n        .pluck('_id');\n\n      localUser.forEach(async (_id) => {\n        await this.local().remove(_id);\n      });\n\n      user = Utilities.deleteNulls(user);\n\n      return this.local().insert(user);\n    },\n    async login({ credentials, role }) {\n      let url = (await Configuration.local().first()).APP_URL;\n\n      if (role === 'admin') {\n        url = url + '/admin/login';\n      } else {\n        url = url + '/user/login';\n      }\n      return axios.post(url, {\n        data: credentials\n      });\n    }\n  }\n})();\n","import Configuration from '../../models/Configuration';\nimport md5 from 'md5';\nimport User from 'models/User';\nimport Connection from 'Wrappers/Connection';\nimport Role from 'models/Role';\nimport Promise from 'bluebird';\nimport Utilities from 'utilities';\n\nlet Auth = (() => {\n  /**\n   *\n   *\n   * @param {any} credentials\n   * @returns\n   */\n  const localAuthenticate = async function (credentials) {\n    const { username, password } = credentials;\n    let config = await Configuration.local().first();\n\n    // Hash password\n    const hashedPassword = md5(password, config.MD5_KEY);\n\n    // Get the user\n    let dbUser = await User.local()\n      .where('data.username', '=', username)\n      .get();\n    let userFound = dbUser && dbUser[0] ? dbUser[0] : undefined;\n\n    if (!userFound) {\n      throw new Error();\n    }\n    // Compare hashed passwords\n    const isValidUser = userFound.data.hashedPassword === hashedPassword;\n\n    if (!isValidUser) {\n      throw new Error();\n    }\n    // If is valid, return the user\n    return userFound;\n  };\n  /**\n   *\n   *\n   * @param {any} credentials\n   * @param {any} baseUrl\n   * @param {any} role\n   * @returns\n   */\n  const remoteAuthenticate = async (credentials, baseUrl, role) => {\n    let response = await User.login({ credentials: credentials, role: role });\n    let user = response.data;\n\n    await User.updateUser(user);\n    return response;\n  };\n\n  /**\n   *\n   * Authenticates the User with the given credentials\n   * @param {any} credentials\n   * @param {any} baseUrl\n   * @param {any} role\n   * @returns\n   */\n  const authenticate = async function (credentials, baseUrl, role) {\n    let isOnline = await Connection.isOnline();\n\n    if (isOnline) {\n      return remoteAuthenticate(credentials, baseUrl, role);\n    }\n    return localAuthenticate(credentials, baseUrl);\n  };\n  /**\n   *\n   *\n   * @param {any} credentials\n   * @param {any} baseUrl\n   * @param {any} role\n   * @returns\n   */\n\n  const attempt = function (credentials, baseUrl, role) {\n    role = role || 'user';\n\n    return new Promise((resolve, reject) => {\n      authenticate(credentials, baseUrl, role)\n        // If credentials are OK\n        .then(async (response) => {\n          let headers = response.headers || {};\n          let user = response.data;\n          /* eslint-disable*/\n\n          user.x_jwt_token = headers['x-jwt-token'];\n          /* eslint-enable*/\n\n          // Save auth user\n          localStorage.setItem('authUser', JSON.stringify(user));\n          localStorage.setItem('formioToken', headers['x-jwt-token']);\n          // user.isAdmin = true\n          let roles = await Role.local().first();\n\n          user.rolesNames = [];\n          Object.keys(roles).forEach((key) => {\n            if (key !== '$loki' && key !== '_id' && key !== 'meta') {\n              if (user.roles && user.roles.indexOf(roles[key]._id) !== -1) {\n                user.rolesNames.push(roles[key]);\n              }\n            }\n          });\n\n          localStorage.setItem('authUser', JSON.stringify(user));\n\n          resolve(user);\n        })\n        // If there are errors\n        .catch((error) => {\n          console.log('There was an error over here!');\n          reject(error);\n        });\n    });\n  };\n  /**\n   *\n   *\n   * @returns\n   */\n\n  const user = function () {\n    try {\n      let user = JSON.parse(localStorage.getItem('authUser'));\n\n      return user === null ? false : user;\n    } catch (e) {\n      localStorage.removeItem('authUser');\n      return false;\n    }\n  };\n  /**\n   *\n   *\n   * @returns\n   */\n\n  const email = function () {\n    let email = '';\n\n    if (Auth.user() && Auth.user().data && Auth.user().data.email) {\n      email = Auth.user().data.email;\n    } else if (Auth.user() && Auth.user().email) {\n      email = Auth.user().email;\n    }\n    return email;\n  };\n  /**\n   *\n   *\n   * @param {any} roleName\n   * @returns\n   */\n\n  const hasRole = function (roleName) {\n    let user = JSON.parse(localStorage.getItem('authUser'));\n\n    user = user === null ? false : user;\n\n    let result = user.rolesNames.find((r) => {\n      return r.title === roleName;\n    });\n\n    return typeof result !== 'undefined';\n  };\n  /**\n   *\n   *\n   * @param {any} roles\n   * @returns\n   */\n\n  const hasRoleIn = function (roles) {\n    if (!roles || Utilities.isEmpty(roles)) {\n      return true;\n    }\n    return roles.some((role) => {\n      return hasRole(role) || role === 'Authenticated';\n    });\n  };\n  /**\n   *\n   *\n   * @param {any} rolesIds\n   * @returns\n   */\n\n  const hasRoleIdIn = async function (rolesIds) {\n    if (!rolesIds || Utilities.isEmpty(rolesIds)) {\n      return true;\n    }\n    let appRoles = await Role.local().first();\n\n    let roles = rolesIds.reduce((reducer, roleId) => {\n      Object.keys(appRoles).forEach(function (role) {\n        if (appRoles[role] && appRoles[role]._id && appRoles[role]._id === roleId) {\n          reducer.push(appRoles[role].title);\n        }\n      });\n      return reducer;\n    }, []);\n\n    return roles.some((role) => {\n      return hasRole(role) || role === 'Authenticated';\n    });\n  };\n  /**\n   * Checks if the current user is\n   * Authenticated\n   * @return {boolean}\n   */\n\n  const check = function () {\n    let user = JSON.parse(localStorage.getItem('authUser'));\n\n    return !!user && !!user.x_jwt_token;\n  };\n  /**\n   * Logs out autheticated user\n   *\n   */\n\n  const logOut = async function () {\n    await localStorage.removeItem('authUser');\n    await localStorage.removeItem('formioToken');\n    await localStorage.removeItem('formioUser');\n  };\n\n  return Object.freeze({\n    user,\n    email,\n    hasRoleIn,\n    hasRoleIdIn,\n    hasRole,\n    check,\n    logOut,\n    attempt\n  });\n})();\n\nexport default Auth;\n","import { Fluent } from \"fast-fluent\";\nimport Utilities from 'utilities';\nimport Connection from 'Wrappers/Connection';\nimport to from 'await-to-js';\nimport moment from 'moment';\n\nexport default Fluent.model({\n  properties: {\n    name: 'Role',\n    config: {\n      remote: {\n        path: 'access',\n        token: undefined,\n        pullForm: true\n      }\n    }\n  },\n  methods: {\n    async set({ url, appConf, forceOnline }) {\n      if (!forceOnline) {\n        return this.setOffline({ appConf });\n      }\n      return this.setOnline({ url });\n    },\n    getRolesDate(localRoles) {\n      return Utilities.get(() => localRoles.fastUpdated, 0);\n    },\n    async setOnline() {\n      let error;\n      let remoteRoles;\n\n      let localRoles = await this.local().first();\n\n      let isOnline = await Connection.isOnline();\n\n      if (isOnline) {\n        [error, remoteRoles] = await to(this.remote().first());\n\n        if (error) {\n          throw new Error(error);\n        }\n      }\n\n      remoteRoles = Utilities.get(() => remoteRoles.roles);\n\n      if (remoteRoles) {\n        if (localRoles) {\n          await this.local().clear();\n        }\n        remoteRoles.fastUpdated = moment().unix();\n\n        let insertedRoles = await this.local().insert(remoteRoles);\n\n        return insertedRoles;\n      }\n      return localRoles;\n    },\n    async setOffline({ appConf }) {\n      let localRoles = await this.local().first();\n\n      let rolesDate = this.getRolesDate(localRoles);\n      let offlineRolesDate = appConf.offlineFiles.lastUpdated.date;\n\n      if (offlineRolesDate > rolesDate || !localRoles) {\n        if (localRoles) {\n          await this.local().clear();\n        }\n        let insertedRoles = await this.local().insert(appConf.offlineFiles.Roles);\n\n        return insertedRoles;\n      }\n\n      return localRoles;\n    }\n  }\n})();\n","import User from 'models/User';\nimport Auth from 'repositories/Auth/Auth';\nimport Submission from 'models/Submission';\nimport OfflineData from 'repositories/Submission/OfflineData';\nimport Scheduler from 'repositories/Database/Scheduler';\n\nlet Sync = class {\n  /**\n   *\n   * @param {*} vm\n   */\n  static async now (vm) {\n    await Sync.syncUsers();\n\n    if (Auth.check()) {\n      await Sync.syncSubmission(vm);\n    }\n  }\n  /**\n   *\n   * @param {*} db\n   * @param {*} vm\n   */\n  static async syncSubmission () {\n    let usersAreSync = await Sync.areUsersSynced();\n\n    if (!usersAreSync) {\n      return;\n    }\n\n    let unsyncSubmissions = await Submission().getUnsync();\n\n    let isSyncing = await Scheduler.isSyncing();\n\n    if (unsyncSubmissions.length > 0 && !isSyncing) {\n      OfflineData.send(unsyncSubmissions);\n    }\n  }\n  /**\n   *\n   */\n  static async getUsersToSync () {\n    return await User.local()\n      .where('sync', '=', false)\n      .andWhere('queuedForSync', '=', false)\n      .andWhere('syncError', '=', false)\n      .get();\n  }\n  /**\n   *\n   */\n  static async areUsersSynced () {\n    let users = await Sync.getUsersToSync();\n\n    return !!users && Array.isArray(users) && users.length === 0;\n  }\n  /**\n   *\n   * @param {*} param\n   */\n  static async syncUsers () {\n    let users = await Sync.getUsersToSync();\n\n    let isSyncing = await Scheduler.isSyncing();\n\n    if (Array.isArray(users) && users.length > 0 && !isSyncing) {\n      OfflineData.syncUsers(users);\n    }\n  }\n};\n\nexport default Sync;\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","var FastIsSyncing = false;\nlet Scheduler = class {\n  static async isSyncing () {\n    return FastIsSyncing;\n  }\n  static async startSync () {\n    FastIsSyncing = true;\n    return this.isSyncing();\n  }\n\n  static async stopSync () {\n    FastIsSyncing = false;\n    return this.isSyncing();\n  }\n};\n\nexport default Scheduler;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*\n  Loki IndexedDb Adapter (need to include this script to use it)\n\n  Console Usage can be used for management/diagnostic, here are a few examples :\n  adapter.getDatabaseList(); // with no callback passed, this method will log results to console\n  adapter.saveDatabase('UserDatabase', JSON.stringify(myDb));\n  adapter.loadDatabase('UserDatabase'); // will log the serialized db to console\n  adapter.deleteDatabase('UserDatabase');\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.LokiIndexedAdapter = factory();\n    }\n}(this, function () {\n  return (function() {\n\n    /**\n     * Loki persistence adapter class for indexedDb.\n     *     This class fulfills abstract adapter interface which can be applied to other storage methods. \n     *     Utilizes the included LokiCatalog app/key/value database for actual database persistence.\n     *     Indexeddb is highly async, but this adapter has been made 'console-friendly' as well.\n     *     Anywhere a callback is omitted, it should return results (if applicable) to console.\n     *     IndexedDb storage is provided per-domain, so we implement app/key/value database to \n     *     allow separate contexts for separate apps within a domain.\n     *\n     * @example\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     *\n     * @constructor LokiIndexedAdapter\n     *\n     * @param {string} appname - (Optional) Application name context can be used to distinguish subdomains, 'loki' by default\n     */\n    function LokiIndexedAdapter(appname)\n    {\n      this.app = 'loki';\n\n      if (typeof (appname) !== 'undefined')\n      {\n        this.app = appname;\n      }\n\n      // keep reference to catalog class for base AKV operations\n      this.catalog = null;\n\n      if (!this.checkAvailability()) {\n        throw new Error('indexedDB does not seem to be supported for your environment');\n      }\n    }\n\n    /**\n     * Used to check if adapter is available\n     *\n     * @returns {boolean} true if indexeddb is available, false if not.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.checkAvailability = function()\n    {\n      if (typeof indexedDB !== 'undefined' && indexedDB) return true;\n\n      return false;\n    };\n\n    /**\n     * Retrieves a serialized db string from the catalog.\n     *\n     * @example\n     * // LOAD\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     * var db = new loki('test', { adapter: idbAdapter });\n     *   db.loadDatabase(function(result) {\n     *   console.log('done');\n     * });\n     *\n     * @param {string} dbname - the name of the database to retrieve.\n     * @param {function} callback - callback should accept string param containing serialized db string.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.loadDatabase = function(dbname, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.loadDatabase(dbname, callback);\n        });\n\n        return;\n      }\n\n      // lookup up db string in AKV db\n      this.catalog.getAppKey(appName, dbname, function(result) {\n        if (typeof (callback) === 'function') {\n          if (result.id === 0) {\n            callback(null);\n            return;\n          }\n          callback(result.val);\n        }\n        else {\n          // support console use of api\n          console.log(result.val);\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.loadKey = LokiIndexedAdapter.prototype.loadDatabase;\n\n    /**\n     * Saves a serialized db to the catalog.\n     *\n     * @example\n     * // SAVE : will save App/Key/Val as 'finance'/'test'/{serializedDb}\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     * var db = new loki('test', { adapter: idbAdapter });\n     * var coll = db.addCollection('testColl');\n     * coll.insert({test: 'val'});\n     * db.saveDatabase();  // could pass callback if needed for async complete\n     *\n     * @param {string} dbname - the name to give the serialized database within the catalog.\n     * @param {string} dbstring - the serialized db string to save.\n     * @param {function} callback - (Optional) callback passed obj.success with true or false\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.saveDatabase = function(dbname, dbstring, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      function saveCallback(result) {\n        if (result && result.success === true) {\n          callback(null);\n        }\n        else {\n          callback(new Error(\"Error saving database\"));\n        }\n      }\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          // now that catalog has been initialized, set (add/update) the AKV entry\n          cat.setAppKey(appName, dbname, dbstring, saveCallback);\n        });\n\n        return;\n      }\n\n      // set (add/update) entry to AKV database\n      this.catalog.setAppKey(appName, dbname, dbstring, saveCallback);\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.saveKey = LokiIndexedAdapter.prototype.saveDatabase;\n\n    /**\n     * Deletes a serialized db from the catalog.\n     *\n     * @example\n     * // DELETE DATABASE\n     * // delete 'finance'/'test' value from catalog\n     * idbAdapter.deleteDatabase('test', function {\n     *   // database deleted\n     * });\n     *\n     * @param {string} dbname - the name of the database to delete from the catalog.\n     * @param {function=} callback - (Optional) executed on database delete\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.deleteDatabase = function(dbname, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference and pass callback ahead\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.deleteDatabase(dbname, callback);\n        });\n\n        return;\n      }\n\n      // catalog was already initialized, so just lookup object and delete by id\n      this.catalog.getAppKey(appName, dbname, function(result) {\n        var id = result.id;\n\n        if (id !== 0) {\n          adapter.catalog.deleteAppKey(id, callback);\n        } else if (typeof (callback) === 'function') {\n          callback({ success: true });\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.deleteKey = LokiIndexedAdapter.prototype.deleteDatabase;\n\n    /**\n     * Removes all database partitions and pages with the base filename passed in.\n     * This utility method does not (yet) guarantee async deletions will be completed before returning\n     *\n     * @param {string} dbname - the base filename which container, partitions, or pages are derived\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.deleteDatabasePartitions = function(dbname) {\n      var self=this;\n      this.getDatabaseList(function(result) {\n        result.forEach(function(str) {\n          if (str.startsWith(dbname)) {\n            self.deleteDatabase(str);\n          }\n        });\n      });\n    };\n\n    /**\n     * Retrieves object array of catalog entries for current app.\n     *\n     * @example\n     * idbAdapter.getDatabaseList(function(result) {\n     *   // result is array of string names for that appcontext ('finance')\n     *   result.forEach(function(str) {\n     *     console.log(str);\n     *   });\n     * });\n     *\n     * @param {function} callback - should accept array of database names in the catalog for current app.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.getDatabaseList = function(callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.getDatabaseList(callback);\n        });\n\n        return;\n      }\n\n      // catalog already initialized\n      // get all keys for current appName, and transpose results so just string array\n      this.catalog.getAppKeys(appName, function(results) {\n        var names = [];\n\n        for(var idx = 0; idx < results.length; idx++) {\n          names.push(results[idx].key);\n        }\n\n        if (typeof (callback) === 'function') {\n          callback(names);\n        }\n        else {\n          names.forEach(function(obj) {\n            console.log(obj);\n          });\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.getKeyList = LokiIndexedAdapter.prototype.getDatabaseList;\n\n    /**\n     * Allows retrieval of list of all keys in catalog along with size\n     *\n     * @param {function} callback - (Optional) callback to accept result array.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.getCatalogSummary = function(callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.getCatalogSummary(callback);\n        });\n\n        return;\n      }\n\n      // catalog already initialized\n      // get all keys for current appName, and transpose results so just string array\n      this.catalog.getAllKeys(function(results) {\n        var entries = [];\n        var obj,\n          size,\n          oapp,\n          okey,\n          oval;\n\n        for(var idx = 0; idx < results.length; idx++) {\n          obj = results[idx];\n          oapp = obj.app || '';\n          okey = obj.key || '';\n          oval = obj.val || '';\n\n          // app and key are composited into an appkey column so we will mult by 2\n          size = oapp.length * 2 + okey.length * 2 + oval.length + 1;\n\n          entries.push({ \"app\": obj.app, \"key\": obj.key, \"size\": size });\n        }\n\n        if (typeof (callback) === 'function') {\n          callback(entries);\n        }\n        else {\n          entries.forEach(function(obj) {\n            console.log(obj);\n          });\n        }\n      });\n    };\n\n    /**\n     * LokiCatalog - underlying App/Key/Value catalog persistence\n     *    This non-interface class implements the actual persistence.\n     *    Used by the IndexedAdapter class.\n     */\n    function LokiCatalog(callback)\n    {\n      this.db = null;\n      this.initializeLokiCatalog(callback);\n    }\n\n    LokiCatalog.prototype.initializeLokiCatalog = function(callback) {\n      var openRequest = indexedDB.open('LokiCatalog', 1);\n      var cat = this;\n\n      // If database doesn't exist yet or its version is lower than our version specified above (2nd param in line above)\n      openRequest.onupgradeneeded = function(e) {\n        var thisDB = e.target.result;\n        if (thisDB.objectStoreNames.contains('LokiAKV')) {\n          thisDB.deleteObjectStore('LokiAKV');\n        }\n\n        if(!thisDB.objectStoreNames.contains('LokiAKV')) {\n          var objectStore = thisDB.createObjectStore('LokiAKV', { keyPath: 'id', autoIncrement:true });\n          objectStore.createIndex('app', 'app', {unique:false});\n          objectStore.createIndex('key', 'key', {unique:false});\n          // hack to simulate composite key since overhead is low (main size should be in val field)\n          // user (me) required to duplicate the app and key into comma delimited appkey field off object\n          // This will allow retrieving single record with that composite key as well as\n          // still supporting opening cursors on app or key alone\n          objectStore.createIndex('appkey', 'appkey', {unique:true});\n        }\n      };\n\n      openRequest.onsuccess = function(e) {\n        cat.db = e.target.result;\n\n        if (typeof (callback) === 'function') callback(cat);\n      };\n\n      openRequest.onerror = function(e) {\n        throw e;\n      };\n    };\n\n    LokiCatalog.prototype.getAppKey = function(app, key, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('appkey');\n      var appkey = app + \",\" + key;\n      var request = index.get(appkey);\n\n      request.onsuccess = (function(usercallback) {\n        return function(e) {\n          var lres = e.target.result;\n\n          if (lres === null || typeof(lres) === 'undefined') {\n            lres = {\n              id: 0,\n              success: false\n            };\n          }\n\n          if (typeof(usercallback) === 'function') {\n            usercallback(lres);\n          }\n          else {\n            console.log(lres);\n          }\n        };\n      })(callback);\n\n      request.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ id: 0, success: false });\n          }\n          else {\n            throw e;\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.getAppKeyById = function (id, callback, data) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var request = store.get(id);\n\n      request.onsuccess = (function(data, usercallback){\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback(e.target.result, data);\n          }\n          else {\n            console.log(e.target.result);\n          }\n        };\n      })(data, callback);\n    };\n\n    LokiCatalog.prototype.setAppKey = function (app, key, val, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readwrite');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('appkey');\n      var appkey = app + \",\" + key;\n      var request = index.get(appkey);\n\n      // first try to retrieve an existing object by that key\n      // need to do this because to update an object you need to have id in object, otherwise it will append id with new autocounter and clash the unique index appkey\n      request.onsuccess = function(e) {\n        var res = e.target.result;\n\n        if (res === null || res === undefined) {\n          res = {\n            app:app,\n            key:key,\n            appkey: app + ',' + key,\n            val:val\n          };\n        }\n        else {\n          res.val = val;\n        }\n\n        var requestPut = store.put(res);\n\n        requestPut.onerror = (function(usercallback) {\n          return function(e) {\n            if (typeof(usercallback) === 'function') {\n              usercallback({ success: false });\n            }\n            else {\n              console.error('LokiCatalog.setAppKey (set) onerror');\n              console.error(request.error);\n            }\n          };\n\n        })(callback);\n\n        requestPut.onsuccess = (function(usercallback) {\n          return function(e) {\n            if (typeof(usercallback) === 'function') {\n              usercallback({ success: true });\n            }\n          };\n        })(callback);\n      };\n\n      request.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ success: false });\n          }\n          else {\n            console.error('LokiCatalog.setAppKey (get) onerror');\n            console.error(request.error);\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.deleteAppKey = function (id, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readwrite');\n      var store = transaction.objectStore('LokiAKV');\n      var request = store.delete(id);\n\n      request.onsuccess = (function(usercallback) {\n        return function(evt) {\n          if (typeof(usercallback) === 'function') usercallback({ success: true });\n        };\n      })(callback);\n\n      request.onerror = (function(usercallback) {\n        return function(evt) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ success: false });\n          }\n          else {\n            console.error('LokiCatalog.deleteAppKey raised onerror');\n            console.error(request.error);\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.getAppKeys = function(app, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('app');\n\n      // We want cursor to all values matching our (single) app param\n      var singleKeyRange = IDBKeyRange.only(app);\n\n      // To use one of the key ranges, pass it in as the first argument of openCursor()/openKeyCursor()\n      var cursor = index.openCursor(singleKeyRange);\n\n      // cursor internally, pushing results into this.data[] and return\n      // this.data[] when done (similar to service)\n      var localdata = [];\n\n      cursor.onsuccess = (function(data, callback) {\n        return function(e) {\n          var cursor = e.target.result;\n          if (cursor) {\n            var currObject = cursor.value;\n\n            data.push(currObject);\n\n            cursor.continue();\n          }\n          else {\n            if (typeof(callback) === 'function') {\n              callback(data);\n            }\n            else {\n              console.log(data);\n            }\n          }\n        };\n      })(localdata, callback);\n\n      cursor.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback(null);\n          }\n          else {\n            console.error('LokiCatalog.getAppKeys raised onerror');\n            console.error(e);\n          }\n        };\n      })(callback);\n\n    };\n\n    // Hide 'cursoring' and return array of { id: id, key: key }\n    LokiCatalog.prototype.getAllKeys = function (callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var cursor = store.openCursor();\n\n      var localdata = [];\n\n      cursor.onsuccess = (function(data, callback) {\n        return function(e) {\n          var cursor = e.target.result;\n          if (cursor) {\n            var currObject = cursor.value;\n\n            data.push(currObject);\n\n            cursor.continue();\n          }\n          else {\n            if (typeof(callback) === 'function') {\n              callback(data);\n            }\n            else {\n              console.log(data);\n            }\n          }\n        };\n      })(localdata, callback);\n\n      cursor.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') usercallback(null);\n        };\n      })(callback);\n\n    };\n\n    return LokiIndexedAdapter;\n\n  }());\n}));\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import FAST from \"./start\";\nimport Auth from \"./repositories/Auth/Auth\";\nimport Connection from \"./Wrappers/Connection\";\nimport Event from \"./Wrappers/Event\";\nimport Moment from \"./repositories/Date/moment\";\nimport Form from \"models/Form\";\nimport Pages from \"models/Pages\";\nimport Submission from \"models/Submission\";\nimport ParallelSurvey from \"repositories/Submission/ParallelSurvey\";\nimport Configuration from \"./models/Configuration\";\nimport Translation from \"models/Translation\";\nimport Import from \"repositories/Submission/Import\";\nimport User from \"models/User\";\nimport OfflinePlugin from \"offlinePlugin/offlinePlugin\";\nimport Role from \"models/Role\";\nimport Hash from \"repositories/Submission/Hash\";\nimport Sync from \"repositories/Database/Sync\";\nimport Utilities from \"utilities\";\n\nexport {\n  Moment,\n  Event,\n  FAST,\n  Connection,\n  Auth,\n  Form,\n  Pages,\n  Submission,\n  ParallelSurvey,\n  Configuration,\n  Translation,\n  Import,\n  User,\n  OfflinePlugin,\n  Role,\n  Hash,\n  Sync,\n  Utilities\n};\n","import Configuration from \"./models/Configuration\";\nimport Form from \"./models/Form\";\nimport Translation from \"./models/Translation\";\nimport Pages from \"./models/Pages\";\nimport SyncInterval from \"./repositories/Database/SyncInterval\";\nimport Roles from \"./models/Role\";\nimport { Fluent } from \"fast-fluent\";\nimport loki from \"./Fluent/Connectors/local/Loki/FluentConnector\";\nimport formio from \"fluent-formio\";\nimport formioLoki from \"./Fluent/Connectors/merged/Formio-Loki/FluentConnector\";\n/* eslint-disable no-unused-vars */\nlet FAST = (() => {\n  /**\n   * Loads all configuration for the FAST app\n   * This is the main start function and mandatory\n   * to execute if you will use it!\n   *\n   * @param {*} conf\n   * @param {*} conf.appConf Configuration of the App\n   */\n  async function start({ appConf, forceOnline }) {\n    if (!forceOnline) {\n      await Fluent.config({\n        REMOTE_CONNECTORS: [\n          {\n            default: true,\n            name: \"formio\",\n            baseUrl: appConf.fluentFormioBaseUrl,\n            connector: formio\n          },\n          {\n            name: \"formioConfig\",\n            baseUrl: appConf.appConfigUrl,\n            connector: formio\n          }\n        ],\n        LOCAL_CONNECTORS: [\n          {\n            name: \"loki\",\n            connector: loki,\n            default: true\n          }\n        ],\n        MERGE_CONNECTORS: [\n          {\n            default: true,\n            name: \"formioLoki\",\n            connector: formioLoki\n          }\n        ]\n      });\n      // SyncInterval.set(3000);\n    }\n    const config = await Configuration.set({ appConf, forceOnline })\n    let promises = [\n      Roles.set({ appConf, forceOnline }),\n      Pages.set({ appConf, forceOnline }),\n      Form.set({ appConf, forceOnline }),\n      Translation.set({ appConf, forceOnline })\n    ];\n\n    let results = await Promise.all(promises);\n\n    const appTranslations = results[3];\n\n    return {\n      config: config,\n      translations: appTranslations,\n      defaultLanguage: localStorage.getItem(\"defaultLenguage\") || \"en\"\n    };\n  }\n  /**\n   *\n   * Triggers a full Online update of all Configuration,\n   * Forms, Pages and Roles of the application.\n   *\n   * @param {Object} conf\n   * @param {Object} conf.appConf Configuration of the App\n   * @returns\n   */\n  async function sync({ appConf }) {\n    return start({ appConf, forceOnline: true });\n  }\n\n  return Object.freeze({\n    start,\n    sync\n  });\n})();\n\nexport default FAST;\n","import Utilities from \"utilities\";\nimport Translation from \"models/Translation\";\nimport Pages from \"models/Pages\";\n\nclass FormLabels {\n  /**\n   *\n   * @param {*} formNameFilter\n   * @param {*} languageFilter\n   */\n  static async get(forms, i18n) {\n    return this.handle(forms, i18n);\n  }\n  /**\n   *\n   * @param {*} formNameFilter\n   * @param {*} languageFilter\n   */\n  static async handle(forms, i18n) {\n    let labels = await this.fetchAllLabels(forms, i18n);\n\n    let translations = (await Translation.local().first()).data;\n\n    // Merge labels and translations\n    Object.keys(translations).forEach(function(languageCode) {\n      let translationsLabels = translations[languageCode];\n\n      Object.keys(translationsLabels).forEach(function(translationLabel) {\n        if (\n          labels[translationLabel] &&\n          translationsLabels[translationLabel] &&\n          translationsLabels[translationLabel] !== \"\"\n        ) {\n          labels[translationLabel].translations[languageCode] =\n            translationsLabels[translationLabel];\n        }\n      });\n    });\n\n    return labels;\n  }\n  /**\n   *  Fetches all Labels for the different\n   *  types of labels inputs that the\n   *  application has\n   */\n  static async fetchAllLabels(forms, i18n) {\n    let allLabels = {};\n\n    forms = forms.map(form => {\n      return form.data;\n    });\n\n    let formLabels = this.getFormLabels(forms);\n\n    let appLabels = await this.getAppLabels(i18n);\n\n    allLabels = this.mergeLabels(formLabels, appLabels);\n\n    let pagesLabels = await this.getPagesLabels(await Pages.local().first());\n\n    allLabels = this.mergeLabels(allLabels, pagesLabels);\n\n    return allLabels;\n  }\n  /**\n   * Given an Object with text labels and a label Object\n   * to add it checks if it already exists or\n   * creates it if needed\n   * @param {Object} labels\n   * @param {Object} label\n   */\n  static createOrAdd({ labels, label }) {\n    let newObject = { ...labels };\n\n    if (!label) {\n      return newObject;\n    }\n\n    // If the label already exists\n    if (newObject[label.text]) {\n      // If the location is an Array of Locations\n      if (label.location && Array.isArray(label.location)) {\n        label.location.forEach(l => {\n          newObject[label.text].location.push({\n            text: label.text,\n            template: label.template,\n            type: l.type,\n            picture: l.picture\n          });\n        });\n      } else {\n        newObject[label.text].location.push(label);\n      }\n      // If the label does not exist\n    } else {\n      if (label.location && Array.isArray(label.location)) {\n        newObject[label.text] = {\n          location: [],\n          template: label.template,\n          translations: {}\n        };\n        label.location.forEach(l => {\n          newObject[label.text].location.push({\n            text: label.text,\n            template: label.template,\n            type: l.type,\n            picture: l.picture\n          });\n        });\n      } else {\n        newObject[label.text] = {\n          location: [label],\n          translations: {}\n        };\n      }\n    }\n    return newObject;\n  }\n  /**\n   * Merges 2 different sets of translations\n   * into a single one with no repeted\n   * elements\n   * @param {Object} labelsObject1\n   * @param {Object} labelsObject2\n   */\n  static mergeLabels(labelsObject1, labelsObject2) {\n    let merged = { ...labelsObject1 };\n\n    Object.keys(labelsObject2).forEach(key => {\n      merged = this.createOrAdd({\n        labels: merged,\n        label: {\n          ...labelsObject2[key],\n          text: key\n        }\n      });\n    });\n    return merged;\n  }\n  /**\n   * Extracts all labels that could potentially\n   * be translated from the Form.io forms\n   * @param {Array} Forms\n   */\n  static getFormLabels(Forms) {\n    let componentLabels = {};\n    // Extranct all labels for all available forms\n\n    let formioLabelsPositions = [\n      \"suffix\",\n      \"prefix\",\n      \"addAnother\",\n      \"removeRow\",\n      \"saveRow\",\n      \"legend\",\n      \"title\",\n      \"label\",\n      \"placeholder\",\n      \"tooltip\"\n    ];\n\n    Forms.forEach(form => {\n      // Add title of the Forms to the translations\n      componentLabels = this.createOrAdd({\n        labels: componentLabels,\n        label: {\n          text: form.title,\n          type: \"formTitle\",\n          component: form.path,\n          form: form.path,\n          picture: null\n        }\n      });\n      // Go across every component\n      Utilities.eachComponent(\n        form.components,\n        component => {\n          // Check for the common translated Items listed above\n          formioLabelsPositions.forEach(position => {\n            if (component[position] && component[position] !== \"\") {\n              // Add the Label if is not empty\n              componentLabels = this.createOrAdd({\n                labels: componentLabels,\n                label: {\n                  text: component[position],\n                  type: position,\n                  component: component.key,\n                  form: form.path,\n                  picture: null\n                }\n              });\n            }\n          });\n\n          // Check for components that have values with labels (i.e: radio)\n          if (component.values) {\n            component.values.forEach(value => {\n              if (value.label && value.label !== \"\") {\n                componentLabels = this.createOrAdd({\n                  labels: componentLabels,\n                  label: {\n                    text: value.label,\n                    type: \"value\",\n                    component: component.key,\n                    form: form.path,\n                    picture: null\n                  }\n                });\n              }\n            });\n          }\n\n          // Check for HTML tag elements in the forms\n          if (component.type === \"htmlelement\" && component.content !== \"\") {\n            componentLabels = this.createOrAdd({\n              labels: componentLabels,\n              label: {\n                text: component.content,\n                type: \"htmlElement\",\n                component: component.key,\n                form: form.path,\n                picture: null\n              }\n            });\n          }\n\n          // Check specificaly for select elements\n          if (component.type === \"select\") {\n            if (component.data && component.data.values) {\n              component.data.values.forEach(value => {\n                if (value.label && value.label !== \"\") {\n                  componentLabels = this.createOrAdd({\n                    labels: componentLabels,\n                    label: {\n                      text: value.label,\n                      type: \"selectValue\",\n                      component: component.key,\n                      form: form.path,\n                      picture: null\n                    }\n                  });\n                }\n              });\n            }\n          }\n\n          // Check for survey elements\n          if (component.type && component.type === \"survey\") {\n            if (component.questions) {\n              // Check for every question on the survey\n              component.questions.forEach(q => {\n                componentLabels = this.createOrAdd({\n                  labels: componentLabels,\n                  label: {\n                    text: q.label,\n                    type: \"surveyLabel\",\n                    component: component.key,\n                    form: form.path,\n                    picture: null\n                  }\n                });\n              });\n              // Check every text of the answers\n              component.values.forEach(v => {\n                componentLabels = this.createOrAdd({\n                  labels: componentLabels,\n                  label: {\n                    text: v.label,\n                    type: \"surveyValues\",\n                    component: component.key,\n                    form: form.path,\n                    picture: null\n                  }\n                });\n              });\n            }\n          }\n        },\n        true\n      );\n    });\n\n    return componentLabels;\n  }\n  /**\n   *  Creates the Labels Object for the\n   *  App translations\n   * @param {Array} appLabels\n   */\n  static async getAppLabels(appLabels) {\n    let translations = {};\n\n    appLabels.forEach(l => {\n      translations = this.createOrAdd({\n        labels: translations,\n        label: l\n      });\n    });\n\n    return translations;\n  }\n  /**\n   *  Creates the Labels Object for the\n   *  App Pages\n   * @param {Array} appLabels\n   */\n  static async getPagesLabels(Pages) {\n    let pagesLabels = {};\n\n    Pages.pages.forEach(page => {\n      if (page.title && page.title !== \"\") {\n        pagesLabels = this.createOrAdd({\n          labels: pagesLabels,\n          label: {\n            text: page.title,\n            type: \"pageTitle\",\n            picture: null,\n            page: page\n          }\n        });\n      }\n      page.cards.forEach(card => {\n        if (card.title && card.title !== \"\") {\n          pagesLabels = this.createOrAdd({\n            labels: pagesLabels,\n            label: {\n              text: card.title,\n              type: \"pageCardTitle\",\n              picture: null,\n              card: card,\n              page: page\n            }\n          });\n        }\n\n        if (card.subtitle && card.subtitle !== \"\") {\n          this.createOrAdd({\n            labels: pagesLabels,\n            label: {\n              text: card.subtitle,\n              type: \"pageCardSubtitle\",\n              picture: null,\n              card: card,\n              page: page\n            }\n          });\n        }\n\n        card.actions.forEach(action => {\n          if (action.text && action.text !== \"\") {\n            pagesLabels = this.createOrAdd({\n              labels: pagesLabels,\n              label: {\n                text: action.text,\n                type: \"pageActionButtonText\",\n                picture: null,\n                card: card,\n                page: page\n              }\n            });\n          }\n        });\n      });\n    });\n\n    return pagesLabels;\n  }\n}\nexport default FormLabels;\n","import Sync from './Sync';\nimport Utilities from 'utilities';\n\nlet SyncInterval = (() => {\n  async function set (milliseconds) {\n    let rInterval = function (callback, delay) {\n      let dateNow = Date.now,\n        requestAnimation = (typeof window !== 'undefined') && window.requestAnimationFrame,\n        start = dateNow(),\n        stop,\n        intervalFunc = function () {\n          // eslint-disable-next-line no-use-before-define\n          dateNow() - start < delay || ((start += delay), callback());\n          // eslint-disable-next-line no-use-before-define\n          stop || requestAnimation(intervalFunc);\n        };\n\n      requestAnimation(intervalFunc);\n      return {\n        clear: function () {\n          stop = 1;\n        }\n      };\n    };\n\n    var _debouncedSync = Utilities.debounce(Sync.now, 2000);\n\n    rInterval(_debouncedSync, milliseconds);\n  }\n\n  return Object.freeze({\n    set\n  });\n})();\n\nexport default SyncInterval;\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","import Utilities from 'utilities';\nimport Form from '../Form';\n\nlet Columns = class {\n  static async getTableView (path) {\n    const form = (await Form.find({ path })).data;\n\n    return Utilities.findComponents(form.components, {\n      input: true,\n      tableView: true\n    })\n      .slice(0, 7)\n      .filter(c => {\n        return !!(c.label !== '');\n      });\n  }\n};\n\nexport default Columns;\n","import Connection from 'Wrappers/Connection';\nimport Submission from 'models/Submission';\nimport Event from 'Wrappers/Event';\nimport Scheduler from 'repositories/Database/Scheduler';\nimport Form from 'models/Form';\nimport to from 'await-to-js';\n\nlet OfflineData = (() => {\n  const sendSubmission = async (offlineSubmission) => {\n    let remoteEndPoint = Form.getModel({ path: offlineSubmission.path }).remote();\n\n    offlineSubmission.queuedForSync = true;\n    let sub = Submission(offlineSubmission.path);\n\n    // Set the submission as queuedForSync\n    await sub.local().update(offlineSubmission);\n\n    let [error, insertedData] = await to(remoteEndPoint.insert(offlineSubmission));\n\n    if (error) {\n      console.log(error);\n      offlineSubmission.queuedForSync = false;\n      offlineSubmission.syncError = error;\n      sub.local().update(offlineSubmission);\n      throw new Error('Error while Syncing data');\n    }\n    if (!insertedData._id) {\n      throw Error('The remote endpoint did not save the submission properly (no _id back)');\n    }\n\n    let [e] = await to(sub.local().remove(offlineSubmission._id));\n\n    if (e) {\n      throw new Error('Sync error:Could not remove local submission after sync');\n    }\n    return true;\n  };\n\n  async function send (data) {\n    let offlineSubmissions = data;\n    let isOnline = await Connection.isOnline();\n\n    let PromiseEach = async function (arr, fn) {\n      for (const item of arr) await fn(item);\n    };\n\n    if (isOnline) {\n      await Scheduler.startSync();\n\n      let [error] = await to(\n        PromiseEach(offlineSubmissions, async (offlineSubmission) => {\n          await sendSubmission(offlineSubmission);\n        })\n      );\n\n      Scheduler.stopSync();\n      if (error) {\n        console.log(error);\n      }\n\n      console.log('Submissions Synced');\n      Event.emit({\n        name: 'FAST:SUBMISSION:SYNCED',\n        data: {},\n        text: 'The submissions have been synced'\n      });\n    }\n  }\n\n  return Object.freeze({\n    send\n  });\n})();\n\nexport default OfflineData;\n","import Database from \"./Database\";\nimport Utilities from \"utilities\";\nimport uuidv4 from \"uuid/v4\";\nimport { Interface } from \"fast-fluent\";\n\nexport default Interface.compose({\n  methods: {\n    /**\n     *\n     */\n    async get() {\n      if (this.ownerEmail) {\n        this.andWhere(\"user_email\", \"=\", this.ownerEmail);\n      }\n      let filterObject = this.prepareFilter();\n\n      let data = await (await this.getModel())\n        .chain()\n        .find(filterObject)\n        .offset(this.offsetNumber)\n        .limit(this.limitNumber)\n        .data();\n\n      data = this.jsApplySelect(data);\n      data = this.jsApplyOrderBy(data);\n\n      return data;\n    },\n    /**\n     *\n     */\n    prepareFilter() {\n      let andObject = { $and: [] };\n      let orObject = { $or: [] };\n      let globalFilter = {};\n\n      // All first Level AND conditions\n      if (this.whereArray.length > 0) {\n        this.whereArray.forEach(c => {\n          let conditionToObject = {};\n\n          if (c[0].includes(\"[\")) {\n            throw new Error(\n              'Error in: \"' +\n                c[0] +\n                '\" \"Where\" close does not work with Array elements'\n            );\n          }\n\n          conditionToObject[c[0]] = {};\n          let lokiOperator = this.getLokiOperator(c[1]);\n\n          conditionToObject[c[0]][lokiOperator] = c[2];\n          if (lokiOperator.includes(\"$regex|\")) {\n            delete conditionToObject[c[0]][lokiOperator];\n            conditionToObject[c[0]][\"$regex\"] = lokiOperator\n              .replace(\"$regex|\", \"\")\n              .replace(\"{{$var}}\", c[2]);\n          }\n\n          andObject[\"$and\"].push(conditionToObject);\n        });\n        globalFilter = andObject;\n      }\n      // All second level OR conditions\n      if (this.orWhereArray.length > 0) {\n        this.orWhereArray.forEach(c => {\n          let conditionToObject = {};\n\n          conditionToObject[c[0]] = {};\n          let lokiOperator = this.getLokiOperator(c[1]);\n\n          conditionToObject[c[0]][lokiOperator] = c[2];\n          if (lokiOperator.includes(\"$regex|\")) {\n            delete conditionToObject[c[0]][lokiOperator];\n            conditionToObject[c[0]][\"$regex\"] = lokiOperator\n              .replace(\"$regex|\", \"\")\n              .replace(\"{{$var}}\", c[2]);\n          }\n\n          orObject[\"$or\"].push(conditionToObject);\n        });\n\n        globalFilter = { $or: [andObject, orObject] };\n      }\n\n      // TODO we should include global level and() or()\n      // operators to give room for more complex queries\n      return globalFilter;\n    },\n    /**\n     *\n     * @param {*} operator\n     */\n    getLokiOperator(operator) {\n      if (!this.operators.includes(operator)) {\n        throw new Error('The \"' + operator + '\" operator is not supported');\n      }\n\n      let lokiOperators = {\n        \"=\": \"$eq\",\n        \"<\": \"$lt\",\n        \">\": \"$gt\",\n        \"<=\": \"$lte\",\n        \">=\": \"$gte\",\n        \"<>\": \"$ne\",\n        \"!=\": \"$ne\",\n        in: \"$in\",\n        nin: \"$nin\",\n        like: \"$aeq\",\n        regexp: \"$regex\",\n        startsWith: \"$regex|^{{$var}}\",\n        endsWith: \"$regex|{{$var}}$\",\n        contains: \"$regex|{{$var}}\"\n      };\n      let converted = Utilities.get(() => lokiOperators[operator], undefined);\n\n      if (!converted) {\n        throw new Error(\n          'The operator \"' + operator + '\" is not supported in Loki '\n        );\n      }\n      return converted;\n    },\n    /**\n     *\n     * @param {Object} db The name of the model to fetch\n     * @param {String} db.model The name of the model to fetch\n     * @returns {Promise} The DB model\n     */\n    async getModel() {\n      const DB = await Database.get();\n      return DB.getCollection(this.name);\n    },\n    /**\n     *\n     */\n    async all() {\n      const model = await this.getModel();\n\n      return model.find();\n    },\n    /**\n     * [remove description]\n     * @param  {[type]} document [description]\n     * @return {[type]}          [description]\n     */\n    async remove(_id) {\n      if (!_id) {\n        throw new Error(\n          \"No id assign to remove().You must give and _id to delete\"\n        );\n      }\n\n      if (!_id.includes(\"_local\")) {\n        throw new Error(\"You can`t delete non local submissions\");\n      }\n      const model = await this.getModel();\n\n      return model.findAndRemove({ _id: _id });\n    },\n    /**\n     * [insert description]\n     * @param  {Object, Array} element [description]\n     * @return {[type]}         [description]\n     */\n    async insert(data, options) {\n      if (Array.isArray(data)) {\n        return this.ArrayInsert(data, options);\n      }\n      data = Utilities.cloneDeep(data);\n\n      const model = await this.getModel();\n\n      data._id = uuidv4() + \"_local\";\n\n      return model.insert(data);\n    },\n    /**\n     * [update description]\n     * @param  {[type]} document [description]\n     * @return {[type]}          [description]\n     */\n    async update(document) {\n      if (!document._id) {\n        throw new Error(\n          \"Loki connector error. Cannot update a Model without _id key\"\n        );\n      }\n      const model = await this.getModel();\n\n      document.modified = Math.round(+new Date() / 1000);\n      let local = await model.findOne({ _id: document._id });\n      let mod = { ...local, ...document };\n\n      return model.update(mod);\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async updateOrCreate({ document }) {\n      const model = await this.getModel();\n      let role = await model.findOne(document);\n\n      if (!role) {\n        model.insert(document);\n      }\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async findAndRemove({ filter }) {\n      const model = await this.getModel();\n\n      return model.findAndRemove(filter);\n    },\n    /**\n     *\n     * @param {*} param0\n     */\n    async clear() {\n      const model = await this.getModel();\n\n      return model.clear({ removeIndices: true });\n    }\n  }\n});\n","import Promise from \"bluebird\";\nimport Loki from \"lokijs\";\nimport LokiIndexedAdapter from \"lokijs/src/loki-indexed-adapter\";\nvar DB = null;\nlet Database = (() => {\n  /*\n  |--------------------------------------------------------------------------\n  | LockiDB Config\n  |--------------------------------------------------------------------------\n  | Configuration for the Local DB creation.\n  |\n  */\n  const getModels = () => {\n    const models =\n      typeof window !== \"undefined\" &&\n      window &&\n      window._FLUENT_ &&\n      window._FLUENT_.models\n        ? window._FLUENT_.models\n        : global && global._FLUENT_ && global._FLUENT_.models\n        ? global._FLUENT_.models\n        : undefined;\n    return models;\n  };\n  /**\n   *\n   *\n   * @param {Object} configuration- The configuration for the DB\n   * @param {string} configuration.env - Environment i.e 'production'\n   * @returns\n   */\n  const _create = () => {\n    return new Promise(resolve => {\n      let idbAdapter;\n      let pa;\n      let db;\n\n      let dbConfig = {\n        autosave: true,\n        autosaveInterval: 1000,\n        autoload: true,\n        /* eslint-disable no-use-before-define */\n        autoloadCallback: databaseInitialize,\n        throttledSaves: false\n      };\n\n      try {\n        idbAdapter = new LokiIndexedAdapter(\"FAST\");\n        pa = new Loki.LokiPartitioningAdapter(idbAdapter, {\n          paging: true\n        });\n\n        db = new Loki(\"FAST\", { ...dbConfig, adapter: pa });\n      } catch (error) {\n        db = new Loki(\"FAST\", dbConfig);\n      }\n\n      function databaseInitialize() {\n        const baseModels = getModels();\n        if (!baseModels) {\n          throw new Error(\n            'Cannot Start FLUENT, no models registered or you dont have access to the \"window\" or \"global\" variable'\n          );\n        }\n\n        Object.keys(baseModels).forEach(model => {\n          const dbModel = db.getCollection(model);\n\n          if (!dbModel) {\n            db.addCollection(model);\n          }\n        });\n        resolve(db);\n      }\n    });\n  };\n  /**\n   * Checks if the DB is created or if new\n   * Models need to be added to the DB\n   * @returns {Boolean}\n   */\n  const shouldCreate = () => {\n    const windowModels = getModels();\n    const dbModels = DB.collections.reduce((acc, collection) => {\n      acc.push(collection.name);\n      return acc;\n    }, []);\n\n    let models = [];\n    Object.keys(windowModels).forEach(m => {\n      if (!dbModels.includes(m)) {\n        models.push(m);\n      }\n    });\n\n    return models;\n  };\n  /**\n   *\n   *\n   * @export\n   * @param {Object} configuration- The configuration for the DB\n   * @param {string} configuration.env - Environment i.e 'production'\n   * @returns\n   */\n  const get = async function() {\n    if (!DB) {\n      DB = await _create();\n    }\n    const recreateModels = shouldCreate();\n    if (recreateModels.length > 0) {\n      recreateModels.forEach(model => {\n        DB.addCollection(model);\n      });\n    }\n    return DB;\n  };\n\n  return Object.freeze({\n    get\n  });\n})();\n\nexport default Database;\n","/**\n * LokiJS\n * @author Joe Minichino <joe.minichino@gmail.com>\n *\n * A lightweight document oriented javascript database\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.loki = factory();\n  }\n}(this, function () {\n\n  return (function () {\n    'use strict';\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var Utils = {\n      copyProperties: function (src, dest) {\n        var prop;\n        for (prop in src) {\n          dest[prop] = src[prop];\n        }\n      },\n      // used to recursively scan hierarchical transform step object for param substitution\n      resolveTransformObject: function (subObj, params, depth) {\n        var prop,\n          pname;\n\n        if (typeof depth !== 'number') {\n          depth = 0;\n        }\n\n        if (++depth >= 10) return subObj;\n\n        for (prop in subObj) {\n          if (typeof subObj[prop] === 'string' && subObj[prop].indexOf(\"[%lktxp]\") === 0) {\n            pname = subObj[prop].substring(8);\n            if (params.hasOwnProperty(pname)) {\n              subObj[prop] = params[pname];\n            }\n          } else if (typeof subObj[prop] === \"object\") {\n            subObj[prop] = Utils.resolveTransformObject(subObj[prop], params, depth);\n          }\n        }\n\n        return subObj;\n      },\n      // top level utility to resolve an entire (single) transform (array of steps) for parameter substitution\n      resolveTransformParams: function (transform, params) {\n        var idx,\n          clonedStep,\n          resolvedTransform = [];\n\n        if (typeof params === 'undefined') return transform;\n\n        // iterate all steps in the transform array\n        for (idx = 0; idx < transform.length; idx++) {\n          // clone transform so our scan/replace can operate directly on cloned transform\n          clonedStep = clone(transform[idx], \"shallow-recurse-objects\");\n          resolvedTransform.push(Utils.resolveTransformObject(clonedStep, params));\n        }\n\n        return resolvedTransform;\n      }\n    };\n\n    // wrapping in object to expose to default export for potential user override.\n    // warning: overriding these methods will override behavior for all loki db instances in memory.\n    // warning: if you use binary indices these comparators should be the same for all inserts/updates/removes.\n    var Comparators = {\n      aeq: aeqHelper,\n      lt: ltHelper,\n      gt: gtHelper\n    };\n\n    /** Helper function for determining 'loki' abstract equality which is a little more abstract than ==\n     *     aeqHelper(5, '5') === true\n     *     aeqHelper(5.0, '5') === true\n     *     aeqHelper(new Date(\"1/1/2011\"), new Date(\"1/1/2011\")) === true\n     *     aeqHelper({a:1}, {z:4}) === true (all objects sorted equally)\n     *     aeqHelper([1, 2, 3], [1, 3]) === false\n     *     aeqHelper([1, 2, 3], [1, 2, 3]) === true\n     *     aeqHelper(undefined, null) === true\n     */\n    function aeqHelper(prop1, prop2) {\n      var cv1, cv2, t1, t2;\n\n      if (prop1 === prop2) return true;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        // dates and NaN conditions (typed dates before serialization)\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2);\n        }\n      }\n\n      // Handle 'Number-like' comparisons\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n\n      // if one or both are 'number-like'...\n      if (cv1 === cv1 || cv2 === cv2) {\n        return (cv1 === cv2);\n      }\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      return (cv1 == cv2);\n    }\n\n    /** Helper function for determining 'less-than' conditions for ops, sorting, and binary indices.\n     *     In the future we might want $lt and $gt ops to use their own functionality/helper.\n     *     Since binary indices on a property might need to index [12, NaN, new Date(), Infinity], we\n     *     need this function (as well as gtHelper) to always ensure one value is LT, GT, or EQ to another.\n     */\n    function ltHelper(prop1, prop2, equal) {\n      var cv1, cv2, t1, t2;\n\n      // if one of the params is falsy or strictly true or not equal to itself\n      // 0, 0.0, \"\", NaN, null, undefined, not defined, false, true\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          // if strict equal probably 0 so sort higher, otherwise probably NaN so sort lower than even null\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2)?equal:(t1<t2);\n        }\n      }\n\n      // if both are numbers (string encoded or not), compare as numbers\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n\n      if (cv1 === cv1 && cv2 === cv2) {\n        if (cv1 < cv2) return true;\n        if (cv1 > cv2) return false;\n        return equal;\n      }\n\n      if (cv1 === cv1 && cv2 !== cv2) {\n        return true;\n      }\n\n      if (cv2 === cv2 && cv1 !== cv1) {\n        return false;\n      }\n\n      if (prop1 < prop2) return true;\n      if (prop1 > prop2) return false;\n      if (prop1 == prop2) return equal;\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 < cv2) {\n        return true;\n      }\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      return false;\n    }\n\n    function gtHelper(prop1, prop2, equal) {\n      var cv1, cv2, t1, t2;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          // NaN 0\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2)?equal:(t1>t2);\n        }\n      }\n\n      // if both are numbers (string encoded or not), compare as numbers\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n      if (cv1 === cv1 && cv2 === cv2) {\n        if (cv1 > cv2) return true;\n        if (cv1 < cv2) return false;\n        return equal;\n      }\n\n      if (cv1 === cv1 && cv2 !== cv2) {\n        return false;\n      }\n\n      if (cv2 === cv2 && cv1 !== cv1) {\n        return true;\n      }\n\n      if (prop1 > prop2) return true;\n      if (prop1 < prop2) return false;\n      if (prop1 == prop2) return equal;\n\n      // not strict equal nor less than nor gt so must be dates or mixed types\n      // convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 > cv2) {\n        return true;\n      }\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      return false;\n    }\n\n    function sortHelper(prop1, prop2, desc) {\n      if (Comparators.aeq(prop1, prop2)) return 0;\n\n      if (Comparators.lt(prop1, prop2, false)) {\n        return (desc) ? (1) : (-1);\n      }\n\n      if (Comparators.gt(prop1, prop2, false)) {\n        return (desc) ? (-1) : (1);\n      }\n\n      // not lt, not gt so implied equality-- date compatible\n      return 0;\n    }\n\n    /**\n     * compoundeval() - helper function for compoundsort(), performing individual object comparisons\n     *\n     * @param {array} properties - array of property names, in order, by which to evaluate sort order\n     * @param {object} obj1 - first object to compare\n     * @param {object} obj2 - second object to compare\n     * @returns {integer} 0, -1, or 1 to designate if identical (sortwise) or which should be first\n     */\n    function compoundeval(properties, obj1, obj2) {\n      var res = 0;\n      var prop, field, val1, val2, arr;\n      for (var i = 0, len = properties.length; i < len; i++) {\n        prop = properties[i];\n        field = prop[0];\n        if (~field.indexOf('.')) {\n          arr = field.split('.');\n          val1 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, obj1);\n          val2 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, obj2);\n        } else {\n          val1 = obj1[field];\n          val2 = obj2[field];\n        }\n        res = sortHelper(val1, val2, prop[1]);\n        if (res !== 0) {\n          return res;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * dotSubScan - helper function used for dot notation queries.\n     *\n     * @param {object} root - object to traverse\n     * @param {array} paths - array of properties to drill into\n     * @param {function} fun - evaluation function to test with\n     * @param {any} value - comparative value to also pass to (compare) fun\n     * @param {number} poffset - index of the item in 'paths' to start the sub-scan from\n     */\n    function dotSubScan(root, paths, fun, value, poffset) {\n      var pathOffset = poffset || 0;\n      var path = paths[pathOffset];\n      if (root === undefined || root === null || !hasOwnProperty.call(root, path)) {\n        return false;\n      }\n\n      var valueFound = false;\n      var element = root[path];\n      if (pathOffset + 1 >= paths.length) {\n        // if we have already expanded out the dot notation,\n        // then just evaluate the test function and value on the element\n        valueFound = fun(element, value);\n      } else if (Array.isArray(element)) {\n        for (var index = 0, len = element.length; index < len; index += 1) {\n          valueFound = dotSubScan(element[index], paths, fun, value, pathOffset + 1);\n          if (valueFound === true) {\n            break;\n          }\n        }\n      } else {\n        valueFound = dotSubScan(element, paths, fun, value, pathOffset + 1);\n      }\n\n      return valueFound;\n    }\n\n    function containsCheckFn(a) {\n      if (typeof a === 'string' || Array.isArray(a)) {\n        return function (b) {\n          return a.indexOf(b) !== -1;\n        };\n      } else if (typeof a === 'object' && a !== null) {\n        return function (b) {\n          return hasOwnProperty.call(a, b);\n        };\n      }\n      return null;\n    }\n\n    function doQueryOp(val, op) {\n      for (var p in op) {\n        if (hasOwnProperty.call(op, p)) {\n          return LokiOps[p](val, op[p]);\n        }\n      }\n      return false;\n    }\n\n    var LokiOps = {\n      // comparison operators\n      // a is the value in the collection\n      // b is the query value\n      $eq: function (a, b) {\n        return a === b;\n      },\n\n      // abstract/loose equality\n      $aeq: function (a, b) {\n        return a == b;\n      },\n\n      $ne: function (a, b) {\n        // ecma 5 safe test for NaN\n        if (b !== b) {\n          // ecma 5 test value is not NaN\n          return (a === a);\n        }\n\n        return a !== b;\n      },\n      // date equality / loki abstract equality test\n      $dteq: function (a, b) {\n        return Comparators.aeq(a, b);\n      },\n\n      // loki comparisons: return identical unindexed results as indexed comparisons\n      $gt: function (a, b) {\n        return Comparators.gt(a, b, false);\n      },\n\n      $gte: function (a, b) {\n        return Comparators.gt(a, b, true);\n      },\n\n      $lt: function (a, b) {\n        return Comparators.lt(a, b, false);\n      },\n\n      $lte: function (a, b) {\n        return Comparators.lt(a, b, true);\n      },\n\n      // lightweight javascript comparisons\n      $jgt: function (a, b) {\n        return a > b;\n      },\n\n      $jgte: function (a, b) {\n        return a >= b;\n      },\n\n      $jlt: function (a, b) {\n        return a < b;\n      },\n\n      $jlte: function (a, b) {\n        return a <= b;\n      },\n\n      // ex : coll.find({'orderCount': {$between: [10, 50]}});\n      $between: function (a, vals) {\n        if (a === undefined || a === null) return false;\n        return (Comparators.gt(a, vals[0], true) && Comparators.lt(a, vals[1], true));\n      },\n\n      $jbetween: function (a, vals) {\n        if (a === undefined || a === null) return false;\n        return (a >= vals[0] && a <= vals[1]);\n      },\n\n      $in: function (a, b) {\n        return b.indexOf(a) !== -1;\n      },\n\n      $nin: function (a, b) {\n        return b.indexOf(a) === -1;\n      },\n\n      $keyin: function (a, b) {\n        return a in b;\n      },\n\n      $nkeyin: function (a, b) {\n        return !(a in b);\n      },\n\n      $definedin: function (a, b) {\n        return b[a] !== undefined;\n      },\n\n      $undefinedin: function (a, b) {\n        return b[a] === undefined;\n      },\n\n      $regex: function (a, b) {\n        return b.test(a);\n      },\n\n      $containsString: function (a, b) {\n        return (typeof a === 'string') && (a.indexOf(b) !== -1);\n      },\n\n      $containsNone: function (a, b) {\n        return !LokiOps.$containsAny(a, b);\n      },\n\n      $containsAny: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.some(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $contains: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.every(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $type: function (a, b) {\n        var type = typeof a;\n        if (type === 'object') {\n          if (Array.isArray(a)) {\n            type = 'array';\n          } else if (a instanceof Date) {\n            type = 'date';\n          }\n        }\n        return (typeof b !== 'object') ? (type === b) : doQueryOp(type, b);\n      },\n\n      $finite: function(a, b) {\n        return (b === isFinite(a));\n      },\n\n      $size: function (a, b) {\n        if (Array.isArray(a)) {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $len: function (a, b) {\n        if (typeof a === 'string') {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $where: function (a, b) {\n        return b(a) === true;\n      },\n\n      // field-level logical operators\n      // a is the value in the collection\n      // b is the nested query operation (for '$not')\n      //   or an array of nested query operations (for '$and' and '$or')\n      $not: function (a, b) {\n        return !doQueryOp(a, b);\n      },\n\n      $and: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (!doQueryOp(a, b[idx])) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      $or: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (doQueryOp(a, b[idx])) {\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n\n    // if an op is registered in this object, our 'calculateRange' can use it with our binary indices.\n    // if the op is registered to a function, we will run that function/op as a 2nd pass filter on results.\n    // those 2nd pass filter functions should be similar to LokiOps functions, accepting 2 vals to compare.\n    var indexedOps = {\n      $eq: LokiOps.$eq,\n      $aeq: true,\n      $dteq: true,\n      $gt: true,\n      $gte: true,\n      $lt: true,\n      $lte: true,\n      $in: true,\n      $between: true\n    };\n\n    function clone(data, method) {\n      if (data === null || data === undefined) {\n        return null;\n      }\n\n      var cloneMethod = method || 'parse-stringify',\n        cloned;\n\n      switch (cloneMethod) {\n      case \"parse-stringify\":\n        cloned = JSON.parse(JSON.stringify(data));\n        break;\n      case \"jquery-extend-deep\":\n        cloned = jQuery.extend(true, {}, data);\n        break;\n      case \"shallow\":\n        // more compatible method for older browsers\n        cloned = Object.create(data.constructor.prototype);\n        Object.keys(data).map(function (i) {\n          cloned[i] = data[i];\n        });\n        break;\n      case \"shallow-assign\":\n        // should be supported by newer environments/browsers\n        cloned = Object.create(data.constructor.prototype);\n        Object.assign(cloned, data);\n        break;\n      case \"shallow-recurse-objects\":\n        // shallow clone top level properties\n        cloned = clone(data, \"shallow\");\n        var keys = Object.keys(data);\n        // for each of the top level properties which are object literals, recursively shallow copy\n        keys.forEach(function(key) {\n          if (typeof data[key] === \"object\" && data[key].constructor.name === \"Object\")  {\n            cloned[key] = clone(data[key], \"shallow-recurse-objects\");\n          }\n        });\n        break;\n      default:\n        break;\n      }\n\n      return cloned;\n    }\n\n    function cloneObjectArray(objarray, method) {\n      var i,\n        result = [];\n\n      if (method == \"parse-stringify\") {\n        return clone(objarray, method);\n      }\n\n      i = objarray.length - 1;\n\n      for (; i <= 0; i--) {\n        result.push(clone(objarray[i], method));\n      }\n\n      return result;\n    }\n\n    function localStorageAvailable() {\n      try {\n        return (window && window.localStorage !== undefined && window.localStorage !== null);\n      } catch (e) {\n        return false;\n      }\n    }\n\n\n    /**\n     * LokiEventEmitter is a minimalist version of EventEmitter. It enables any\n     * constructor that inherits EventEmitter to emit events and trigger\n     * listeners that have been added to the event through the on(event, callback) method\n     *\n     * @constructor LokiEventEmitter\n     */\n    function LokiEventEmitter() {}\n\n    /**\n     * @prop {hashmap} events - a hashmap, with each property being an array of callbacks\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.events = {};\n\n    /**\n     * @prop {boolean} asyncListeners - boolean determines whether or not the callbacks associated with each event\n     * should happen in an async fashion or not\n     * Default is false, which means events are synchronous\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.asyncListeners = false;\n\n    /**\n     * on(eventName, listener) - adds a listener to the queue of callbacks associated to an event\n     * @param {string|string[]} eventName - the name(s) of the event(s) to listen to\n     * @param {function} listener - callback function of listener to attach\n     * @returns {int} the index of the callback in the array of listeners for a particular event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.on = function (eventName, listener) {\n      var event;\n      var self = this;\n\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.on(currentEventName, listener);\n        });\n        return listener;\n      }\n\n      event = this.events[eventName];\n      if (!event) {\n        event = this.events[eventName] = [];\n      }\n      event.push(listener);\n      return listener;\n    };\n\n    /**\n     * emit(eventName, data) - emits a particular event\n     * with the option of passing optional parameters which are going to be processed by the callback\n     * provided signatures match (i.e. if passing emit(event, arg0, arg1) the listener should take two parameters)\n     * @param {string} eventName - the name of the event\n     * @param {object=} data - optional object passed with the event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.emit = function (eventName) {\n      var self = this;\n      var selfArgs = Array.prototype.slice.call(arguments, 1);\n      if (eventName && this.events[eventName]) {\n        this.events[eventName].forEach(function (listener) {\n          if (self.asyncListeners) {\n            setTimeout(function () {\n              listener.apply(self, selfArgs);\n            }, 1);\n          } else {\n            listener.apply(self, selfArgs);\n          }\n\n        });\n      } else {\n        throw new Error('No event ' + eventName + ' defined');\n      }\n    };\n\n    /**\n     * Alias of LokiEventEmitter.prototype.on\n     * addListener(eventName, listener) - adds a listener to the queue of callbacks associated to an event\n     * @param {string|string[]} eventName - the name(s) of the event(s) to listen to\n     * @param {function} listener - callback function of listener to attach\n     * @returns {int} the index of the callback in the array of listeners for a particular event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.addListener = LokiEventEmitter.prototype.on;\n\n    /**\n     * removeListener() - removes the listener at position 'index' from the event 'eventName'\n     * @param {string|string[]} eventName - the name(s) of the event(s) which the listener is attached to\n     * @param {function} listener - the listener callback function to remove from emitter\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.removeListener = function (eventName, listener) {\n      var self = this;\n\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.removeListener(currentEventName, listener);\n        });\n\n        return;\n      }\n\n      if (this.events[eventName]) {\n        var listeners = this.events[eventName];\n        listeners.splice(listeners.indexOf(listener), 1);\n      }\n    };\n\n    /**\n     * Loki: The main database class\n     * @constructor Loki\n     * @implements LokiEventEmitter\n     * @param {string} filename - name of the file to be saved to\n     * @param {object=} options - (Optional) config options object\n     * @param {string} options.env - override environment detection as 'NODEJS', 'BROWSER', 'CORDOVA'\n     * @param {boolean} [options.verbose=false] - enable console output\n     * @param {boolean} [options.autosave=false] - enables autosave\n     * @param {int} [options.autosaveInterval=5000] - time interval (in milliseconds) between saves (if dirty)\n     * @param {boolean} [options.autoload=false] - enables autoload on loki instantiation\n     * @param {function} options.autoloadCallback - user callback called after database load\n     * @param {adapter} options.adapter - an instance of a loki persistence adapter\n     * @param {string} [options.serializationMethod='normal'] - ['normal', 'pretty', 'destructured']\n     * @param {string} options.destructureDelimiter - string delimiter used for destructured serialization\n     * @param {boolean} [options.throttledSaves=true] - debounces multiple calls to to saveDatabase reducing number of disk I/O operations\n                                                and guaranteeing proper serialization of the calls.\n     */\n    function Loki(filename, options) {\n      this.filename = filename || 'loki.db';\n      this.collections = [];\n\n      // persist version of code which created the database to the database.\n      // could use for upgrade scenarios\n      this.databaseVersion = 1.5;\n      this.engineVersion = 1.5;\n\n      // autosave support (disabled by default)\n      // pass autosave: true, autosaveInterval: 6000 in options to set 6 second autosave\n      this.autosave = false;\n      this.autosaveInterval = 5000;\n      this.autosaveHandle = null;\n      this.throttledSaves = true;\n\n      this.options = {};\n\n      // currently keeping persistenceMethod and persistenceAdapter as loki level properties that\n      // will not or cannot be deserialized.  You are required to configure persistence every time\n      // you instantiate a loki object (or use default environment detection) in order to load the database anyways.\n\n      // persistenceMethod could be 'fs', 'localStorage', or 'adapter'\n      // this is optional option param, otherwise environment detection will be used\n      // if user passes their own adapter we will force this method to 'adapter' later, so no need to pass method option.\n      this.persistenceMethod = null;\n\n      // retain reference to optional (non-serializable) persistenceAdapter 'instance'\n      this.persistenceAdapter = null;\n\n      // flags used to throttle saves\n      this.throttledSavePending = false;\n      this.throttledCallbacks = [];\n\n      // enable console output if verbose flag is set (disabled by default)\n      this.verbose = options && options.hasOwnProperty('verbose') ? options.verbose : false;\n\n      this.events = {\n        'init': [],\n        'loaded': [],\n        'flushChanges': [],\n        'close': [],\n        'changes': [],\n        'warning': []\n      };\n\n      var getENV = function () {\n        if (typeof global !== 'undefined' && (global.android || global.NSObject)) {\n           // If no adapter assume nativescript which needs adapter to be passed manually\n           return 'NATIVESCRIPT'; //nativescript\n        }\n\n        if (typeof window === 'undefined') {\n          return 'NODEJS';\n        }\n\n        if (typeof global !== 'undefined' && global.window && process) {\n          return 'NODEJS'; //node-webkit\n        }\n\n        if (typeof document !== 'undefined') {\n          if (document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1) {\n            return 'CORDOVA';\n          }\n          return 'BROWSER';\n        }\n        return 'CORDOVA';\n      };\n\n      // refactored environment detection due to invalid detection for browser environments.\n      // if they do not specify an options.env we want to detect env rather than default to nodejs.\n      // currently keeping two properties for similar thing (options.env and options.persistenceMethod)\n      //   might want to review whether we can consolidate.\n      if (options && options.hasOwnProperty('env')) {\n        this.ENV = options.env;\n      } else {\n        this.ENV = getENV();\n      }\n\n      // not sure if this is necessary now that i have refactored the line above\n      if (this.ENV === 'undefined') {\n        this.ENV = 'NODEJS';\n      }\n\n      this.configureOptions(options, true);\n\n      this.on('init', this.clearChanges);\n\n    }\n\n    // db class is an EventEmitter\n    Loki.prototype = new LokiEventEmitter();\n    Loki.prototype.constructor = Loki;\n\n    // experimental support for browserify's abstract syntax scan to pick up dependency of indexed adapter.\n    // Hopefully, once this hits npm a browserify require of lokijs should scan the main file and detect this indexed adapter reference.\n    Loki.prototype.getIndexedAdapter = function () {\n      var adapter;\n\n      if (typeof require === 'function') {\n        adapter = require(\"./loki-indexed-adapter.js\");\n      }\n\n      return adapter;\n    };\n\n\n    /**\n     * Allows reconfiguring database options\n     *\n     * @param {object} options - configuration options to apply to loki db object\n     * @param {string} options.env - override environment detection as 'NODEJS', 'BROWSER', 'CORDOVA'\n     * @param {boolean} options.verbose - enable console output (default is 'false')\n     * @param {boolean} options.autosave - enables autosave\n     * @param {int} options.autosaveInterval - time interval (in milliseconds) between saves (if dirty)\n     * @param {boolean} options.autoload - enables autoload on loki instantiation\n     * @param {function} options.autoloadCallback - user callback called after database load\n     * @param {adapter} options.adapter - an instance of a loki persistence adapter\n     * @param {string} options.serializationMethod - ['normal', 'pretty', 'destructured']\n     * @param {string} options.destructureDelimiter - string delimiter used for destructured serialization\n     * @param {boolean} initialConfig - (internal) true is passed when loki ctor is invoking\n     * @memberof Loki\n     */\n    Loki.prototype.configureOptions = function (options, initialConfig) {\n      var defaultPersistence = {\n          'NODEJS': 'fs',\n          'BROWSER': 'localStorage',\n          'CORDOVA': 'localStorage',\n          'MEMORY': 'memory'\n        },\n        persistenceMethods = {\n          'fs': LokiFsAdapter,\n          'localStorage': LokiLocalStorageAdapter,\n          'memory': LokiMemoryAdapter\n        };\n\n      this.options = {};\n\n      this.persistenceMethod = null;\n      // retain reference to optional persistence adapter 'instance'\n      // currently keeping outside options because it can't be serialized\n      this.persistenceAdapter = null;\n\n      // process the options\n      if (typeof (options) !== 'undefined') {\n        this.options = options;\n\n        if (this.options.hasOwnProperty('persistenceMethod')) {\n          // check if the specified persistence method is known\n          if (typeof (persistenceMethods[options.persistenceMethod]) == 'function') {\n            this.persistenceMethod = options.persistenceMethod;\n            this.persistenceAdapter = new persistenceMethods[options.persistenceMethod]();\n          }\n          // should be throw an error here, or just fall back to defaults ??\n        }\n\n        // if user passes adapter, set persistence mode to adapter and retain persistence adapter instance\n        if (this.options.hasOwnProperty('adapter')) {\n          this.persistenceMethod = 'adapter';\n          this.persistenceAdapter = options.adapter;\n          this.options.adapter = null;\n        }\n\n\n        // if they want to load database on loki instantiation, now is a good time to load... after adapter set and before possible autosave initiation\n        if (options.autoload && initialConfig) {\n          // for autoload, let the constructor complete before firing callback\n          var self = this;\n          setTimeout(function () {\n            self.loadDatabase(options, options.autoloadCallback);\n          }, 1);\n        }\n\n        if (this.options.hasOwnProperty('autosaveInterval')) {\n          this.autosaveDisable();\n          this.autosaveInterval = parseInt(this.options.autosaveInterval, 10);\n        }\n\n        if (this.options.hasOwnProperty('autosave') && this.options.autosave) {\n          this.autosaveDisable();\n          this.autosave = true;\n\n          if (this.options.hasOwnProperty('autosaveCallback')) {\n            this.autosaveEnable(options, options.autosaveCallback);\n          } else {\n            this.autosaveEnable();\n          }\n        }\n\n        if (this.options.hasOwnProperty('throttledSaves')) {\n          this.throttledSaves = this.options.throttledSaves;\n        }\n      } // end of options processing\n\n      // ensure defaults exists for options which were not set\n      if (!this.options.hasOwnProperty('serializationMethod')) {\n        this.options.serializationMethod = 'normal';\n      }\n\n      // ensure passed or default option exists\n      if (!this.options.hasOwnProperty('destructureDelimiter')) {\n        this.options.destructureDelimiter = '$<\\n';\n      }\n\n      // if by now there is no adapter specified by user nor derived from persistenceMethod: use sensible defaults\n      if (this.persistenceAdapter === null) {\n        this.persistenceMethod = defaultPersistence[this.ENV];\n        if (this.persistenceMethod) {\n          this.persistenceAdapter = new persistenceMethods[this.persistenceMethod]();\n        }\n      }\n\n    };\n\n    /**\n     * Copies 'this' database into a new Loki instance. Object references are shared to make lightweight.\n     *\n     * @param {object} options - apply or override collection level settings\n     * @param {bool} options.removeNonSerializable - nulls properties not safe for serialization.\n     * @memberof Loki\n     */\n    Loki.prototype.copy = function(options) {\n      // in case running in an environment without accurate environment detection, pass 'NA'\n      var databaseCopy = new Loki(this.filename, { env: \"NA\" });\n      var clen, idx;\n\n      options = options || {};\n\n      // currently inverting and letting loadJSONObject do most of the work\n      databaseCopy.loadJSONObject(this, { retainDirtyFlags: true });\n\n      // since our JSON serializeReplacer is not invoked for reference database adapters, this will let us mimic\n      if(options.hasOwnProperty(\"removeNonSerializable\") && options.removeNonSerializable === true) {\n        databaseCopy.autosaveHandle = null;\n        databaseCopy.persistenceAdapter = null;\n\n        clen = databaseCopy.collections.length;\n        for (idx=0; idx<clen; idx++) {\n          databaseCopy.collections[idx].constraints = null;\n          databaseCopy.collections[idx].ttl = null;\n        }\n      }\n\n      return databaseCopy;\n    };\n\n    /**\n     * Adds a collection to the database.\n     * @param {string} name - name of collection to add\n     * @param {object=} options - (optional) options to configure collection with.\n     * @param {array=} [options.unique=[]] - array of property names to define unique constraints for\n     * @param {array=} [options.exact=[]] - array of property names to define exact constraints for\n     * @param {array=} [options.indices=[]] - array property names to define binary indexes for\n     * @param {boolean} [options.asyncListeners=false] - whether listeners are called asynchronously\n     * @param {boolean} [options.disableMeta=false] - set to true to disable meta property on documents\n     * @param {boolean} [options.disableChangesApi=true] - set to false to enable Changes Api\n     * @param {boolean} [options.disableDeltaChangesApi=true] - set to false to enable Delta Changes API (requires Changes API, forces cloning)\n     * @param {boolean} [options.autoupdate=false] - use Object.observe to update objects automatically\n     * @param {boolean} [options.clone=false] - specify whether inserts and queries clone to/from user\n     * @param {string} [options.cloneMethod='parse-stringify'] - 'parse-stringify', 'jquery-extend-deep', 'shallow, 'shallow-assign'\n     * @param {int=} options.ttl - age of document (in ms.) before document is considered aged/stale.\n     * @param {int=} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @returns {Collection} a reference to the collection which was just added\n     * @memberof Loki\n     */\n    Loki.prototype.addCollection = function (name, options) {\n      var i,\n        len = this.collections.length;\n\n      if (options && options.disableMeta === true) {\n        if (options.disableChangesApi === false) {\n          throw new Error(\"disableMeta option cannot be passed as true when disableChangesApi is passed as false\");\n        }\n        if (options.disableDeltaChangesApi === false) {\n          throw new Error(\"disableMeta option cannot be passed as true when disableDeltaChangesApi is passed as false\");\n        }\n        if (typeof options.ttl === \"number\" && options.ttl > 0) {\n          throw new Error(\"disableMeta option cannot be passed as true when ttl is enabled\");\n        }\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === name) {\n          return this.collections[i];\n        }\n      }\n\n      var collection = new Collection(name, options);\n      this.collections.push(collection);\n\n      if (this.verbose)\n        collection.console = console;\n\n      return collection;\n    };\n\n    Loki.prototype.loadCollection = function (collection) {\n      if (!collection.name) {\n        throw new Error('Collection must have a name property to be loaded');\n      }\n      this.collections.push(collection);\n    };\n\n    /**\n     * Retrieves reference to a collection by name.\n     * @param {string} collectionName - name of collection to look up\n     * @returns {Collection} Reference to collection in database by that name, or null if not found\n     * @memberof Loki\n     */\n    Loki.prototype.getCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          return this.collections[i];\n        }\n      }\n\n      // no such collection\n      this.emit('warning', 'collection ' + collectionName + ' not found');\n      return null;\n    };\n\n    /**\n     * Renames an existing loki collection\n     * @param {string} oldName - name of collection to rename\n     * @param {string} newName - new name of collection\n     * @returns {Collection} reference to the newly renamed collection\n     * @memberof Loki\n     */\n    Loki.prototype.renameCollection = function (oldName, newName) {\n      var c = this.getCollection(oldName);\n\n      if (c) {\n        c.name = newName;\n      }\n\n      return c;\n    };\n\n    /**\n     * Returns a list of collections in the database.\n     * @returns {object[]} array of objects containing 'name', 'type', and 'count' properties.\n     * @memberof Loki\n     */\n    Loki.prototype.listCollections = function () {\n\n      var i = this.collections.length,\n        colls = [];\n\n      while (i--) {\n        colls.push({\n          name: this.collections[i].name,\n          type: this.collections[i].objType,\n          count: this.collections[i].data.length\n        });\n      }\n      return colls;\n    };\n\n    /**\n     * Removes a collection from the database.\n     * @param {string} collectionName - name of collection to remove\n     * @memberof Loki\n     */\n    Loki.prototype.removeCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          var tmpcol = new Collection(collectionName, {});\n          var curcol = this.collections[i];\n          for (var prop in curcol) {\n            if (curcol.hasOwnProperty(prop) && tmpcol.hasOwnProperty(prop)) {\n              curcol[prop] = tmpcol[prop];\n            }\n          }\n          this.collections.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    Loki.prototype.getName = function () {\n      return this.name;\n    };\n\n    /**\n     * serializeReplacer - used to prevent certain properties from being serialized\n     *\n     */\n    Loki.prototype.serializeReplacer = function (key, value) {\n      switch (key) {\n      case 'autosaveHandle':\n      case 'persistenceAdapter':\n      case 'constraints':\n      case 'ttl':\n        return null;\n      case 'throttledSavePending':\n      case 'throttledCallbacks':\n        return undefined;\n      default:\n        return value;\n      }\n    };\n\n    /**\n     * Serialize database to a string which can be loaded via {@link Loki#loadJSON}\n     *\n     * @returns {string} Stringified representation of the loki database.\n     * @memberof Loki\n     */\n    Loki.prototype.serialize = function (options) {\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"serializationMethod\")) {\n        options.serializationMethod = this.options.serializationMethod;\n      }\n\n      switch(options.serializationMethod) {\n        case \"normal\": return JSON.stringify(this, this.serializeReplacer);\n        case \"pretty\": return JSON.stringify(this, this.serializeReplacer, 2);\n        case \"destructured\": return this.serializeDestructured(); // use default options\n        default: return JSON.stringify(this, this.serializeReplacer);\n      }\n    };\n\n    // alias of serialize\n    Loki.prototype.toJson = Loki.prototype.serialize;\n\n    /**\n     * Database level destructured JSON serialization routine to allow alternate serialization methods.\n     * Internally, Loki supports destructuring via loki \"serializationMethod' option and\n     * the optional LokiPartitioningAdapter class. It is also available if you wish to do\n     * your own structured persistence or data exchange.\n     *\n     * @param {object=} options - output format options for use externally to loki\n     * @param {bool=} options.partitioned - (default: false) whether db and each collection are separate\n     * @param {int=} options.partition - can be used to only output an individual collection or db (-1)\n     * @param {bool=} options.delimited - (default: true) whether subitems are delimited or subarrays\n     * @param {string=} options.delimiter - override default delimiter\n     *\n     * @returns {string|array} A custom, restructured aggregation of independent serializations.\n     * @memberof Loki\n     */\n    Loki.prototype.serializeDestructured = function(options) {\n      var idx, sidx, result, resultlen;\n      var reconstruct = [];\n      var dbcopy;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      // 'partitioned' along with 'partition' of 0 or greater is a request for single collection serialization\n      if (options.partitioned === true && options.hasOwnProperty(\"partition\") && options.partition >= 0) {\n        return this.serializeCollection({\n          delimited: options.delimited,\n          delimiter: options.delimiter,\n          collectionIndex: options.partition\n        });\n      }\n\n      // not just an individual collection, so we will need to serialize db container via shallow copy\n      dbcopy = new Loki(this.filename);\n      dbcopy.loadJSONObject(this);\n\n      for(idx=0; idx < dbcopy.collections.length; idx++) {\n        dbcopy.collections[idx].data = [];\n      }\n\n      // if we -only- wanted the db container portion, return it now\n      if (options.partitioned === true && options.partition === -1) {\n        // since we are deconstructing, override serializationMethod to normal for here\n        return dbcopy.serialize({\n          serializationMethod: \"normal\"\n        });\n      }\n\n      // at this point we must be deconstructing the entire database\n      // start by pushing db serialization into first array element\n      reconstruct.push(dbcopy.serialize({\n          serializationMethod: \"normal\"\n      }));\n\n      dbcopy = null;\n\n      // push collection data into subsequent elements\n      for(idx=0; idx < this.collections.length; idx++) {\n        result = this.serializeCollection({\n          delimited: options.delimited,\n          delimiter: options.delimiter,\n          collectionIndex: idx\n        });\n\n        // NDA : Non-Delimited Array : one iterable concatenated array with empty string collection partitions\n        if (options.partitioned === false && options.delimited === false) {\n          if (!Array.isArray(result)) {\n            throw new Error(\"a nondelimited, non partitioned collection serialization did not return an expected array\");\n          }\n\n          // Array.concat would probably duplicate memory overhead for copying strings.\n          // Instead copy each individually, and clear old value after each copy.\n          // Hopefully this will allow g.c. to reduce memory pressure, if needed.\n          resultlen = result.length;\n\n          for (sidx=0; sidx < resultlen; sidx++) {\n            reconstruct.push(result[sidx]);\n            result[sidx] = null;\n          }\n\n          reconstruct.push(\"\");\n        }\n        else {\n          reconstruct.push(result);\n        }\n      }\n\n      // Reconstruct / present results according to four combinations : D, DA, NDA, NDAA\n      if (options.partitioned) {\n        // DA : Delimited Array of strings [0] db [1] collection [n] collection { partitioned: true, delimited: true }\n        // useful for simple future adaptations of existing persistence adapters to save collections separately\n        if (options.delimited) {\n          return reconstruct;\n        }\n        // NDAA : Non-Delimited Array with subArrays. db at [0] and collection subarrays at [n] { partitioned: true, delimited : false }\n        // This format might be the most versatile for 'rolling your own' partitioned sync or save.\n        // Memory overhead can be reduced by specifying a specific partition, but at this code path they did not, so its all.\n        else {\n          return reconstruct;\n        }\n      }\n      else {\n        // D : one big Delimited string { partitioned: false, delimited : true }\n        // This is the method Loki will use internally if 'destructured'.\n        // Little memory overhead improvements but does not require multiple asynchronous adapter call scheduling\n        if (options.delimited) {\n          // indicate no more collections\n          reconstruct.push(\"\");\n\n          return reconstruct.join(options.delimiter);\n        }\n        // NDA : Non-Delimited Array : one iterable array with empty string collection partitions { partitioned: false, delimited: false }\n        // This format might be best candidate for custom synchronous syncs or saves\n        else {\n          // indicate no more collections\n          reconstruct.push(\"\");\n\n          return reconstruct;\n        }\n      }\n\n      reconstruct.push(\"\");\n\n      return reconstruct.join(delim);\n    };\n\n    /**\n     * Collection level utility method to serialize a collection in a 'destructured' format\n     *\n     * @param {object=} options - used to determine output of method\n     * @param {int} options.delimited - whether to return single delimited string or an array\n     * @param {string} options.delimiter - (optional) if delimited, this is delimiter to use\n     * @param {int} options.collectionIndex -  specify which collection to serialize data for\n     *\n     * @returns {string|array} A custom, restructured aggregation of independent serializations for a single collection.\n     * @memberof Loki\n     */\n    Loki.prototype.serializeCollection = function(options) {\n      var doccount,\n        docidx,\n        resultlines = [];\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"collectionIndex\")) {\n        throw new Error(\"serializeCollection called without 'collectionIndex' option\");\n      }\n\n      doccount = this.collections[options.collectionIndex].data.length;\n\n      resultlines = [];\n\n      for(docidx=0; docidx<doccount; docidx++) {\n        resultlines.push(JSON.stringify(this.collections[options.collectionIndex].data[docidx]));\n      }\n\n      // D and DA\n      if (options.delimited) {\n         // indicate no more documents in collection (via empty delimited string)\n        resultlines.push(\"\");\n\n        return resultlines.join(options.delimiter);\n      }\n      else {\n        // NDAA and NDA\n        return resultlines;\n      }\n    };\n\n    /**\n     * Database level destructured JSON deserialization routine to minimize memory overhead.\n     * Internally, Loki supports destructuring via loki \"serializationMethod' option and\n     * the optional LokiPartitioningAdapter class. It is also available if you wish to do\n     * your own structured persistence or data exchange.\n     *\n     * @param {string|array} destructuredSource - destructured json or array to deserialize from\n     * @param {object=} options - source format options\n     * @param {bool=} [options.partitioned=false] - whether db and each collection are separate\n     * @param {int=} options.partition - can be used to deserialize only a single partition\n     * @param {bool=} [options.delimited=true] - whether subitems are delimited or subarrays\n     * @param {string=} options.delimiter - override default delimiter\n     *\n     * @returns {object|array} An object representation of the deserialized database, not yet applied to 'this' db or document array\n     * @memberof Loki\n     */\n    Loki.prototype.deserializeDestructured = function(destructuredSource, options) {\n      var workarray=[];\n      var len, cdb;\n      var idx, collIndex=0, collCount, lineIndex=1, done=false;\n      var currLine, currObject;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      // Partitioned\n      // DA : Delimited Array of strings [0] db [1] collection [n] collection { partitioned: true, delimited: true }\n      // NDAA : Non-Delimited Array with subArrays. db at [0] and collection subarrays at [n] { partitioned: true, delimited : false }\n      // -or- single partition\n      if (options.partitioned) {\n        // handle single partition\n        if (options.hasOwnProperty('partition')) {\n          // db only\n          if (options.partition === -1) {\n            cdb = JSON.parse(destructuredSource[0]);\n\n            return cdb;\n          }\n\n          // single collection, return doc array\n          return this.deserializeCollection(destructuredSource[options.partition+1], options);\n        }\n\n        // Otherwise we are restoring an entire partitioned db\n        cdb = JSON.parse(destructuredSource[0]);\n        collCount = cdb.collections.length;\n        for(collIndex=0; collIndex<collCount; collIndex++) {\n          // attach each collection docarray to container collection data, add 1 to collection array index since db is at 0\n          cdb.collections[collIndex].data = this.deserializeCollection(destructuredSource[collIndex+1], options);\n        }\n\n        return cdb;\n      }\n\n      // Non-Partitioned\n      // D : one big Delimited string { partitioned: false, delimited : true }\n      // NDA : Non-Delimited Array : one iterable array with empty string collection partitions { partitioned: false, delimited: false }\n\n      // D\n      if (options.delimited) {\n        workarray = destructuredSource.split(options.delimiter);\n        destructuredSource = null; // lower memory pressure\n        len = workarray.length;\n\n        if (len === 0) {\n          return null;\n        }\n      }\n      // NDA\n      else {\n        workarray = destructuredSource;\n      }\n\n      // first line is database and collection shells\n      cdb = JSON.parse(workarray[0]);\n      collCount = cdb.collections.length;\n      workarray[0] = null;\n\n      while (!done) {\n        currLine = workarray[lineIndex];\n\n        // empty string indicates either end of collection or end of file\n        if (workarray[lineIndex] === \"\") {\n          // if no more collections to load into, we are done\n          if (++collIndex > collCount) {\n            done = true;\n          }\n        }\n        else {\n          currObject = JSON.parse(workarray[lineIndex]);\n          cdb.collections[collIndex].data.push(currObject);\n        }\n\n        // lower memory pressure and advance iterator\n        workarray[lineIndex++] = null;\n      }\n\n      return cdb;\n    };\n\n    /**\n     * Collection level utility function to deserializes a destructured collection.\n     *\n     * @param {string|array} destructuredSource - destructured representation of collection to inflate\n     * @param {object=} options - used to describe format of destructuredSource input\n     * @param {int=} [options.delimited=false] - whether source is delimited string or an array\n     * @param {string=} options.delimiter - if delimited, this is delimiter to use (if other than default)\n     *\n     * @returns {array} an array of documents to attach to collection.data.\n     * @memberof Loki\n     */\n    Loki.prototype.deserializeCollection = function(destructuredSource, options) {\n      var workarray=[];\n      var idx, len;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      if (options.delimited) {\n        workarray = destructuredSource.split(options.delimiter);\n        workarray.pop();\n      }\n      else {\n        workarray = destructuredSource;\n      }\n\n      len = workarray.length;\n      for (idx=0; idx < len; idx++) {\n        workarray[idx] = JSON.parse(workarray[idx]);\n      }\n\n      return workarray;\n    };\n\n    /**\n     * Inflates a loki database from a serialized JSON string\n     *\n     * @param {string} serializedDb - a serialized loki database string\n     * @param {object=} options - apply or override collection level settings\n     * @param {bool} options.retainDirtyFlags - whether collection dirty flags will be preserved\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSON = function (serializedDb, options) {\n      var dbObject;\n      if (serializedDb.length === 0) {\n        dbObject = {};\n      } else {\n        // using option defined in instantiated db not what was in serialized db\n        switch (this.options.serializationMethod) {\n          case \"normal\":\n          case \"pretty\": dbObject = JSON.parse(serializedDb); break;\n          case \"destructured\": dbObject = this.deserializeDestructured(serializedDb); break;\n          default:  dbObject = JSON.parse(serializedDb); break;\n        }\n      }\n\n      this.loadJSONObject(dbObject, options);\n    };\n\n    /**\n     * Inflates a loki database from a JS object\n     *\n     * @param {object} dbObject - a serialized loki database string\n     * @param {object=} options - apply or override collection level settings\n     * @param {bool} options.retainDirtyFlags - whether collection dirty flags will be preserved\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSONObject = function (dbObject, options) {\n      var i = 0,\n        len = dbObject.collections ? dbObject.collections.length : 0,\n        coll,\n        copyColl,\n        clen,\n        j,\n        loader,\n        collObj;\n\n      this.name = dbObject.name;\n\n      // restore save throttled boolean only if not defined in options\n      if (dbObject.hasOwnProperty('throttledSaves') && options && !options.hasOwnProperty('throttledSaves')) {\n        this.throttledSaves = dbObject.throttledSaves;\n      }\n\n      this.collections = [];\n\n      function makeLoader(coll) {\n        var collOptions = options[coll.name];\n        var inflater;\n\n        if(collOptions.proto) {\n          inflater = collOptions.inflate || Utils.copyProperties;\n\n          return function(data) {\n            var collObj = new(collOptions.proto)();\n            inflater(data, collObj);\n            return collObj;\n          };\n        }\n\n        return collOptions.inflate;\n      }\n\n      for (i; i < len; i += 1) {\n        coll = dbObject.collections[i];\n\n        copyColl = this.addCollection(coll.name, { disableChangesApi: coll.disableChangesApi, disableDeltaChangesApi: coll.disableDeltaChangesApi, disableMeta: coll.disableMeta });\n\n        copyColl.adaptiveBinaryIndices = coll.hasOwnProperty('adaptiveBinaryIndices')?(coll.adaptiveBinaryIndices === true): false;\n        copyColl.transactional = coll.transactional;\n        copyColl.asyncListeners = coll.asyncListeners;\n        copyColl.cloneObjects = coll.cloneObjects;\n        copyColl.cloneMethod = coll.cloneMethod || \"parse-stringify\";\n        copyColl.autoupdate = coll.autoupdate;\n        copyColl.changes = coll.changes;\n\n        if (options && options.retainDirtyFlags === true) {\n          copyColl.dirty = coll.dirty;\n        }\n        else {\n          copyColl.dirty = false;\n        }\n\n        // load each element individually\n        clen = coll.data.length;\n        j = 0;\n        if (options && options.hasOwnProperty(coll.name)) {\n          loader = makeLoader(coll);\n\n          for (j; j < clen; j++) {\n            collObj = loader(coll.data[j]);\n            copyColl.data[j] = collObj;\n            copyColl.addAutoUpdateObserver(collObj);\n          }\n        } else {\n\n          for (j; j < clen; j++) {\n            copyColl.data[j] = coll.data[j];\n            copyColl.addAutoUpdateObserver(copyColl.data[j]);\n          }\n        }\n\n        copyColl.maxId = (typeof coll.maxId === 'undefined') ? 0 : coll.maxId;\n        copyColl.idIndex = coll.idIndex;\n        if (typeof (coll.binaryIndices) !== 'undefined') {\n          copyColl.binaryIndices = coll.binaryIndices;\n        }\n        if (typeof coll.transforms !== 'undefined') {\n          copyColl.transforms = coll.transforms;\n        }\n\n        copyColl.ensureId();\n\n        // regenerate unique indexes\n        copyColl.uniqueNames = [];\n        if (coll.hasOwnProperty(\"uniqueNames\")) {\n          copyColl.uniqueNames = coll.uniqueNames;\n          for (j = 0; j < copyColl.uniqueNames.length; j++) {\n            copyColl.ensureUniqueIndex(copyColl.uniqueNames[j]);\n          }\n        }\n\n        // in case they are loading a database created before we added dynamic views, handle undefined\n        if (typeof (coll.DynamicViews) === 'undefined') continue;\n\n        // reinflate DynamicViews and attached Resultsets\n        for (var idx = 0; idx < coll.DynamicViews.length; idx++) {\n          var colldv = coll.DynamicViews[idx];\n\n          var dv = copyColl.addDynamicView(colldv.name, colldv.options);\n          dv.resultdata = colldv.resultdata;\n          dv.resultsdirty = colldv.resultsdirty;\n          dv.filterPipeline = colldv.filterPipeline;\n\n          dv.sortCriteria = colldv.sortCriteria;\n          dv.sortFunction = null;\n\n          dv.sortDirty = colldv.sortDirty;\n          dv.resultset.filteredrows = colldv.resultset.filteredrows;\n          dv.resultset.filterInitialized = colldv.resultset.filterInitialized;\n\n          dv.rematerialize({\n            removeWhereFilters: true\n          });\n        }\n\n        // Upgrade Logic for binary index refactoring at version 1.5\n        if (dbObject.databaseVersion < 1.5) {\n            // rebuild all indices\n            copyColl.ensureAllIndexes(true);\n            copyColl.dirty = true;\n        }\n      }\n    };\n\n    /**\n     * Emits the close event. In autosave scenarios, if the database is dirty, this will save and disable timer.\n     * Does not actually destroy the db.\n     *\n     * @param {function=} callback - (Optional) if supplied will be registered with close event before emitting.\n     * @memberof Loki\n     */\n    Loki.prototype.close = function (callback) {\n      // for autosave scenarios, we will let close perform final save (if dirty)\n      // For web use, you might call from window.onbeforeunload to shutdown database, saving pending changes\n      if (this.autosave) {\n        this.autosaveDisable();\n        if (this.autosaveDirty()) {\n          this.saveDatabase(callback);\n          callback = undefined;\n        }\n      }\n\n      if (callback) {\n        this.on('close', callback);\n      }\n      this.emit('close');\n    };\n\n    /**-------------------------+\n    | Changes API               |\n    +--------------------------*/\n\n    /**\n     * The Changes API enables the tracking the changes occurred in the collections since the beginning of the session,\n     * so it's possible to create a differential dataset for synchronization purposes (possibly to a remote db)\n     */\n\n    /**\n     * (Changes API) : takes all the changes stored in each\n     * collection and creates a single array for the entire database. If an array of names\n     * of collections is passed then only the included collections will be tracked.\n     *\n     * @param {array=} optional array of collection names. No arg means all collections are processed.\n     * @returns {array} array of changes\n     * @see private method createChange() in Collection\n     * @memberof Loki\n     */\n    Loki.prototype.generateChangesNotification = function (arrayOfCollectionNames) {\n      function getCollName(coll) {\n        return coll.name;\n      }\n      var changes = [],\n        selectedCollections = arrayOfCollectionNames || this.collections.map(getCollName);\n\n      this.collections.forEach(function (coll) {\n        if (selectedCollections.indexOf(getCollName(coll)) !== -1) {\n          changes = changes.concat(coll.getChanges());\n        }\n      });\n      return changes;\n    };\n\n    /**\n     * (Changes API) - stringify changes for network transmission\n     * @returns {string} string representation of the changes\n     * @memberof Loki\n     */\n    Loki.prototype.serializeChanges = function (collectionNamesArray) {\n      return JSON.stringify(this.generateChangesNotification(collectionNamesArray));\n    };\n\n    /**\n     * (Changes API) : clears all the changes in all collections.\n     * @memberof Loki\n     */\n    Loki.prototype.clearChanges = function () {\n      this.collections.forEach(function (coll) {\n        if (coll.flushChanges) {\n          coll.flushChanges();\n        }\n      });\n    };\n\n    /*------------------+\n    | PERSISTENCE       |\n    -------------------*/\n\n    /** there are two build in persistence adapters for internal use\n     * fs             for use in Nodejs type environments\n     * localStorage   for use in browser environment\n     * defined as helper classes here so its easy and clean to use\n     */\n\n    /**\n     * In in-memory persistence adapter for an in-memory database.\n     * This simple 'key/value' adapter is intended for unit testing and diagnostics.\n     *\n     * @param {object=} options - memory adapter options\n     * @param {boolean} [options.asyncResponses=false] - whether callbacks are invoked asynchronously\n     * @param {int} [options.asyncTimeout=50] - timeout in ms to queue callbacks\n     * @constructor LokiMemoryAdapter\n     */\n    function LokiMemoryAdapter(options) {\n      this.hashStore = {};\n      this.options = options || {};\n\n      if (!this.options.hasOwnProperty('asyncResponses')) {\n        this.options.asyncResponses = false;\n      }\n\n      if (!this.options.hasOwnProperty('asyncTimeout')) {\n        this.options.asyncTimeout = 50; // 50 ms default\n      }\n    }\n\n    /**\n     * Loads a serialized database from its in-memory store.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.loadDatabase = function (dbname, callback) {\n      var self=this;\n\n      if (this.options.asyncResponses) {\n        setTimeout(function() {\n          if (self.hashStore.hasOwnProperty(dbname)) {\n            callback(self.hashStore[dbname].value);\n          }\n          else {\n            // database doesn't exist, return falsy\n            callback (null);\n          }\n        }, this.options.asyncTimeout);\n      }\n      else {\n        if (this.hashStore.hasOwnProperty(dbname)) {\n          // database doesn't exist, return falsy\n          callback(this.hashStore[dbname].value);\n        }\n        else {\n          callback (null);\n        }\n      }\n    };\n\n    /**\n     * Saves a serialized database to its in-memory store.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.saveDatabase = function (dbname, dbstring, callback) {\n      var self=this;\n      var saveCount;\n\n      if (this.options.asyncResponses) {\n        setTimeout(function() {\n          saveCount = (self.hashStore.hasOwnProperty(dbname)?self.hashStore[dbname].savecount:0);\n\n          self.hashStore[dbname] = {\n            savecount: saveCount+1,\n            lastsave: new Date(),\n            value: dbstring\n          };\n\n          callback();\n        }, this.options.asyncTimeout);\n      }\n      else {\n        saveCount = (this.hashStore.hasOwnProperty(dbname)?this.hashStore[dbname].savecount:0);\n\n        this.hashStore[dbname] = {\n          savecount: saveCount+1,\n          lastsave: new Date(),\n          value: dbstring\n        };\n\n        callback();\n      }\n    };\n\n    /**\n     * Deletes a database from its in-memory store.\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - function to call when done\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.deleteDatabase = function(dbname, callback) {\n      if (this.hashStore.hasOwnProperty(dbname)) {\n        delete this.hashStore[dbname];\n      }\n\n      if (typeof callback === \"function\") {\n        callback();\n      }\n    };\n\n    /**\n     * An adapter for adapters.  Converts a non reference mode adapter into a reference mode adapter\n     * which can perform destructuring and partioning.  Each collection will be stored in its own key/save and\n     * only dirty collections will be saved.  If you  turn on paging with default page size of 25megs and save\n     * a 75 meg collection it should use up roughly 3 save slots (key/value pairs sent to inner adapter).\n     * A dirty collection that spans three pages will save all three pages again\n     * Paging mode was added mainly because Chrome has issues saving 'too large' of a string within a\n     * single indexeddb row.  If a single document update causes the collection to be flagged as dirty, all\n     * of that collection's pages will be written on next save.\n     *\n     * @param {object} adapter - reference to a 'non-reference' mode loki adapter instance.\n     * @param {object=} options - configuration options for partitioning and paging\n     * @param {bool} options.paging - (default: false) set to true to enable paging collection data.\n     * @param {int} options.pageSize - (default : 25MB) you can use this to limit size of strings passed to inner adapter.\n     * @param {string} options.delimiter - allows you to override the default delimeter\n     * @constructor LokiPartitioningAdapter\n     */\n    function LokiPartitioningAdapter(adapter, options) {\n      this.mode = \"reference\";\n      this.adapter = null;\n      this.options = options || {};\n      this.dbref = null;\n      this.dbname = \"\";\n      this.pageIterator = {};\n\n      // verify user passed an appropriate adapter\n      if (adapter) {\n        if (adapter.mode === \"reference\") {\n          throw new Error(\"LokiPartitioningAdapter cannot be instantiated with a reference mode adapter\");\n        }\n        else {\n          this.adapter = adapter;\n        }\n      }\n      else {\n        throw new Error(\"LokiPartitioningAdapter requires a (non-reference mode) adapter on construction\");\n      }\n\n      // set collection paging defaults\n      if (!this.options.hasOwnProperty(\"paging\")) {\n        this.options.paging = false;\n      }\n\n      // default to page size of 25 megs (can be up to your largest serialized object size larger than this)\n      if (!this.options.hasOwnProperty(\"pageSize\")) {\n        this.options.pageSize = 25*1024*1024;\n      }\n\n      if (!this.options.hasOwnProperty(\"delimiter\")) {\n        this.options.delimiter = '$<\\n';\n      }\n    }\n\n    /**\n     * Loads a database which was partitioned into several key/value saves.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiPartitioningAdapter\n     */\n    LokiPartitioningAdapter.prototype.loadDatabase = function (dbname, callback) {\n      var self=this;\n      this.dbname = dbname;\n      this.dbref = new Loki(dbname);\n\n      // load the db container (without data)\n      this.adapter.loadDatabase(dbname, function(result) {\n        // empty database condition is for inner adapter return null/undefined/falsy\n        if (!result) {\n          // partition 0 not found so new database, no need to try to load other partitions.\n          // return same falsy result to loadDatabase to signify no database exists (yet)\n          callback(result);\n          return;\n        }\n\n        if (typeof result !== \"string\") {\n          callback(new Error(\"LokiPartitioningAdapter received an unexpected response from inner adapter loadDatabase()\"));\n        }\n\n        // I will want to use loki destructuring helper methods so i will inflate into typed instance\n        var db = JSON.parse(result);\n        self.dbref.loadJSONObject(db);\n        db = null;\n\n        var clen = self.dbref.collections.length;\n\n        if (self.dbref.collections.length === 0) {\n          callback(self.dbref);\n          return;\n        }\n\n        self.pageIterator = {\n          collection: 0,\n          pageIndex: 0\n        };\n\n        self.loadNextPartition(0, function() {\n          callback(self.dbref);\n        });\n      });\n    };\n\n    /**\n     * Used to sequentially load each collection partition, one at a time.\n     *\n     * @param {int} partition - ordinal collection position to load next\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.loadNextPartition = function(partition, callback) {\n      var keyname = this.dbname + \".\" + partition;\n      var self=this;\n\n      if (this.options.paging === true) {\n        this.pageIterator.pageIndex = 0;\n        this.loadNextPage(callback);\n        return;\n      }\n\n      this.adapter.loadDatabase(keyname, function(result) {\n        var data = self.dbref.deserializeCollection(result, { delimited: true, collectionIndex: partition });\n        self.dbref.collections[partition].data = data;\n\n        if (++partition < self.dbref.collections.length) {\n          self.loadNextPartition(partition, callback);\n        }\n        else {\n          callback();\n        }\n      });\n    };\n\n    /**\n     * Used to sequentially load the next page of collection partition, one at a time.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.loadNextPage = function(callback) {\n      // calculate name for next saved page in sequence\n      var keyname = this.dbname + \".\" + this.pageIterator.collection + \".\" + this.pageIterator.pageIndex;\n      var self=this;\n\n      // load whatever page is next in sequence\n      this.adapter.loadDatabase(keyname, function(result) {\n        var data = result.split(self.options.delimiter);\n        result = \"\"; // free up memory now that we have split it into array\n        var dlen = data.length;\n        var idx;\n\n        // detect if last page by presence of final empty string element and remove it if so\n        var isLastPage = (data[dlen-1] === \"\");\n        if (isLastPage) {\n          data.pop();\n          dlen = data.length;\n          // empty collections are just a delimiter meaning two blank items\n          if (data[dlen-1] === \"\" && dlen === 1) {\n            data.pop();\n            dlen = data.length;\n          }\n        }\n\n        // convert stringified array elements to object instances and push to collection data\n        for(idx=0; idx < dlen; idx++) {\n          self.dbref.collections[self.pageIterator.collection].data.push(JSON.parse(data[idx]));\n          data[idx] = null;\n        }\n        data = [];\n\n        // if last page, we are done with this partition\n        if (isLastPage) {\n\n          // if there are more partitions, kick off next partition load\n          if (++self.pageIterator.collection < self.dbref.collections.length) {\n            self.loadNextPartition(self.pageIterator.collection, callback);\n          }\n          else {\n            callback();\n          }\n        }\n        else {\n          self.pageIterator.pageIndex++;\n          self.loadNextPage(callback);\n        }\n      });\n    };\n\n    /**\n     * Saves a database by partioning into separate key/value saves.\n     * (Loki 'reference mode' persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {object} dbref - reference to database which we will partition and save.\n     * @param {function} callback - adapter callback to return load result to caller\n     *\n     * @memberof LokiPartitioningAdapter\n     */\n    LokiPartitioningAdapter.prototype.exportDatabase = function(dbname, dbref, callback) {\n      var self=this;\n      var idx, clen = dbref.collections.length;\n\n      this.dbref = dbref;\n      this.dbname = dbname;\n\n      // queue up dirty partitions to be saved\n      this.dirtyPartitions = [-1];\n      for(idx=0; idx<clen; idx++) {\n        if (dbref.collections[idx].dirty) {\n          this.dirtyPartitions.push(idx);\n        }\n      }\n\n      this.saveNextPartition(function(err) {\n        callback(err);\n      });\n    };\n\n    /**\n     * Helper method used internally to save each dirty collection, one at a time.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.saveNextPartition = function(callback) {\n      var self=this;\n      var partition = this.dirtyPartitions.shift();\n      var keyname = this.dbname + ((partition===-1)?\"\":(\".\" + partition));\n\n      // if we are doing paging and this is collection partition\n      if (this.options.paging && partition !== -1) {\n        this.pageIterator = {\n          collection: partition,\n          docIndex: 0,\n          pageIndex: 0\n        };\n\n        // since saveNextPage recursively calls itself until done, our callback means this whole paged partition is finished\n        this.saveNextPage(function(err) {\n          if (self.dirtyPartitions.length === 0) {\n            callback(err);\n          }\n          else {\n            self.saveNextPartition(callback);\n          }\n        });\n        return;\n      }\n\n      // otherwise this is 'non-paged' partioning...\n      var result = this.dbref.serializeDestructured({\n        partitioned : true,\n        delimited: true,\n        partition: partition\n      });\n\n      this.adapter.saveDatabase(keyname, result, function(err) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        if (self.dirtyPartitions.length === 0) {\n          callback(null);\n        }\n        else {\n          self.saveNextPartition(callback);\n        }\n      });\n    };\n\n    /**\n     * Helper method used internally to generate and save the next page of the current (dirty) partition.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.saveNextPage = function(callback) {\n      var self=this;\n      var coll = this.dbref.collections[this.pageIterator.collection];\n      var keyname = this.dbname + \".\" + this.pageIterator.collection + \".\" + this.pageIterator.pageIndex;\n      var pageLen=0,\n        cdlen = coll.data.length,\n        delimlen = this.options.delimiter.length;\n      var serializedObject = \"\",\n        pageBuilder = \"\";\n      var doneWithPartition=false,\n        doneWithPage=false;\n\n      var pageSaveCallback = function(err) {\n        pageBuilder = \"\";\n\n        if (err) {\n          callback(err);\n        }\n\n        // update meta properties then continue process by invoking callback\n        if (doneWithPartition) {\n          callback(null);\n        }\n        else {\n          self.pageIterator.pageIndex++;\n          self.saveNextPage(callback);\n        }\n      };\n\n      if (coll.data.length === 0) {\n        doneWithPartition = true;\n      }\n\n      while (true) {\n        if (!doneWithPartition) {\n          // serialize object\n          serializedObject = JSON.stringify(coll.data[this.pageIterator.docIndex]);\n          pageBuilder += serializedObject;\n          pageLen += serializedObject.length;\n\n          // if no more documents in collection to add, we are done with partition\n          if (++this.pageIterator.docIndex >= cdlen) doneWithPartition = true;\n        }\n        // if our current page is bigger than defined pageSize, we are done with page\n        if (pageLen >= this.options.pageSize) doneWithPage = true;\n\n        // if not done with current page, need delimiter before next item\n        // if done with partition we also want a delmiter to indicate 'end of pages' final empty row\n        if (!doneWithPage || doneWithPartition) {\n          pageBuilder += this.options.delimiter;\n          pageLen += delimlen;\n        }\n\n        // if we are done with page save it and pass off to next recursive call or callback\n        if (doneWithPartition || doneWithPage) {\n          this.adapter.saveDatabase(keyname, pageBuilder, pageSaveCallback);\n          return;\n        }\n      }\n    };\n\n    /**\n     * A loki persistence adapter which persists using node fs module\n     * @constructor LokiFsAdapter\n     */\n    function LokiFsAdapter() {\n      try {\n        this.fs = require('fs');\n      }catch(e) {\n        this.fs = null;\n      }\n    }\n\n    /**\n     * loadDatabase() - Load data from file, will throw an error if the file does not exist\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.loadDatabase = function loadDatabase(dbname, callback) {\n      var self = this;\n\n      this.fs.stat(dbname, function (err, stats) {\n        if (!err && stats.isFile()) {\n          self.fs.readFile(dbname, {\n            encoding: 'utf8'\n          }, function readFileCallback(err, data) {\n            if (err) {\n              callback(new Error(err));\n            } else {\n              callback(data);\n            }\n          });\n        }\n        else {\n          callback(null);\n        }\n      });\n    };\n\n    /**\n     * saveDatabase() - save data to file, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring, callback) {\n      var self = this;\n      var tmpdbname = dbname + '~';\n      this.fs.writeFile(tmpdbname, dbstring, function writeFileCallback(err) {\n        if (err) {\n          callback(new Error(err));\n        } else {\n          self.fs.rename(tmpdbname,dbname,callback);\n        }\n      });\n    };\n\n    /**\n     * deleteDatabase() - delete the database file, will throw an error if the\n     * file can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.deleteDatabase = function deleteDatabase(dbname, callback) {\n      this.fs.unlink(dbname, function deleteDatabaseCallback(err) {\n        if (err) {\n          callback(new Error(err));\n        } else {\n          callback();\n        }\n      });\n    };\n\n\n    /**\n     * A loki persistence adapter which persists to web browser's local storage object\n     * @constructor LokiLocalStorageAdapter\n     */\n    function LokiLocalStorageAdapter() {}\n\n    /**\n     * loadDatabase() - Load data from localstorage\n     * @param {string} dbname - the name of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.loadDatabase = function loadDatabase(dbname, callback) {\n      if (localStorageAvailable()) {\n        callback(localStorage.getItem(dbname));\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * saveDatabase() - save data to localstorage, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring, callback) {\n      if (localStorageAvailable()) {\n        localStorage.setItem(dbname, dbstring);\n        callback(null);\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * deleteDatabase() - delete the database from localstorage, will throw an error if it\n     * can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.deleteDatabase = function deleteDatabase(dbname, callback) {\n      if (localStorageAvailable()) {\n        localStorage.removeItem(dbname);\n        callback(null);\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * Wait for throttledSaves to complete and invoke your callback when drained or duration is met.\n     *\n     * @param {function} callback - callback to fire when save queue is drained, it is passed a sucess parameter value\n     * @param {object=} options - configuration options\n     * @param {boolean} options.recursiveWait - (default: true) if after queue is drained, another save was kicked off, wait for it\n     * @param {bool} options.recursiveWaitLimit - (default: false) limit our recursive waiting to a duration\n     * @param {int} options.recursiveWaitLimitDelay - (default: 2000) cutoff in ms to stop recursively re-draining\n     * @memberof Loki\n     */\n    Loki.prototype.throttledSaveDrain = function(callback, options) {\n      var self = this;\n      var now = (new Date()).getTime();\n\n      if (!this.throttledSaves) {\n        callback(true);\n      }\n\n      options = options || {};\n      if (!options.hasOwnProperty('recursiveWait')) {\n        options.recursiveWait = true;\n      }\n      if (!options.hasOwnProperty('recursiveWaitLimit')) {\n        options.recursiveWaitLimit = false;\n      }\n      if (!options.hasOwnProperty('recursiveWaitLimitDuration')) {\n        options.recursiveWaitLimitDuration = 2000;\n      }\n      if (!options.hasOwnProperty('started')) {\n        options.started = (new Date()).getTime();\n      }\n\n      // if save is pending\n      if (this.throttledSaves && this.throttledSavePending) {\n        // if we want to wait until we are in a state where there are no pending saves at all\n        if (options.recursiveWait) {\n          // queue the following meta callback for when it completes\n          this.throttledCallbacks.push(function() {\n            // if there is now another save pending...\n            if (self.throttledSavePending) {\n              // if we wish to wait only so long and we have exceeded limit of our waiting, callback with false success value\n              if (options.recursiveWaitLimit && (now - options.started > options.recursiveWaitLimitDuration)) {\n                callback(false);\n                return;\n              }\n              // it must be ok to wait on next queue drain\n              self.throttledSaveDrain(callback, options);\n              return;\n            }\n            // no pending saves so callback with true success\n            else {\n              callback(true);\n              return;\n            }\n          });\n        }\n        // just notify when current queue is depleted\n        else {\n          this.throttledCallbacks.push(callback);\n          return;\n        }\n      }\n      // no save pending, just callback\n      else {\n        callback(true);\n      }\n    };\n\n    /**\n     * Internal load logic, decoupled from throttling/contention logic\n     *\n     * @param {object} options - not currently used (remove or allow overrides?)\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     */\n    Loki.prototype.loadDatabaseInternal = function (options, callback) {\n      var cFun = callback || function (err, data) {\n          if (err) {\n            throw err;\n          }\n        },\n        self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n\n        this.persistenceAdapter.loadDatabase(this.filename, function loadDatabaseCallback(dbString) {\n          if (typeof (dbString) === 'string') {\n            var parseSuccess = false;\n            try {\n              self.loadJSON(dbString, options || {});\n              parseSuccess = true;\n            } catch (err) {\n              cFun(err);\n            }\n            if (parseSuccess) {\n              cFun(null);\n              self.emit('loaded', 'database ' + self.filename + ' loaded');\n            }\n          } else {\n            // falsy result means new database\n            if (!dbString) {\n              cFun(null);\n              self.emit('loaded', 'empty database ' + self.filename + ' loaded');\n              return;\n            }\n\n            // instanceof error means load faulted\n            if (dbString instanceof Error) {\n                cFun(dbString);\n                return;\n            }\n\n            // if adapter has returned an js object (other than null or error) attempt to load from JSON object\n            if (typeof (dbString) === \"object\") {\n              self.loadJSONObject(dbString, options || {});\n              cFun(null); // return null on success\n              self.emit('loaded', 'database ' + self.filename + ' loaded');\n              return;\n            }\n\n            cFun(\"unexpected adapter response : \" + dbString);\n          }\n        });\n\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * Handles manually loading from file system, local storage, or adapter (such as indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *    To avoid contention with any throttledSaves, we will drain the save queue first.\n     *\n     * If you are configured with autosave, you do not need to call this method yourself.\n     *\n     * @param {object} options - if throttling saves and loads, this controls how we drain save queue before loading\n     * @param {boolean} options.recursiveWait - (default: true) wait recursively until no saves are queued\n     * @param {bool} options.recursiveWaitLimit - (default: false) limit our recursive waiting to a duration\n     * @param {int} options.recursiveWaitLimitDelay - (default: 2000) cutoff in ms to stop recursively re-draining\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     * @example\n     * db.loadDatabase({}, function(err) {\n     *   if (err) {\n     *     console.log(\"error : \" + err);\n     *   }\n     *   else {\n     *     console.log(\"database loaded.\");\n     *   }\n     * });\n     */\n    Loki.prototype.loadDatabase = function (options, callback) {\n      var self=this;\n\n      // if throttling disabled, just call internal\n      if (!this.throttledSaves) {\n        this.loadDatabaseInternal(options, callback);\n        return;\n      }\n\n      // try to drain any pending saves in the queue to lock it for loading\n      this.throttledSaveDrain(function(success) {\n        if (success) {\n          // pause/throttle saving until loading is done\n          self.throttledSavePending = true;\n\n          self.loadDatabaseInternal(options, function(err) {\n            // now that we are finished loading, if no saves were throttled, disable flag\n            if (self.throttledCallbacks.length === 0) {\n              self.throttledSavePending = false;\n            }\n            // if saves requests came in while loading, kick off new save to kick off resume saves\n            else {\n              self.saveDatabase();\n            }\n\n            if (typeof callback === 'function') {\n              callback(err);\n            }\n          });\n          return;\n        }\n        else {\n          if (typeof callback === 'function') {\n            callback(new Error(\"Unable to pause save throttling long enough to read database\"));\n          }\n        }\n      }, options);\n    };\n\n    /**\n     * Internal save logic, decoupled from save throttling logic\n     */\n    Loki.prototype.saveDatabaseInternal = function (callback) {\n      var cFun = callback || function (err) {\n          if (err) {\n            throw err;\n          }\n          return;\n        },\n        self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n        // check if the adapter is requesting (and supports) a 'reference' mode export\n        if (this.persistenceAdapter.mode === \"reference\" && typeof this.persistenceAdapter.exportDatabase === \"function\") {\n          // filename may seem redundant but loadDatabase will need to expect this same filename\n          this.persistenceAdapter.exportDatabase(this.filename, this.copy({removeNonSerializable:true}), function exportDatabaseCallback(err) {\n            self.autosaveClearFlags();\n            cFun(err);\n          });\n        }\n        // otherwise just pass the serialized database to adapter\n        else {\n          // persistenceAdapter might be asynchronous, so we must clear `dirty` immediately\n          // or autosave won't work if an update occurs between here and the callback\n          self.autosaveClearFlags();\n          this.persistenceAdapter.saveDatabase(this.filename, self.serialize(), function saveDatabasecallback(err) {\n            cFun(err);\n          });\n        }\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * Handles manually saving to file system, local storage, or adapter (such as indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *\n     * If you are configured with autosave, you do not need to call this method yourself.\n     *\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     * @example\n     * db.saveDatabase(function(err) {\n     *   if (err) {\n     *     console.log(\"error : \" + err);\n     *   }\n     *   else {\n     *     console.log(\"database saved.\");\n     *   }\n     * });\n     */\n    Loki.prototype.saveDatabase = function (callback) {\n      if (!this.throttledSaves) {\n        this.saveDatabaseInternal(callback);\n        return;\n      }\n\n      if (this.throttledSavePending) {\n        this.throttledCallbacks.push(callback);\n        return;\n      }\n\n      var localCallbacks = this.throttledCallbacks;\n      this.throttledCallbacks = [];\n      localCallbacks.unshift(callback);\n      this.throttledSavePending = true;\n\n      var self = this;\n      this.saveDatabaseInternal(function(err) {\n        self.throttledSavePending = false;\n        localCallbacks.forEach(function(pcb) {\n          if (typeof pcb === 'function') {\n            // Queue the callbacks so we first finish this method execution\n            setTimeout(function() {\n              pcb(err);\n            }, 1);\n          }\n        });\n\n        // since this is called async, future requests may have come in, if so.. kick off next save\n        if (self.throttledCallbacks.length > 0) {\n          self.saveDatabase();\n        }\n      });\n    };\n\n    // alias\n    Loki.prototype.save = Loki.prototype.saveDatabase;\n\n    /**\n     * Handles deleting a database from file system, local\n     *    storage, or adapter (indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     */\n    Loki.prototype.deleteDatabase = function (options, callback) {\n      var cFun = callback || function (err, data) {\n        if (err) {\n          throw err;\n        }\n      };\n\n      // we aren't even using options, so we will support syntax where\n      // callback is passed as first and only argument\n      if (typeof options === 'function' && !callback) {\n        cFun = options;\n      }\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n        this.persistenceAdapter.deleteDatabase(this.filename, function deleteDatabaseCallback(err) {\n          cFun(err);\n        });\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * autosaveDirty - check whether any collections are 'dirty' meaning we need to save (entire) database\n     *\n     * @returns {boolean} - true if database has changed since last autosave, false if not.\n     */\n    Loki.prototype.autosaveDirty = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        if (this.collections[idx].dirty) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * autosaveClearFlags - resets dirty flags on all collections.\n     *    Called from saveDatabase() after db is saved.\n     *\n     */\n    Loki.prototype.autosaveClearFlags = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        this.collections[idx].dirty = false;\n      }\n    };\n\n    /**\n     * autosaveEnable - begin a javascript interval to periodically save the database.\n     *\n     * @param {object} options - not currently used (remove or allow overrides?)\n     * @param {function=} callback - (Optional) user supplied async callback\n     */\n    Loki.prototype.autosaveEnable = function (options, callback) {\n      this.autosave = true;\n\n      var delay = 5000,\n        self = this;\n\n      if (typeof (this.autosaveInterval) !== 'undefined' && this.autosaveInterval !== null) {\n        delay = this.autosaveInterval;\n      }\n\n      this.autosaveHandle = setInterval(function autosaveHandleInterval() {\n        // use of dirty flag will need to be hierarchical since mods are done at collection level with no visibility of 'db'\n        // so next step will be to implement collection level dirty flags set on insert/update/remove\n        // along with loki level isdirty() function which iterates all collections to see if any are dirty\n\n        if (self.autosaveDirty()) {\n          self.saveDatabase(callback);\n        }\n      }, delay);\n    };\n\n    /**\n     * autosaveDisable - stop the autosave interval timer.\n     *\n     */\n    Loki.prototype.autosaveDisable = function () {\n      if (typeof (this.autosaveHandle) !== 'undefined' && this.autosaveHandle !== null) {\n        clearInterval(this.autosaveHandle);\n        this.autosaveHandle = null;\n      }\n    };\n\n\n    /**\n     * Resultset class allowing chainable queries.  Intended to be instanced internally.\n     *    Collection.find(), Collection.where(), and Collection.chain() instantiate this.\n     *\n     * @example\n     *    mycollection.chain()\n     *      .find({ 'doors' : 4 })\n     *      .where(function(obj) { return obj.name === 'Toyota' })\n     *      .data();\n     *\n     * @constructor Resultset\n     * @param {Collection} collection - The collection which this Resultset will query against.\n     */\n    function Resultset(collection, options) {\n      options = options || {};\n\n      // retain reference to collection we are querying against\n      this.collection = collection;\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    }\n\n    /**\n     * reset() - Reset the resultset to its initial state.\n     *\n     * @returns {Resultset} Reference to this resultset, for future chain operations.\n     */\n    Resultset.prototype.reset = function () {\n      if (this.filteredrows.length > 0) {\n        this.filteredrows = [];\n      }\n      this.filterInitialized = false;\n      return this;\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    Resultset.prototype.toJSON = function () {\n      var copy = this.copy();\n      copy.collection = null;\n      return copy;\n    };\n\n    /**\n     * Allows you to limit the number of documents passed to next chain operation.\n     *    A resultset copy() is made to avoid altering original resultset.\n     *\n     * @param {int} qty - The number of documents to return.\n     * @returns {Resultset} Returns a copy of the resultset, limited by qty, for subsequent chain ops.\n     * @memberof Resultset\n     * // find the two oldest users\n     * var result = users.chain().simplesort(\"age\", true).limit(2).data();\n     */\n    Resultset.prototype.limit = function (qty) {\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(0, qty);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * Used for skipping 'pos' number of documents in the resultset.\n     *\n     * @param {int} pos - Number of documents to skip; all preceding documents are filtered out.\n     * @returns {Resultset} Returns a copy of the resultset, containing docs starting at 'pos' for subsequent chain ops.\n     * @memberof Resultset\n     * // find everyone but the two oldest users\n     * var result = users.chain().simplesort(\"age\", true).offset(2).data();\n     */\n    Resultset.prototype.offset = function (pos) {\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(pos);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * copy() - To support reuse of resultset in branched query situations.\n     *\n     * @returns {Resultset} Returns a copy of the resultset (set) but the underlying document references will be the same.\n     * @memberof Resultset\n     */\n    Resultset.prototype.copy = function () {\n      var result = new Resultset(this.collection);\n\n      if (this.filteredrows.length > 0) {\n        result.filteredrows = this.filteredrows.slice();\n      }\n      result.filterInitialized = this.filterInitialized;\n\n      return result;\n    };\n\n    /**\n     * Alias of copy()\n     * @memberof Resultset\n     */\n    Resultset.prototype.branch = Resultset.prototype.copy;\n\n    /**\n     * transform() - executes a named collection transform or raw array of transform steps against the resultset.\n     *\n     * @param transform {(string|array)} - name of collection transform or raw transform array\n     * @param parameters {object=} - (Optional) object property hash of parameters, if the transform requires them.\n     * @returns {Resultset} either (this) resultset or a clone of of this resultset (depending on steps)\n     * @memberof Resultset\n     * @example\n     * users.addTransform('CountryFilter', [\n     *   {\n     *     type: 'find',\n     *     value: {\n     *       'country': { $eq: '[%lktxp]Country' }\n     *     }\n     *   },\n     *   {\n     *     type: 'simplesort',\n     *     property: 'age',\n     *     options: { desc: false}\n     *   }\n     * ]);\n     * var results = users.chain().transform(\"CountryFilter\", { Country: 'fr' }).data();\n     */\n    Resultset.prototype.transform = function (transform, parameters) {\n      var idx,\n        step,\n        rs = this;\n\n      // if transform is name, then do lookup first\n      if (typeof transform === 'string') {\n        if (this.collection.transforms.hasOwnProperty(transform)) {\n          transform = this.collection.transforms[transform];\n        }\n      }\n\n      // either they passed in raw transform array or we looked it up, so process\n      if (typeof transform !== 'object' || !Array.isArray(transform)) {\n        throw new Error(\"Invalid transform\");\n      }\n\n      if (typeof parameters !== 'undefined') {\n        transform = Utils.resolveTransformParams(transform, parameters);\n      }\n\n      for (idx = 0; idx < transform.length; idx++) {\n        step = transform[idx];\n\n        switch (step.type) {\n        case \"find\":\n          rs.find(step.value);\n          break;\n        case \"where\":\n          rs.where(step.value);\n          break;\n        case \"simplesort\":\n          rs.simplesort(step.property, step.desc || step.options);\n          break;\n        case \"compoundsort\":\n          rs.compoundsort(step.value);\n          break;\n        case \"sort\":\n          rs.sort(step.value);\n          break;\n        case \"limit\":\n          rs = rs.limit(step.value);\n          break; // limit makes copy so update reference\n        case \"offset\":\n          rs = rs.offset(step.value);\n          break; // offset makes copy so update reference\n        case \"map\":\n          rs = rs.map(step.value, step.dataOptions);\n          break;\n        case \"eqJoin\":\n          rs = rs.eqJoin(step.joinData, step.leftJoinKey, step.rightJoinKey, step.mapFun, step.dataOptions);\n          break;\n          // following cases break chain by returning array data so make any of these last in transform steps\n        case \"mapReduce\":\n          rs = rs.mapReduce(step.mapFunction, step.reduceFunction);\n          break;\n          // following cases update documents in current filtered resultset (use carefully)\n        case \"update\":\n          rs.update(step.value);\n          break;\n        case \"remove\":\n          rs.remove();\n          break;\n        default:\n          break;\n        }\n      }\n\n      return rs;\n    };\n\n    /**\n     * User supplied compare function is provided two documents to compare. (chainable)\n     * @example\n     *    rslt.sort(function(obj1, obj2) {\n     *      if (obj1.name === obj2.name) return 0;\n     *      if (obj1.name > obj2.name) return 1;\n     *      if (obj1.name < obj2.name) return -1;\n     *    });\n     *\n     * @param {function} comparefun - A javascript compare function used for sorting.\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.sort = function (comparefun) {\n      // if this has no filters applied, just we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (userComparer, data) {\n          return function (a, b) {\n            return userComparer(data[a], data[b]);\n          };\n        })(comparefun, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Simpler, loose evaluation for user to sort based on a property name. (chainable).\n     *    Sorting based on the same lt/gt helper functions used for binary indices.\n     *\n     * @param {string} propname - name of property to sort by.\n     * @param {object|bool=} options - boolean to specify if isdescending, or options object\n     * @param {boolean} [options.desc=false] - whether to sort descending\n     * @param {boolean} [options.disableIndexIntersect=false] - whether we should explicity not use array intersection.\n     * @param {boolean} [options.forceIndexIntersect=false] - force array intersection (if binary index exists).\n     * @param {boolean} [options.useJavascriptSorting=false] - whether results are sorted via basic javascript sort.\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     * @example\n     * var results = users.chain().simplesort('age').data();\n     */\n    Resultset.prototype.simplesort = function (propname, options) {\n      var eff, \n        targetEff = 10,\n        dc = this.collection.data.length, \n        frl = this.filteredrows.length,\n        hasBinaryIndex = this.collection.binaryIndices.hasOwnProperty(propname);\n\n      if (typeof (options) === 'undefined' || options === false) {\n        options = { desc: false };\n      }\n      if (options === true) {\n        options = { desc: true };\n      }\n\n      // if nothing in filtered rows array...\n      if (frl === 0) {\n        // if the filter is initialized to be empty resultset, do nothing\n        if (this.filterInitialized) {\n          return this;\n        }\n        \n        // otherwise no filters applied implies all documents, so we need to populate filteredrows first\n        \n        // if we have a binary index, we can just use that instead of sorting (again)\n        if (this.collection.binaryIndices.hasOwnProperty(propname)) {\n          // make sure index is up-to-date\n          this.collection.ensureIndex(propname);\n          // copy index values into filteredrows\n          this.filteredrows = this.collection.binaryIndices[propname].values.slice(0);\n\n          if (options.desc) {\n            this.filteredrows.reverse();\n          }\n\n          // we are done, return this (resultset) for further chain ops\n          return this;\n        }\n        // otherwise initialize array for sort below\n        else {\n          // build full document index (to be sorted subsequently)\n          this.filteredrows = this.collection.prepareFullDocIndex();\n        }\n      }\n      // otherwise we had results to begin with, see if we qualify for index intercept optimization\n      else {\n\n        // If already filtered, but we want to leverage binary index on sort.\n        // This will use custom array intection algorithm.\n        if (!options.disableIndexIntersect && hasBinaryIndex) {\n\n          // calculate filter efficiency\n          eff = dc/frl;\n\n          // when javascript sort fallback is enabled, you generally need more than ~17% of total docs in resultset\n          // before array intersect is determined to be the faster algorithm, otherwise leave at 10% for loki sort.\n          if (options.useJavascriptSorting) {\n            targetEff = 6;\n          }\n\n          // anything more than ratio of 10:1 (total documents/current results) should use old sort code path\n          // So we will only use array intersection if you have more than 10% of total docs in your current resultset.\n          if (eff <= targetEff || options.forceIndexIntersect) {\n            var idx, fr=this.filteredrows;\n            var io = {};\n            // set up hashobject for simple 'inclusion test' with existing (filtered) results\n            for(idx=0; idx<frl; idx++) {\n              io[fr[idx]] = true;\n            }\n            // grab full sorted binary index array\n            var pv = this.collection.binaryIndices[propname].values;\n\n            // filter by existing results\n            this.filteredrows = pv.filter(function(n) { return io[n]; });\n\n            if (options.desc) {\n              this.filteredrows.reverse();\n            }\n\n            return this;\n          }\n        }\n      }\n\n      // at this point, we will not be able to leverage binary index so we will have to do an array sort\n      \n      // if we have opted to use simplified javascript comparison function...\n      if (options.useJavascriptSorting) {\n        return this.sort(function(obj1, obj2) {\n          if (obj1[propname] === obj2[propname]) return 0;\n          if (obj1[propname] > obj2[propname]) return 1;\n          if (obj1[propname] < obj2[propname]) return -1;\n        });\n      }\n\n      // otherwise use loki sort which will return same results if column is indexed or not\n      var wrappedComparer =\n        (function (prop, desc, data) {\n          var val1, val2, arr;\n          return function (a, b) {\n            if (~prop.indexOf('.')) {\n              arr = prop.split('.');\n              val1 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, data[a]);\n              val2 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, data[b]);\n            } else {\n              val1 = data[a][prop];\n              val2 = data[b][prop];\n            }\n            return sortHelper(val1, val2, desc);\n          };\n        })(propname, options.desc, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * rs.compoundsort(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * rs.compoundsort(['age', ['name', true]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.compoundsort = function (properties) {\n      if (properties.length === 0) {\n        throw new Error(\"Invalid call to compoundsort, need at least one property\");\n      }\n\n      var prop;\n      if (properties.length === 1) {\n        prop = properties[0];\n        if (Array.isArray(prop)) {\n          return this.simplesort(prop[0], prop[1]);\n        }\n        return this.simplesort(prop, false);\n      }\n\n      // unify the structure of 'properties' to avoid checking it repeatedly while sorting\n      for (var i = 0, len = properties.length; i < len; i += 1) {\n        prop = properties[i];\n        if (!Array.isArray(prop)) {\n          properties[i] = [prop, false];\n        }\n      }\n\n      // if this has no filters applied, just we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (props, data) {\n          return function (a, b) {\n            return compoundeval(props, data[a], data[b]);\n          };\n        })(properties, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * findOr() - oversee the operation of OR'ed query expressions.\n     *    OR'ed expression evaluation runs each expression individually against the full collection,\n     *    and finally does a set OR on each expression's results.\n     *    Each evaluation can utilize a binary index to prevent multiple linear array scans.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findOr = function (expressionArray) {\n      var fr = null,\n        fri = 0,\n        frlen = 0,\n        docset = [],\n        idxset = [],\n        idx = 0,\n        origCount = this.count();\n\n      // If filter is already initialized, then we query against only those items already in filter.\n      // This means no index utilization for fields, so hopefully its filtered to a smallish filteredrows.\n      for (var ei = 0, elen = expressionArray.length; ei < elen; ei++) {\n        // we need to branch existing query to run each filter separately and combine results\n        fr = this.branch().find(expressionArray[ei]).filteredrows;\n        frlen = fr.length;\n        // if the find operation did not reduce the initial set, then the initial set is the actual result\n        if (frlen === origCount) {\n          return this;\n        }\n\n        // add any document 'hits'\n        for (fri = 0; fri < frlen; fri++) {\n          idx = fr[fri];\n          if (idxset[idx] === undefined) {\n            idxset[idx] = true;\n            docset.push(idx);\n          }\n        }\n      }\n\n      this.filteredrows = docset;\n      this.filterInitialized = true;\n\n      return this;\n    };\n    Resultset.prototype.$or = Resultset.prototype.findOr;\n\n    /**\n     * findAnd() - oversee the operation of AND'ed query expressions.\n     *    AND'ed expression evaluation runs each expression progressively against the full collection,\n     *    internally utilizing existing chained resultset functionality.\n     *    Only the first filter can utilize a binary index.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findAnd = function (expressionArray) {\n      // we have already implementing method chaining in this (our Resultset class)\n      // so lets just progressively apply user supplied and filters\n      for (var i = 0, len = expressionArray.length; i < len; i++) {\n        if (this.count() === 0) {\n          return this;\n        }\n        this.find(expressionArray[i]);\n      }\n      return this;\n    };\n    Resultset.prototype.$and = Resultset.prototype.findAnd;\n\n    /**\n     * Used for querying via a mongo-style query object.\n     *\n     * @param {object} query - A mongo-style query object used for filtering current results.\n     * @param {boolean=} firstOnly - (Optional) Used by collection.findOne()\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * var over30 = users.chain().find({ age: { $gte: 30 } }).data();\n     */\n    Resultset.prototype.find = function (query, firstOnly) {\n      if (this.collection.data.length === 0) {\n        this.filteredrows = [];\n        this.filterInitialized = true;\n        return this;\n      }\n\n      var queryObject = query || 'getAll',\n        p,\n        property,\n        queryObjectOp,\n        obj,\n        operator,\n        value,\n        key,\n        searchByIndex = false,\n        result = [],\n        filters = [],\n        index = null;\n\n      // flag if this was invoked via findOne()\n      firstOnly = firstOnly || false;\n\n      if (typeof queryObject === 'object') {\n        for (p in queryObject) {\n          obj = {};\n          obj[p] = queryObject[p];\n          filters.push(obj);\n\n          if (hasOwnProperty.call(queryObject, p)) {\n            property = p;\n            queryObjectOp = queryObject[p];\n          }\n        }\n        // if more than one expression in single query object,\n        // convert implicit $and to explicit $and\n        if (filters.length > 1) {\n          return this.find({ '$and': filters }, firstOnly);\n        }\n      }\n\n      // apply no filters if they want all\n      if (!property || queryObject === 'getAll') {\n        if (firstOnly) {\n          this.filteredrows = (this.collection.data.length > 0)?[0]: [];\n          this.filterInitialized = true;\n        }\n\n        return this;\n      }\n\n      // injecting $and and $or expression tree evaluation here.\n      if (property === '$and' || property === '$or') {\n        this[property](queryObjectOp);\n\n        // for chained find with firstonly,\n        if (firstOnly && this.filteredrows.length > 1) {\n          this.filteredrows = this.filteredrows.slice(0, 1);\n        }\n\n        return this;\n      }\n\n      // see if query object is in shorthand mode (assuming eq operator)\n      if (queryObjectOp === null || (typeof queryObjectOp !== 'object' || queryObjectOp instanceof Date)) {\n        operator = '$eq';\n        value = queryObjectOp;\n      } else if (typeof queryObjectOp === 'object') {\n        for (key in queryObjectOp) {\n          if (hasOwnProperty.call(queryObjectOp, key)) {\n            operator = key;\n            value = queryObjectOp[key];\n            break;\n          }\n        }\n      } else {\n        throw new Error('Do not know what you want to do.');\n      }\n\n      // for regex ops, precompile\n      if (operator === '$regex') {\n        if (Array.isArray(value)) {\n          value = new RegExp(value[0], value[1]);\n        } else if (!(value instanceof RegExp)) {\n          value = new RegExp(value);\n        }\n      }\n\n      // if user is deep querying the object such as find('name.first': 'odin')\n      var usingDotNotation = (property.indexOf('.') !== -1);\n\n      // if an index exists for the property being queried against, use it\n      // for now only enabling where it is the first filter applied and prop is indexed\n      var doIndexCheck = !usingDotNotation && !this.filterInitialized;\n\n      if (doIndexCheck && this.collection.binaryIndices[property] && indexedOps[operator]) {\n        // this is where our lazy index rebuilding will take place\n        // basically we will leave all indexes dirty until we need them\n        // so here we will rebuild only the index tied to this property\n        // ensureIndex() will only rebuild if flagged as dirty since we are not passing force=true param\n        if (this.collection.adaptiveBinaryIndices !== true) {\n          this.collection.ensureIndex(property);\n        }\n\n        searchByIndex = true;\n        index = this.collection.binaryIndices[property];\n      }\n\n      // the comparison function\n      var fun = LokiOps[operator];\n\n      // \"shortcut\" for collection data\n      var t = this.collection.data;\n      // filter data length\n      var i = 0,\n        len = 0;\n\n      // Query executed differently depending on :\n      //    - whether the property being queried has an index defined\n      //    - if chained, we handle first pass differently for initial filteredrows[] population\n      //\n      // For performance reasons, each case has its own if block to minimize in-loop calculations\n\n      var filter, rowIdx = 0;\n\n      // If the filteredrows[] is already initialized, use it\n      if (this.filterInitialized) {\n        filter = this.filteredrows;\n        len = filter.length;\n\n        // currently supporting dot notation for non-indexed conditions only\n        if (usingDotNotation) {\n          property = property.split('.');\n          for(i=0; i<len; i++) {\n            rowIdx = filter[i];\n            if (dotSubScan(t[rowIdx], property, fun, value)) {\n              result.push(rowIdx);\n            }\n          }\n        } else {\n          for(i=0; i<len; i++) {\n            rowIdx = filter[i];\n            if (fun(t[rowIdx][property], value)) {\n              result.push(rowIdx);\n            }\n          }\n        }\n      }\n      // first chained query so work against data[] but put results in filteredrows\n      else {\n        // if not searching by index\n        if (!searchByIndex) {\n          len = t.length;\n\n          if (usingDotNotation) {\n            property = property.split('.');\n            for(i=0; i<len; i++) {\n              if (dotSubScan(t[i], property, fun, value)) {\n                result.push(i);\n                if (firstOnly) {\n                  this.filteredrows = result;\n                  this.filterInitialized = true;\n                  return this;\n                }\n              }\n            }\n          } else {\n            for(i=0; i<len; i++) {\n              if (fun(t[i][property], value)) {\n                result.push(i);\n                if (firstOnly) {\n                  this.filteredrows = result;\n                  this.filterInitialized = true;\n                  return this;\n                }\n              }\n            }\n          }\n        } else {\n          // search by index\n          var segm = this.collection.calculateRange(operator, property, value);\n\n          if (operator !== '$in') {\n            for (i = segm[0]; i <= segm[1]; i++) {\n              if (indexedOps[operator] !== true) {\n                // must be a function, implying 2nd phase filtering of results from calculateRange\n                if (indexedOps[operator](t[index.values[i]][property], value)) {\n                  result.push(index.values[i]);\n                  if (firstOnly) {\n                    this.filteredrows = result;\n                    this.filterInitialized = true;\n                    return this;\n                  }\n                }\n              }\n              else {\n                  result.push(index.values[i]);\n                  if (firstOnly) {\n                    this.filteredrows = result;\n                    this.filterInitialized = true;\n                    return this;\n                  }\n              }\n            }\n          } else {\n            for (i = 0, len = segm.length; i < len; i++) {\n              result.push(index.values[segm[i]]);\n              if (firstOnly) {\n                this.filteredrows = result;\n                this.filterInitialized = true;\n                return this;\n              }\n            }\n          }\n        }\n\n      }\n\n      this.filteredrows = result;\n      this.filterInitialized = true; // next time work against filteredrows[]\n      return this;\n    };\n\n\n    /**\n     * where() - Used for filtering via a javascript filter function.\n     *\n     * @param {function} fun - A javascript function used for filtering current results by.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * var over30 = users.chain().where(function(obj) { return obj.age >= 30; }.data();\n     */\n    Resultset.prototype.where = function (fun) {\n      var viewFunction,\n        result = [];\n\n      if ('function' === typeof fun) {\n        viewFunction = fun;\n      } else {\n        throw new TypeError('Argument is not a stored view or a function');\n      }\n      try {\n        // If the filteredrows[] is already initialized, use it\n        if (this.filterInitialized) {\n          var j = this.filteredrows.length;\n\n          while (j--) {\n            if (viewFunction(this.collection.data[this.filteredrows[j]]) === true) {\n              result.push(this.filteredrows[j]);\n            }\n          }\n\n          this.filteredrows = result;\n\n          return this;\n        }\n        // otherwise this is initial chained op, work against data, push into filteredrows[]\n        else {\n          var k = this.collection.data.length;\n\n          while (k--) {\n            if (viewFunction(this.collection.data[k]) === true) {\n              result.push(k);\n            }\n          }\n\n          this.filteredrows = result;\n          this.filterInitialized = true;\n\n          return this;\n        }\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * count() - returns the number of documents in the resultset.\n     *\n     * @returns {number} The number of documents in the resultset.\n     * @memberof Resultset\n     * @example\n     * var over30Count = users.chain().find({ age: { $gte: 30 } }).count();\n     */\n    Resultset.prototype.count = function () {\n      if (this.filterInitialized) {\n        return this.filteredrows.length;\n      }\n      return this.collection.count();\n    };\n\n    /**\n     * Terminates the chain and returns array of filtered documents\n     *\n     * @param {object=} options - allows specifying 'forceClones' and 'forceCloneMethod' options.\n     * @param {boolean} options.forceClones - Allows forcing the return of cloned objects even when\n     *        the collection is not configured for clone object.\n     * @param {string} options.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     *        Possible values include 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {bool} options.removeMeta - Will force clones and strip $loki and meta properties from documents\n     *\n     * @returns {array} Array of documents in the resultset\n     * @memberof Resultset\n     * @example\n     * var resutls = users.chain().find({ age: 34 }).data();\n     */\n    Resultset.prototype.data = function (options) {\n      var result = [],\n        data = this.collection.data,\n        obj,\n        len,\n        i,\n        method;\n\n      options = options || {};\n\n      // if user opts to strip meta, then force clones and use 'shallow' if 'force' options are not present\n      if (options.removeMeta && !options.forceClones) {\n        options.forceClones = true;\n        options.forceCloneMethod = options.forceCloneMethod || 'shallow';\n      }\n\n      // if collection has delta changes active, then force clones and use 'parse-stringify' for effective change tracking of nested objects\n      if (!this.collection.disableDeltaChangesApi) {\n        options.forceClones = true;\n        options.forceCloneMethod = 'parse-stringify';\n      }\n\n      // if this has no filters applied, just return collection.data\n      if (!this.filterInitialized) {\n        if (this.filteredrows.length === 0) {\n          // determine whether we need to clone objects or not\n          if (this.collection.cloneObjects || options.forceClones) {\n            len = data.length;\n            method = options.forceCloneMethod || this.collection.cloneMethod;\n\n            for (i = 0; i < len; i++) {\n              obj = clone(data[i], method);\n              if (options.removeMeta) {\n                delete obj.$loki;\n                delete obj.meta;\n              }\n              result.push(obj);\n            }\n            return result;\n          }\n          // otherwise we are not cloning so return sliced array with same object references\n          else {\n            return data.slice();\n          }\n        } else {\n          // filteredrows must have been set manually, so use it\n          this.filterInitialized = true;\n        }\n      }\n\n      var fr = this.filteredrows;\n      len = fr.length;\n\n      if (this.collection.cloneObjects || options.forceClones) {\n        method = options.forceCloneMethod || this.collection.cloneMethod;\n        for (i = 0; i < len; i++) {\n          obj = clone(data[fr[i]], method);\n          if (options.removeMeta) {\n            delete obj.$loki;\n            delete obj.meta;\n          }\n          result.push(obj);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          result.push(data[fr[i]]);\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Used to run an update operation on all documents currently in the resultset.\n     *\n     * @param {function} updateFunction - User supplied updateFunction(obj) will be executed for each document object.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * users.chain().find({ country: 'de' }).update(function(user) {\n     *   user.phoneFormat = \"+49 AAAA BBBBBB\";\n     * });\n     */\n    Resultset.prototype.update = function (updateFunction) {\n\n      if (typeof (updateFunction) !== \"function\") {\n        throw new TypeError('Argument is not a function');\n      }\n\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var obj, len = this.filteredrows.length,\n        rcd = this.collection.data;\n\n      // pass in each document object currently in resultset to user supplied updateFunction\n      for (var idx = 0; idx < len; idx++) {\n        // if we have cloning option specified or are doing differential delta changes, clone object first\n        if (this.collection.cloneObjects || !this.collection.disableDeltaChangesApi) {\n          obj = clone(rcd[this.filteredrows[idx]], this.collection.cloneMethod);\n          updateFunction(obj);\n          this.collection.update(obj);\n        }\n        else {\n          // no need to clone, so just perform update on collection data object instance\n          updateFunction(rcd[this.filteredrows[idx]]);\n          this.collection.update(rcd[this.filteredrows[idx]]);\n        }\n      }\n\n      return this;\n    };\n\n    /**\n     * Removes all document objects which are currently in resultset from collection (as well as resultset)\n     *\n     * @returns {Resultset} this (empty) resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * // remove users inactive since 1/1/2001\n     * users.chain().find({ lastActive: { $lte: new Date(\"1/1/2001\").getTime() } }).remove();\n     */\n    Resultset.prototype.remove = function () {\n\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      this.collection.removeBatchByPositions(this.filteredrows);\n\n      this.filteredrows = [];\n\n      return this;\n    };\n\n    /**\n     * data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns {value} The output of your reduceFunction\n     * @memberof Resultset\n     * @example\n     * var db = new loki(\"order.db\");\n     * var orders = db.addCollection(\"orders\");\n     * orders.insert([{ qty: 4, unitCost: 100.00 }, { qty: 10, unitCost: 999.99 }, { qty: 2, unitCost: 49.99 }]);\n     *\n     * function mapfun (obj) { return obj.qty*obj.unitCost };\n     * function reducefun(array) {\n     *   var grandTotal=0;\n     *   array.forEach(function(orderTotal) { grandTotal += orderTotal; });\n     *   return grandTotal;\n     * }\n     * var grandOrderTotal = orders.chain().mapReduce(mapfun, reducefun);\n     * console.log(grandOrderTotal);\n     */\n    Resultset.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * eqJoin() - Left joining two sets of data. Join keys can be defined or calculated properties\n     * eqJoin expects the right join key values to be unique.  Otherwise left data will be joined on the last joinData object with that key\n     * @param {Array|Resultset|Collection} joinData - Data array to join to.\n     * @param {(string|function)} leftJoinKey - Property name in this result set to join on or a function to produce a value to join on\n     * @param {(string|function)} rightJoinKey - Property name in the joinData to join on or a function to produce a value to join on\n     * @param {function=} mapFun - (Optional) A function that receives each matching pair and maps them into output objects - function(left,right){return joinedObject}\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @returns {Resultset} A resultset with data in the format [{left: leftObj, right: rightObj}]\n     * @memberof Resultset\n     * @example\n     * var db = new loki('sandbox.db');\n     *\n     * var products = db.addCollection('products');\n     * var orders = db.addCollection('orders');\n     *\n     * products.insert({ productId: \"100234\", name: \"flywheel energy storage\", unitCost: 19999.99 });\n     * products.insert({ productId: \"140491\", name: \"300F super capacitor\", unitCost: 129.99 });\n     * products.insert({ productId: \"271941\", name: \"fuel cell\", unitCost: 3999.99 });\n     * products.insert({ productId: \"174592\", name: \"390V 3AH lithium bank\", unitCost: 4999.99 });\n     *\n     * orders.insert({ orderDate : new Date(\"12/1/2017\").getTime(), prodId: \"174592\", qty: 2, customerId: 2 });\n     * orders.insert({ orderDate : new Date(\"4/15/2016\").getTime(), prodId: \"271941\", qty: 1, customerId: 1 });\n     * orders.insert({ orderDate : new Date(\"3/12/2017\").getTime(), prodId: \"140491\", qty: 4, customerId: 4 });\n     * orders.insert({ orderDate : new Date(\"7/31/2017\").getTime(), prodId: \"100234\", qty: 7, customerId: 3 });\n     * orders.insert({ orderDate : new Date(\"8/3/2016\").getTime(), prodId: \"174592\", qty: 3, customerId: 5 });\n     *\n     * var mapfun = function(left, right) {\n     *   return {\n     *     orderId: left.$loki,\n     *     orderDate: new Date(left.orderDate) + '',\n     *     customerId: left.customerId,\n     *     qty: left.qty,\n     *     productId: left.prodId,\n     *     prodName: right.name,\n     *     prodCost: right.unitCost,\n     *     orderTotal: +((right.unitCost * left.qty).toFixed(2))\n     *   };\n     * };\n     *\n     * // join orders with relevant product info via eqJoin\n     * var orderSummary = orders.chain().eqJoin(products, \"prodId\", \"productId\", mapfun).data();\n     * \n     * console.log(orderSummary);     \n     */\n    Resultset.prototype.eqJoin = function (joinData, leftJoinKey, rightJoinKey, mapFun, dataOptions) {\n\n      var leftData = [],\n        leftDataLength,\n        rightData = [],\n        rightDataLength,\n        key,\n        result = [],\n        leftKeyisFunction = typeof leftJoinKey === 'function',\n        rightKeyisFunction = typeof rightJoinKey === 'function',\n        joinMap = {};\n\n      //get the left data\n      leftData = this.data(dataOptions);\n      leftDataLength = leftData.length;\n\n      //get the right data\n      if (joinData instanceof Collection) {\n        rightData = joinData.chain().data(dataOptions);\n      } else if (joinData instanceof Resultset) {\n        rightData = joinData.data(dataOptions);\n      } else if (Array.isArray(joinData)) {\n        rightData = joinData;\n      } else {\n        throw new TypeError('joinData needs to be an array or result set');\n      }\n      rightDataLength = rightData.length;\n\n      //construct a lookup table\n\n      for (var i = 0; i < rightDataLength; i++) {\n        key = rightKeyisFunction ? rightJoinKey(rightData[i]) : rightData[i][rightJoinKey];\n        joinMap[key] = rightData[i];\n      }\n\n      if (!mapFun) {\n        mapFun = function (left, right) {\n          return {\n            left: left,\n            right: right\n          };\n        };\n      }\n\n      //Run map function over each object in the resultset\n      for (var j = 0; j < leftDataLength; j++) {\n        key = leftKeyisFunction ? leftJoinKey(leftData[j]) : leftData[j][leftJoinKey];\n        result.push(mapFun(leftData[j], joinMap[key] || {}));\n      }\n\n      //return return a new resultset with no filters\n      this.collection = new Collection('joinData');\n      this.collection.insert(result);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    /**\n     * Applies a map function into a new collection for further chaining.\n     * @param {function} mapFun - javascript map function\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @memberof Resultset\n     * @example\n     * var orders.chain().find({ productId: 32 }).map(function(obj) {\n     *   return {\n     *     orderId: $loki,\n     *     productId: productId,\n     *     quantity: qty\n     *   };\n     * });\n     */\n    Resultset.prototype.map = function (mapFun, dataOptions) {\n      var data = this.data(dataOptions).map(mapFun);\n      //return return a new resultset with no filters\n      this.collection = new Collection('mappedData');\n      this.collection.insert(data);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    /**\n     * DynamicView class is a versatile 'live' view class which can have filters and sorts applied.\n     *    Collection.addDynamicView(name) instantiates this DynamicView object and notifies it\n     *    whenever documents are add/updated/removed so it can remain up-to-date. (chainable)\n     *\n     * @example\n     * var mydv = mycollection.addDynamicView('test');  // default is non-persistent\n     * mydv.applyFind({ 'doors' : 4 });\n     * mydv.applyWhere(function(obj) { return obj.name === 'Toyota'; });\n     * var results = mydv.data();\n     *\n     * @constructor DynamicView\n     * @implements LokiEventEmitter\n     * @param {Collection} collection - A reference to the collection to work against\n     * @param {string} name - The name of this dynamic view\n     * @param {object=} options - (Optional) Pass in object with 'persistent' and/or 'sortPriority' options.\n     * @param {boolean} [options.persistent=false] - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} [options.sortPriority='passive'] - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @see {@link Collection#addDynamicView} to construct instances of DynamicView\n     */\n    function DynamicView(collection, name, options) {\n      this.collection = collection;\n      this.name = name;\n      this.rebuildPending = false;\n      this.options = options || {};\n\n      if (!this.options.hasOwnProperty('persistent')) {\n        this.options.persistent = false;\n      }\n\n      // 'persistentSortPriority':\n      // 'passive' will defer the sort phase until they call data(). (most efficient overall)\n      // 'active' will sort async whenever next idle. (prioritizes read speeds)\n      if (!this.options.hasOwnProperty('sortPriority')) {\n        this.options.sortPriority = 'passive';\n      }\n\n      if (!this.options.hasOwnProperty('minRebuildInterval')) {\n        this.options.minRebuildInterval = 1;\n      }\n\n      this.resultset = new Resultset(collection);\n      this.resultdata = [];\n      this.resultsdirty = false;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n      this.sortDirty = false;\n\n      // for now just have 1 event for when we finally rebuilt lazy view\n      // once we refactor transactions, i will tie in certain transactional events\n\n      this.events = {\n        'rebuild': []\n      };\n    }\n\n    DynamicView.prototype = new LokiEventEmitter();\n\n\n    /**\n     * rematerialize() - internally used immediately after deserialization (loading)\n     *    This will clear out and reapply filterPipeline ops, recreating the view.\n     *    Since where filters do not persist correctly, this method allows\n     *    restoring the view to state where user can re-apply those where filters.\n     *\n     * @param {Object=} options - (Optional) allows specification of 'removeWhereFilters' option\n     * @returns {DynamicView} This dynamic view for further chained ops.\n     * @memberof DynamicView\n     * @fires DynamicView.rebuild\n     */\n    DynamicView.prototype.rematerialize = function (options) {\n      var fpl,\n        fpi,\n        idx;\n\n      options = options || {};\n\n      this.resultdata = [];\n      this.resultsdirty = true;\n      this.resultset = new Resultset(this.collection);\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.sortDirty = true;\n      }\n\n      if (options.hasOwnProperty('removeWhereFilters')) {\n        // for each view see if it had any where filters applied... since they don't\n        // serialize those functions lets remove those invalid filters\n        fpl = this.filterPipeline.length;\n        fpi = fpl;\n        while (fpi--) {\n          if (this.filterPipeline[fpi].type === 'where') {\n            if (fpi !== this.filterPipeline.length - 1) {\n              this.filterPipeline[fpi] = this.filterPipeline[this.filterPipeline.length - 1];\n            }\n\n            this.filterPipeline.length--;\n          }\n        }\n      }\n\n      // back up old filter pipeline, clear filter pipeline, and reapply pipeline ops\n      var ofp = this.filterPipeline;\n      this.filterPipeline = [];\n\n      // now re-apply 'find' filterPipeline ops\n      fpl = ofp.length;\n      for (idx = 0; idx < fpl; idx++) {\n        this.applyFind(ofp[idx].val);\n      }\n\n      // during creation of unit tests, i will remove this forced refresh and leave lazy\n      this.data();\n\n      // emit rebuild event in case user wants to be notified\n      this.emit('rebuild', this);\n\n      return this;\n    };\n\n    /**\n     * branchResultset() - Makes a copy of the internal resultset for branched queries.\n     *    Unlike this dynamic view, the branched resultset will not be 'live' updated,\n     *    so your branched query should be immediately resolved and not held for future evaluation.\n     *\n     * @param {(string|array=)} transform - Optional name of collection transform, or an array of transform steps\n     * @param {object=} parameters - optional parameters (if optional transform requires them)\n     * @returns {Resultset} A copy of the internal resultset for branched queries.\n     * @memberof DynamicView\n     * @example\n     * var db = new loki('test');\n     * var coll = db.addCollection('mydocs');\n     * var dv = coll.addDynamicView('myview');\n     * var tx = [\n     *   {\n     *     type: 'offset',\n     *     value: '[%lktxp]pageStart'\n     *   },\n     *   {\n     *     type: 'limit',\n     *     value: '[%lktxp]pageSize'\n     *   }\n     * ];\n     * coll.addTransform('viewPaging', tx);\n     * \n     * // add some records\n     * \n     * var results = dv.branchResultset('viewPaging', { pageStart: 10, pageSize: 10 }).data();     \n     */\n    DynamicView.prototype.branchResultset = function (transform, parameters) {\n      var rs = this.resultset.branch();\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    DynamicView.prototype.toJSON = function () {\n      var copy = new DynamicView(this.collection, this.name, this.options);\n\n      copy.resultset = this.resultset;\n      copy.resultdata = []; // let's not save data (copy) to minimize size\n      copy.resultsdirty = true;\n      copy.filterPipeline = this.filterPipeline;\n      copy.sortFunction = this.sortFunction;\n      copy.sortCriteria = this.sortCriteria;\n      copy.sortCriteriaSimple = this.sortCriteriaSimple || null;\n      copy.sortDirty = this.sortDirty;\n\n      // avoid circular reference, reapply in db.loadJSON()\n      copy.collection = null;\n\n      return copy;\n    };\n\n    /**\n     * removeFilters() - Used to clear pipeline and reset dynamic view to initial state.\n     *     Existing options should be retained.\n     * @param {object=} options - configure removeFilter behavior\n     * @param {boolean=} options.queueSortPhase - (default: false) if true we will async rebuild view (maybe set default to true in future?)\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilters = function (options) {\n      options = options || {};\n\n      this.rebuildPending = false;\n      this.resultset.reset();\n      this.resultdata = [];\n      this.resultsdirty = true;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n      this.sortDirty = false;\n\n      if (options.queueSortPhase === true) {\n        this.queueSortPhase();\n      }\n    };\n\n    /**\n     * applySort() - Used to apply a sort to the dynamic view\n     * @example\n     * dv.applySort(function(obj1, obj2) {\n     *   if (obj1.name === obj2.name) return 0;\n     *   if (obj1.name > obj2.name) return 1;\n     *   if (obj1.name < obj2.name) return -1;\n     * });\n     *\n     * @param {function} comparefun - a javascript compare function used for sorting\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySort = function (comparefun) {\n      this.sortFunction = comparefun;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySimpleSort() - Used to specify a property used for view translation.\n     * @example\n     * dv.applySimpleSort(\"name\");\n     *\n     * @param {string} propname - Name of property by which to sort.\n     * @param {object|boolean=} options - boolean for sort descending or options object\n     * @param {boolean} [options.desc=false] - whether we should sort descending.\n     * @param {boolean} [options.disableIndexIntersect=false] - whether we should explicity not use array intersection.\n     * @param {boolean} [options.forceIndexIntersect=false] - force array intersection (if binary index exists).\n     * @param {boolean} [options.useJavascriptSorting=false] - whether results are sorted via basic javascript sort.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySimpleSort = function (propname, options) {\n      this.sortCriteriaSimple = { propname: propname, options: options || false };\n      this.sortCriteria = null;\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySortCriteria() - Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * dv.applySortCriteria(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * dv.applySortCriteria(['age', ['name', true]);\n     * // to sort by age (descending) and then by name (descending)\n     * dv.applySortCriteria(['age', true], ['name', true]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {DynamicView} Reference to this DynamicView, sorted, for future chain operations.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySortCriteria = function (criteria) {\n      this.sortCriteria = criteria;\n      this.sortCriteriaSimple = null;\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * startTransaction() - marks the beginning of a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.startTransaction = function () {\n      this.cachedresultset = this.resultset.copy();\n\n      return this;\n    };\n\n    /**\n     * commit() - commits a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.commit = function () {\n      this.cachedresultset = null;\n\n      return this;\n    };\n\n    /**\n     * rollback() - rolls back a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.rollback = function () {\n      this.resultset = this.cachedresultset;\n\n      if (this.options.persistent) {\n        // for now just rebuild the persistent dynamic view data in this worst case scenario\n        // (a persistent view utilizing transactions which get rolled back), we already know the filter so not too bad.\n        this.resultdata = this.resultset.data();\n\n        this.emit('rebuild', this);\n      }\n\n      return this;\n    };\n\n\n    /**\n     * Implementation detail.\n     * _indexOfFilterWithId() - Find the index of a filter in the pipeline, by that filter's ID.\n     *\n     * @param {(string|number)} uid - The unique ID of the filter.\n     * @returns {number}: index of the referenced filter in the pipeline; -1 if not found.\n     */\n    DynamicView.prototype._indexOfFilterWithId = function (uid) {\n      if (typeof uid === 'string' || typeof uid === 'number') {\n        for (var idx = 0, len = this.filterPipeline.length; idx < len; idx += 1) {\n          if (uid === this.filterPipeline[idx].uid) {\n            return idx;\n          }\n        }\n      }\n      return -1;\n    };\n\n    /**\n     * Implementation detail.\n     * _addFilter() - Add the filter object to the end of view's filter pipeline and apply the filter to the resultset.\n     *\n     * @param {object} filter - The filter object. Refer to applyFilter() for extra details.\n     */\n    DynamicView.prototype._addFilter = function (filter) {\n      this.filterPipeline.push(filter);\n      this.resultset[filter.type](filter.val);\n    };\n\n    /**\n     * reapplyFilters() - Reapply all the filters in the current pipeline.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.reapplyFilters = function () {\n      this.resultset.reset();\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      var filters = this.filterPipeline;\n      this.filterPipeline = [];\n\n      for (var idx = 0, len = filters.length; idx < len; idx += 1) {\n        this._addFilter(filters[idx]);\n      }\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFilter() - Adds or updates a filter in the DynamicView filter pipeline\n     *\n     * @param {object} filter - A filter object to add to the pipeline.\n     *    The object is in the format { 'type': filter_type, 'val', filter_param, 'uid', optional_filter_id }\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFilter = function (filter) {\n      var idx = this._indexOfFilterWithId(filter.uid);\n      if (idx >= 0) {\n        this.filterPipeline[idx] = filter;\n        return this.reapplyFilters();\n      }\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      this._addFilter(filter);\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFind() - Adds or updates a mongo-style query option in the DynamicView filter pipeline\n     *\n     * @param {object} query - A mongo-style query object to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFind = function (query, uid) {\n      this.applyFilter({\n        type: 'find',\n        val: query,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * applyWhere() - Adds or updates a javascript filter function in the DynamicView filter pipeline\n     *\n     * @param {function} fun - A javascript filter function to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyWhere = function (fun, uid) {\n      this.applyFilter({\n        type: 'where',\n        val: fun,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * removeFilter() - Remove the specified filter from the DynamicView filter pipeline\n     *\n     * @param {(string|number)} uid - The unique ID of the filter to be removed.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilter = function (uid) {\n      var idx = this._indexOfFilterWithId(uid);\n      if (idx < 0) {\n        throw new Error(\"Dynamic view does not contain a filter with ID: \" + uid);\n      }\n\n      this.filterPipeline.splice(idx, 1);\n      this.reapplyFilters();\n      return this;\n    };\n\n    /**\n     * count() - returns the number of documents representing the current DynamicView contents.\n     *\n     * @returns {number} The number of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.count = function () {\n      // in order to be accurate we will pay the minimum cost (and not alter dv state management)\n      // recurring resultset data resolutions should know internally its already up to date.\n      // for persistent data this will not update resultdata nor fire rebuild event.\n      if (this.resultsdirty) {\n        this.resultdata = this.resultset.data();\n      }\n\n      return this.resultset.count();\n    };\n\n    /**\n     * data() - resolves and pending filtering and sorting, then returns document array as result.\n     *\n     * @param {object=} options - optional parameters to pass to resultset.data() if non-persistent\n     * @param {boolean} options.forceClones - Allows forcing the return of cloned objects even when\n     *        the collection is not configured for clone object.\n     * @param {string} options.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     *        Possible values include 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {bool} options.removeMeta - Will force clones and strip $loki and meta properties from documents\n     * @returns {array} An array of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.data = function (options) {\n      // using final sort phase as 'catch all' for a few use cases which require full rebuild\n      if (this.sortDirty || this.resultsdirty) {\n        this.performSortPhase({\n          suppressRebuildEvent: true\n        });\n      }\n      return (this.options.persistent) ? (this.resultdata) : (this.resultset.data(options));\n    };\n\n    /**\n     * queueRebuildEvent() - When the view is not sorted we may still wish to be notified of rebuild events.\n     *     This event will throttle and queue a single rebuild event when batches of updates affect the view.\n     */\n    DynamicView.prototype.queueRebuildEvent = function () {\n      if (this.rebuildPending) {\n        return;\n      }\n      this.rebuildPending = true;\n\n      var self = this;\n      setTimeout(function () {\n        if (self.rebuildPending) {\n          self.rebuildPending = false;\n          self.emit('rebuild', self);\n        }\n      }, this.options.minRebuildInterval);\n    };\n\n    /**\n     * queueSortPhase : If the view is sorted we will throttle sorting to either :\n     *    (1) passive - when the user calls data(), or\n     *    (2) active - once they stop updating and yield js thread control\n     */\n    DynamicView.prototype.queueSortPhase = function () {\n      // already queued? exit without queuing again\n      if (this.sortDirty) {\n        return;\n      }\n      this.sortDirty = true;\n\n      var self = this;\n      if (this.options.sortPriority === \"active\") {\n        // active sorting... once they are done and yield js thread, run async performSortPhase()\n        setTimeout(function () {\n          self.performSortPhase();\n        }, this.options.minRebuildInterval);\n      } else {\n        // must be passive sorting... since not calling performSortPhase (until data call), lets use queueRebuildEvent to\n        // potentially notify user that data has changed.\n        this.queueRebuildEvent();\n      }\n    };\n\n    /**\n     * performSortPhase() - invoked synchronously or asynchronously to perform final sort phase (if needed)\n     *\n     */\n    DynamicView.prototype.performSortPhase = function (options) {\n      // async call to this may have been pre-empted by synchronous call to data before async could fire\n      if (!this.sortDirty && !this.resultsdirty) {\n        return;\n      }\n\n      options = options || {};\n\n      if (this.sortDirty) {\n        if (this.sortFunction) {\n          this.resultset.sort(this.sortFunction);\n        } else if (this.sortCriteria) {\n          this.resultset.compoundsort(this.sortCriteria);\n        } else if (this.sortCriteriaSimple) {\n          this.resultset.simplesort(this.sortCriteriaSimple.propname, this.sortCriteriaSimple.options);\n        }\n\n        this.sortDirty = false;\n      }\n\n      if (this.options.persistent) {\n        // persistent view, rebuild local resultdata array\n        this.resultdata = this.resultset.data();\n        this.resultsdirty = false;\n      }\n\n      if (!options.suppressRebuildEvent) {\n        this.emit('rebuild', this);\n      }\n    };\n\n    /**\n     * evaluateDocument() - internal method for (re)evaluating document inclusion.\n     *    Called by : collection.insert() and collection.update().\n     *\n     * @param {int} objIndex - index of document to (re)run through filter pipeline.\n     * @param {bool} isNew - true if the document was just added to the collection.\n     */\n    DynamicView.prototype.evaluateDocument = function (objIndex, isNew) {\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      var ofr = this.resultset.filteredrows;\n      var oldPos = (isNew) ? (-1) : (ofr.indexOf(+objIndex));\n      var oldlen = ofr.length;\n\n      // creating a 1-element resultset to run filter chain ops on to see if that doc passes filters;\n      // mostly efficient algorithm, slight stack overhead price (this function is called on inserts and updates)\n      var evalResultset = new Resultset(this.collection);\n      evalResultset.filteredrows = [objIndex];\n      evalResultset.filterInitialized = true;\n      var filter;\n      for (var idx = 0, len = this.filterPipeline.length; idx < len; idx++) {\n        filter = this.filterPipeline[idx];\n        evalResultset[filter.type](filter.val);\n      }\n\n      // not a true position, but -1 if not pass our filter(s), 0 if passed filter(s)\n      var newPos = (evalResultset.filteredrows.length === 0) ? -1 : 0;\n\n      // wasn't in old, shouldn't be now... do nothing\n      if (oldPos === -1 && newPos === -1) return;\n\n      // wasn't in resultset, should be now... add\n      if (oldPos === -1 && newPos !== -1) {\n        ofr.push(objIndex);\n\n        if (this.options.persistent) {\n          this.resultdata.push(this.collection.data[objIndex]);\n        }\n\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, shouldn't be now... delete\n      if (oldPos !== -1 && newPos === -1) {\n        if (oldPos < oldlen - 1) {\n          ofr.splice(oldPos, 1);\n\n          if (this.options.persistent) {\n            this.resultdata.splice(oldPos, 1);\n          }\n        } else {\n          ofr.length = oldlen - 1;\n\n          if (this.options.persistent) {\n            this.resultdata.length = oldlen - 1;\n          }\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, should still be now... (update persistent only?)\n      if (oldPos !== -1 && newPos !== -1) {\n        if (this.options.persistent) {\n          // in case document changed, replace persistent view data with the latest collection.data document\n          this.resultdata[oldPos] = this.collection.data[objIndex];\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n    };\n\n    /**\n     * removeDocument() - internal function called on collection.delete()\n     * @param {number|number[]} objIndex - index of document to (re)run through filter pipeline.\n     */\n    DynamicView.prototype.removeDocument = function (objIndex) {\n      var idx, rmidx, rmlen, rxo = {}, fxo = {};\n      var adjels = [];\n      var drs = this.resultset;\n      var fr = this.resultset.filteredrows;\n      var frlen = fr.length;\n\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      // if passed single index, wrap in array\n      if (!Array.isArray(objIndex)) {\n        objIndex = [objIndex];\n      }\n\n      rmlen = objIndex.length;\n      // create intersection object of data indices to remove\n      for(rmidx=0;rmidx<rmlen; rmidx++) {\n        rxo[objIndex[rmidx]] = true;\n      }\n\n      // pivot remove data indices into remove filteredrows indices and dump in hashobject\n      for (idx=0; idx<frlen; idx++) {\n        if (rxo[fr[idx]]) fxo[idx] = true;\n      }\n\n      // if any of the removed items were in our filteredrows...\n      if (Object.keys(fxo).length > 0) {\n        // remove them from filtered rows\n        this.resultset.filteredrows = this.resultset.filteredrows.filter(function(di, idx) { return !fxo[idx]; });\n        // if persistent...\n        if (this.options.persistent) {\n          // remove from resultdata\n          this.resultdata = this.resultdata.filter(function(obj, idx) { return !fxo[idx]; });\n        }\n\n        // and queue sorts \n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n      }\n\n      // to remove holes, we need to 'shift down' indices, this filter function finds number of positions to shift\n      var filt = function(idx) { return function(di) { return di < drs.filteredrows[idx]; }; };\n\n      frlen = drs.filteredrows.length;\n      for (idx = 0; idx < frlen; idx++) {\n        // grab subset of removed elements where data index is less than current filtered row data index;\n        // use this to determine how many positions iterated remaining data index needs to be 'shifted down'\n        adjels = objIndex.filter(filt(idx));\n        drs.filteredrows[idx] -= adjels.length;\n      }\n    };\n\n    /**\n     * mapReduce() - data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns The output of your reduceFunction\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n\n    /**\n     * Collection class that handles documents of same type\n     * @constructor Collection\n     * @implements LokiEventEmitter\n     * @param {string} name - collection name\n     * @param {(array|object)=} options - (optional) array of property names to be indicized OR a configuration object\n     * @param {array=} [options.unique=[]] - array of property names to define unique constraints for\n     * @param {array=} [options.exact=[]] - array of property names to define exact constraints for\n     * @param {array=} [options.indices=[]] - array property names to define binary indexes for\n     * @param {boolean} [options.adaptiveBinaryIndices=true] - collection indices will be actively rebuilt rather than lazily\n     * @param {boolean} [options.asyncListeners=false] - whether listeners are invoked asynchronously\n     * @param {boolean} [options.disableMeta=false] - set to true to disable meta property on documents\n     * @param {boolean} [options.disableChangesApi=true] - set to false to enable Changes API\n     * @param {boolean} [options.disableDeltaChangesApi=true] - set to false to enable Delta Changes API (requires Changes API, forces cloning)\n     * @param {boolean} [options.autoupdate=false] - use Object.observe to update objects automatically\n     * @param {boolean} [options.clone=false] - specify whether inserts and queries clone to/from user\n     * @param {boolean} [options.serializableIndices=true[]] - converts date values on binary indexed properties to epoch time\n     * @param {string} [options.cloneMethod='parse-stringify'] - 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {int=} options.ttl - age of document (in ms.) before document is considered aged/stale.\n     * @param {int=} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @see {@link Loki#addCollection} for normal creation of collections\n     */\n    function Collection(name, options) {\n      // the name of the collection\n\n      this.name = name;\n      // the data held by the collection\n      this.data = [];\n      this.idIndex = []; // index of id\n      this.binaryIndices = {}; // user defined indexes\n      this.constraints = {\n        unique: {},\n        exact: {}\n      };\n\n      // unique contraints contain duplicate object references, so they are not persisted.\n      // we will keep track of properties which have unique contraint applied here, and regenerate on load\n      this.uniqueNames = [];\n\n      // transforms will be used to store frequently used query chains as a series of steps\n      // which itself can be stored along with the database.\n      this.transforms = {};\n\n      // the object type of the collection\n      this.objType = name;\n\n      // in autosave scenarios we will use collection level dirty flags to determine whether save is needed.\n      // currently, if any collection is dirty we will autosave the whole database if autosave is configured.\n      // defaulting to true since this is called from addCollection and adding a collection should trigger save\n      this.dirty = true;\n\n      // private holders for cached data\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      var self = this;\n\n      /* OPTIONS */\n      options = options || {};\n\n      // exact match and unique constraints\n      if (options.hasOwnProperty('unique')) {\n        if (!Array.isArray(options.unique)) {\n          options.unique = [options.unique];\n        }\n        options.unique.forEach(function (prop) {\n          self.uniqueNames.push(prop); // used to regenerate on subsequent database loads\n          self.constraints.unique[prop] = new UniqueIndex(prop);\n        });\n      }\n\n      if (options.hasOwnProperty('exact')) {\n        options.exact.forEach(function (prop) {\n          self.constraints.exact[prop] = new ExactIndex(prop);\n        });\n      }\n\n      // if set to true we will optimally keep indices 'fresh' during insert/update/remove ops (never dirty/never needs rebuild)\n      // if you frequently intersperse insert/update/remove ops between find ops this will likely be significantly faster option.\n      this.adaptiveBinaryIndices = options.hasOwnProperty('adaptiveBinaryIndices') ? options.adaptiveBinaryIndices : true;\n\n      // is collection transactional\n      this.transactional = options.hasOwnProperty('transactional') ? options.transactional : false;\n\n      // options to clone objects when inserting them\n      this.cloneObjects = options.hasOwnProperty('clone') ? options.clone : false;\n\n      // default clone method (if enabled) is parse-stringify\n      this.cloneMethod = options.hasOwnProperty('cloneMethod') ? options.cloneMethod : \"parse-stringify\";\n\n      // option to make event listeners async, default is sync\n      this.asyncListeners = options.hasOwnProperty('asyncListeners') ? options.asyncListeners : false;\n\n      // if set to true we will not maintain a meta property for a document\n      this.disableMeta = options.hasOwnProperty('disableMeta') ? options.disableMeta : false;\n\n      // disable track changes\n      this.disableChangesApi = options.hasOwnProperty('disableChangesApi') ? options.disableChangesApi : true;\n\n      // disable delta update object style on changes\n      this.disableDeltaChangesApi = options.hasOwnProperty('disableDeltaChangesApi') ? options.disableDeltaChangesApi : true;\n      if (this.disableChangesApi) { this.disableDeltaChangesApi = true; }\n\n      // option to observe objects and update them automatically, ignored if Object.observe is not supported\n      this.autoupdate = options.hasOwnProperty('autoupdate') ? options.autoupdate : false;\n\n      // by default, if you insert a document into a collection with binary indices, if those indexed properties contain\n      // a DateTime we will convert to epoch time format so that (across serializations) its value position will be the\n      // same 'after' serialization as it was 'before'.\n      this.serializableIndices = options.hasOwnProperty('serializableIndices') ? options.serializableIndices : true;\n\n      //option to activate a cleaner daemon - clears \"aged\" documents at set intervals.\n      this.ttl = {\n        age: null,\n        ttlInterval: null,\n        daemon: null\n      };\n      this.setTTL(options.ttl || -1, options.ttlInterval);\n\n      // currentMaxId - change manually at your own peril!\n      this.maxId = 0;\n\n      this.DynamicViews = [];\n\n      // events\n      this.events = {\n        'insert': [],\n        'update': [],\n        'pre-insert': [],\n        'pre-update': [],\n        'close': [],\n        'flushbuffer': [],\n        'error': [],\n        'delete': [],\n        'warning': []\n      };\n\n      // changes are tracked by collection and aggregated by the db\n      this.changes = [];\n\n      // initialize the id index\n      this.ensureId();\n      var indices = [];\n      // initialize optional user-supplied indices array ['age', 'lname', 'zip']\n      if (options && options.indices) {\n        if (Object.prototype.toString.call(options.indices) === '[object Array]') {\n          indices = options.indices;\n        } else if (typeof options.indices === 'string') {\n          indices = [options.indices];\n        } else {\n          throw new TypeError('Indices needs to be a string or an array of strings');\n        }\n      }\n\n      for (var idx = 0; idx < indices.length; idx++) {\n        this.ensureIndex(indices[idx]);\n      }\n\n      function observerCallback(changes) {\n\n        var changedObjects = typeof Set === 'function' ? new Set() : [];\n\n        if (!changedObjects.add)\n          changedObjects.add = function (object) {\n            if (this.indexOf(object) === -1)\n              this.push(object);\n            return this;\n          };\n\n        changes.forEach(function (change) {\n          changedObjects.add(change.object);\n        });\n\n        changedObjects.forEach(function (object) {\n          if (!hasOwnProperty.call(object, '$loki'))\n            return self.removeAutoUpdateObserver(object);\n          try {\n            self.update(object);\n          } catch (err) {}\n        });\n      }\n\n      this.observerCallback = observerCallback;\n\n      //Compare changed object (which is a forced clone) with existing object and return the delta\n      function getChangeDelta(obj, old) {\n        if (old) {\n          return getObjectDelta(old, obj);\n        }\n        else {\n          return JSON.parse(JSON.stringify(obj));\n        }\n      }\n\n      this.getChangeDelta = getChangeDelta;\n\n      function getObjectDelta(oldObject, newObject) {\n        var propertyNames = newObject !== null && typeof newObject === 'object' ? Object.keys(newObject) : null;\n        if (propertyNames && propertyNames.length && ['string', 'boolean', 'number'].indexOf(typeof(newObject)) < 0) {\n          var delta = {};\n          for (var i = 0; i < propertyNames.length; i++) {\n            var propertyName = propertyNames[i];\n            if (newObject.hasOwnProperty(propertyName)) {\n              if (!oldObject.hasOwnProperty(propertyName) || self.uniqueNames.indexOf(propertyName) >= 0 || propertyName == '$loki' || propertyName == 'meta') {\n                delta[propertyName] = newObject[propertyName];\n              }\n              else {\n                var propertyDelta = getObjectDelta(oldObject[propertyName], newObject[propertyName]);\n                if (typeof propertyDelta !== \"undefined\" && propertyDelta != {}) {\n                  delta[propertyName] = propertyDelta;\n                }\n              }\n            }\n          }\n          return Object.keys(delta).length === 0 ? undefined : delta;\n        }\n        else {\n          return oldObject === newObject ? undefined : newObject;\n        }\n      }\n\n      this.getObjectDelta = getObjectDelta;\n\n      // clear all the changes\n      function flushChanges() {\n        self.changes = [];\n      }\n\n      this.getChanges = function () {\n        return self.changes;\n      };\n\n      this.flushChanges = flushChanges;\n\n      this.setChangesApi = function (enabled) {\n        self.disableChangesApi = !enabled;\n        if (!enabled) { self.disableDeltaChangesApi = false; }\n      };\n\n      this.on('delete', function deleteCallback(obj) {\n        if (!self.disableChangesApi) {\n          self.createChange(self.name, 'R', obj);\n        }\n      });\n\n      this.on('warning', function (warning) {\n        self.console.warn(warning);\n      });\n      // for de-serialization purposes\n      flushChanges();\n    }\n\n    Collection.prototype = new LokiEventEmitter();\n\n    /*\n      * For ChangeAPI default to clone entire object, for delta changes create object with only differences (+ $loki and meta)\n      */\n    Collection.prototype.createChange = function(name, op, obj, old) {\n      this.changes.push({\n        name: name,\n        operation: op,\n        obj: op == 'U' && !this.disableDeltaChangesApi ? this.getChangeDelta(obj, old) : JSON.parse(JSON.stringify(obj))\n      });\n    };\n\n    Collection.prototype.insertMeta = function(obj) {\n      var len, idx;\n\n      if (this.disableMeta || !obj) {\n        return;\n      }\n\n      // if batch insert\n      if (Array.isArray(obj)) {\n        len = obj.length;\n\n        for(idx=0; idx<len; idx++) {\n          if (!obj[idx].hasOwnProperty('meta')) {\n            obj[idx].meta = {};\n          }\n\n          obj[idx].meta.created = (new Date()).getTime();\n          obj[idx].meta.revision = 0;\n        }\n\n        return;\n      }\n\n      // single object\n      if (!obj.meta) {\n        obj.meta = {};\n      }\n\n      obj.meta.created = (new Date()).getTime();\n      obj.meta.revision = 0;\n    };\n\n    Collection.prototype.updateMeta = function(obj) {\n      if (this.disableMeta || !obj) {\n        return;\n      }\n      obj.meta.updated = (new Date()).getTime();\n      obj.meta.revision += 1;\n    };\n\n    Collection.prototype.createInsertChange = function(obj) {\n      this.createChange(this.name, 'I', obj);\n    };\n\n    Collection.prototype.createUpdateChange = function(obj, old) {\n      this.createChange(this.name, 'U', obj, old);\n    };\n\n    Collection.prototype.insertMetaWithChange = function(obj) {\n      this.insertMeta(obj);\n      this.createInsertChange(obj);\n    };\n\n    Collection.prototype.updateMetaWithChange = function(obj, old) {\n      this.updateMeta(obj);\n      this.createUpdateChange(obj, old);\n    };\n\n    Collection.prototype.console = {\n      log: function () {},\n      warn: function () {},\n      error: function () {},\n    };\n\n    Collection.prototype.addAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.observe(object, this.observerCallback, ['add', 'update', 'delete', 'reconfigure', 'setPrototype']);\n    };\n\n    Collection.prototype.removeAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.unobserve(object, this.observerCallback);\n    };\n\n    /**\n     * Adds a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {array} transform - an array of transformation 'step' objects to save into the collection\n     * @memberof Collection\n     * @example\n     * users.addTransform('progeny', [\n     *   {\n     *     type: 'find',\n     *     value: {\n     *       'age': {'$lte': 40}\n     *     }\n     *   }\n     * ]);\n     *\n     * var results = users.chain('progeny').data();\n     */\n    Collection.prototype.addTransform = function (name, transform) {\n      if (this.transforms.hasOwnProperty(name)) {\n        throw new Error(\"a transform by that name already exists\");\n      }\n\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Retrieves a named transform from the collection.\n     * @param {string} name - name of the transform to lookup.\n     * @memberof Collection\n     */\n    Collection.prototype.getTransform = function (name) {\n      return this.transforms[name];\n    };\n\n    /**\n     * Updates a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {object} transform - a transformation object to save into collection\n     * @memberof Collection\n     */\n    Collection.prototype.setTransform = function (name, transform) {\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Removes a named collection transform from the collection\n     * @param {string} name - name of collection transform to remove\n     * @memberof Collection\n     */\n    Collection.prototype.removeTransform = function (name) {\n      delete this.transforms[name];\n    };\n\n    Collection.prototype.byExample = function (template) {\n      var k, obj, query;\n      query = [];\n      for (k in template) {\n        if (!template.hasOwnProperty(k)) continue;\n        query.push((\n          obj = {},\n          obj[k] = template[k],\n          obj\n        ));\n      }\n      return {\n        '$and': query\n      };\n    };\n\n    Collection.prototype.findObject = function (template) {\n      return this.findOne(this.byExample(template));\n    };\n\n    Collection.prototype.findObjects = function (template) {\n      return this.find(this.byExample(template));\n    };\n\n    /*----------------------------+\n    | TTL daemon                  |\n    +----------------------------*/\n    Collection.prototype.ttlDaemonFuncGen = function () {\n      var collection = this;\n      var age = this.ttl.age;\n      return function ttlDaemon() {\n        var now = Date.now();\n        var toRemove = collection.chain().where(function daemonFilter(member) {\n          var timestamp = member.meta.updated || member.meta.created;\n          var diff = now - timestamp;\n          return age < diff;\n        });\n        toRemove.remove();\n      };\n    };\n\n    /**\n     * Updates or applies collection TTL settings.\n     * @param {int} age - age (in ms) to expire document from collection\n     * @param {int} interval - time (in ms) to clear collection of aged documents.\n     * @memberof Collection\n     */\n    Collection.prototype.setTTL = function (age, interval) {\n      if (age < 0) {\n        clearInterval(this.ttl.daemon);\n      } else {\n        this.ttl.age = age;\n        this.ttl.ttlInterval = interval;\n        this.ttl.daemon = setInterval(this.ttlDaemonFuncGen(), interval);\n      }\n    };\n\n    /*----------------------------+\n    | INDEXING                    |\n    +----------------------------*/\n\n    /**\n     * create a row filter that covers all documents in the collection\n     */\n    Collection.prototype.prepareFullDocIndex = function () {\n      var len = this.data.length;\n      var indexes = new Array(len);\n      for (var i = 0; i < len; i += 1) {\n        indexes[i] = i;\n      }\n      return indexes;\n    };\n\n    /**\n     * Will allow reconfiguring certain collection options.\n     * @param {boolean} options.adaptiveBinaryIndices - collection indices will be actively rebuilt rather than lazily\n     * @memberof Collection\n     */\n    Collection.prototype.configureOptions = function (options) {\n      options = options || {};\n\n      if (options.hasOwnProperty('adaptiveBinaryIndices')) {\n        this.adaptiveBinaryIndices = options.adaptiveBinaryIndices;\n\n        // if switching to adaptive binary indices, make sure none are 'dirty'\n        if (this.adaptiveBinaryIndices) {\n          this.ensureAllIndexes();\n        }\n      }\n    };\n\n    /**\n     * Ensure binary index on a certain field\n     * @param {string} property - name of property to create binary index on\n     * @param {boolean=} force - (Optional) flag indicating whether to construct index immediately\n     * @memberof Collection\n     */\n    Collection.prototype.ensureIndex = function (property, force) {\n      // optional parameter to force rebuild whether flagged as dirty or not\n      if (typeof (force) === 'undefined') {\n        force = false;\n      }\n\n      if (property === null || property === undefined) {\n        throw new Error('Attempting to set index without an associated property');\n      }\n\n      if (this.binaryIndices[property] && !force) {\n        if (!this.binaryIndices[property].dirty) return;\n      }\n\n      // if the index is already defined and we are using adaptiveBinaryIndices and we are not forcing a rebuild, return.\n      if (this.adaptiveBinaryIndices === true && this.binaryIndices.hasOwnProperty(property) && !force) {\n        return;\n      }\n\n      var index = {\n        'name': property,\n        'dirty': true,\n        'values': this.prepareFullDocIndex()\n      };\n      this.binaryIndices[property] = index;\n\n      var wrappedComparer =\n        (function (prop, data) {\n          var val1, val2, arr;\n          return function (a, b) {\n            if (~prop.indexOf('.')) {\n              arr = prop.split('.');\n              val1 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, data[a]);\n              val2 = arr.reduce(function(obj, i) { return obj && obj[i] || undefined; }, data[b]);\n            } else {\n              val1 = data[a][prop];\n              val2 = data[b][prop];\n            }\n\n            if (val1 !== val2) {\n              if (Comparators.lt(val1, val2, false)) return -1;\n              if (Comparators.gt(val1, val2, false)) return 1;\n            }\n            return 0;\n          };\n        })(property, this.data);\n\n      index.values.sort(wrappedComparer);\n      index.dirty = false;\n\n      this.dirty = true; // for autosave scenarios\n    };\n\n    /**\n     * Perform checks to determine validity/consistency of all binary indices\n     * @param {object=} options - optional configuration object\n     * @param {boolean} [options.randomSampling=false] - whether (faster) random sampling should be used\n     * @param {number} [options.randomSamplingFactor=0.10] - percentage of total rows to randomly sample\n     * @param {boolean} [options.repair=false] - whether to fix problems if they are encountered\n     * @returns {string[]} array of index names where problems were found.\n     * @memberof Collection\n     * @example\n     * // check all indices on a collection, returns array of invalid index names\n     * var result = coll.checkAllIndexes({ repair: true, randomSampling: true, randomSamplingFactor: 0.15 });\n     * if (result.length > 0) {\n     *   results.forEach(function(name) { \n     *     console.log('problem encountered with index : ' + name); \n     *   });\n     * }     \n     */\n    Collection.prototype.checkAllIndexes = function (options) {\n      var key, bIndices = this.binaryIndices;\n      var results = [], result;\n\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          result = this.checkIndex(key, options);\n          if (!result) {\n            results.push(key);\n          }\n        }\n      }\n\n      return results;\n    };\n\n    /**\n     * Perform checks to determine validity/consistency of a binary index\n     * @param {string} property - name of the binary-indexed property to check\n     * @param {object=} options - optional configuration object\n     * @param {boolean} [options.randomSampling=false] - whether (faster) random sampling should be used\n     * @param {number} [options.randomSamplingFactor=0.10] - percentage of total rows to randomly sample\n     * @param {boolean} [options.repair=false] - whether to fix problems if they are encountered\n     * @returns {boolean} whether the index was found to be valid (before optional correcting).\n     * @memberof Collection\n     * @example\n     * // full test\n     * var valid = coll.checkIndex('name');\n     * // full test with repair (if issues found)\n     * valid = coll.checkIndex('name', { repair: true });\n     * // random sampling (default is 10% of total document count)\n     * valid = coll.checkIndex('name', { randomSampling: true });\n     * // random sampling (sample 20% of total document count)\n     * valid = coll.checkIndex('name', { randomSampling: true, randomSamplingFactor: 0.20 });\n     * // random sampling (implied boolean)\n     * valid = coll.checkIndex('name', { randomSamplingFactor: 0.20 });\n     * // random sampling with repair (if issues found)\n     * valid = coll.checkIndex('name', { repair: true, randomSampling: true });\n     */\n    Collection.prototype.checkIndex = function (property, options) {\n      options = options || {};\n      // if 'randomSamplingFactor' specified but not 'randomSampling', assume true\n      if (options.randomSamplingFactor && options.randomSampling !== false) {\n        options.randomSampling = true;\n      }\n      options.randomSamplingFactor = options.randomSamplingFactor || 0.1;\n      if (options.randomSamplingFactor < 0 || options.randomSamplingFactor > 1) {\n        options.randomSamplingFactor = 0.1;\n      }\n\n      var valid=true, idx, iter, pos, len, biv;\n\n      // make sure we are passed a valid binary index name\n      if (!this.binaryIndices.hasOwnProperty(property)) {\n        throw new Error(\"called checkIndex on property without an index: \" + property);\n      }\n\n      // if lazy indexing, rebuild only if flagged as dirty\n      if (!this.adaptiveBinaryIndices) {\n        this.ensureIndex(property);\n      }\n\n      biv = this.binaryIndices[property].values;\n      len = biv.length;\n\n      // if the index has an incorrect number of values\n      if (len !== this.data.length) {\n        if (options.repair) {\n          this.ensureIndex(property, true);\n        }\n        return false;\n      }\n\n      if (len === 0) {\n        return true;\n      }\n\n      if (len === 1) {\n        valid = (biv[0] === 0);\n      }\n      else {\n        if (options.randomSampling) {\n          // validate first and last\n          if (!LokiOps.$lte(this.data[biv[0]][property], this.data[biv[1]][property])) {\n            valid=false;\n          }\n          if (!LokiOps.$lte(this.data[biv[len-2]][property], this.data[biv[len-1]][property])) {\n            valid=false;\n          }\n\n          // if first and last positions are sorted correctly with their nearest neighbor,\n          // continue onto random sampling phase...\n          if (valid) {\n            // # random samplings = total count * sampling factor\n            iter = Math.floor((len-1) * options.randomSamplingFactor);\n\n            // for each random sampling, validate that the binary index is sequenced properly\n            // with next higher value.\n            for(idx=0; idx<iter-1; idx++) {\n              // calculate random position\n              pos = Math.floor(Math.random() * (len-1));\n              if (!LokiOps.$lte(this.data[biv[pos]][property], this.data[biv[pos+1]][property])) {\n                valid=false;\n                break;\n              }\n            }\n          }\n        }\n        else {\n          // validate that the binary index is sequenced properly\n          for(idx=0; idx<len-1; idx++) {\n            if (!LokiOps.$lte(this.data[biv[idx]][property], this.data[biv[idx+1]][property])) {\n              valid=false;\n              break;\n            }\n          }\n        }\n      }\n\n      // if incorrectly sequenced and we are to fix problems, rebuild index\n      if (!valid && options.repair) {\n        this.ensureIndex(property, true);\n      }\n\n      return valid;\n    };\n\n    Collection.prototype.getBinaryIndexValues = function (property) {\n      var idx, idxvals = this.binaryIndices[property].values;\n      var result = [];\n\n      for (idx = 0; idx < idxvals.length; idx++) {\n        result.push(this.data[idxvals[idx]][property]);\n      }\n\n      return result;\n    };\n\n    Collection.prototype.ensureUniqueIndex = function (field) {\n      var index = this.constraints.unique[field];\n      if (!index) {\n        // keep track of new unique index for regenerate after database (re)load.\n        if (this.uniqueNames.indexOf(field) == -1) {\n          this.uniqueNames.push(field);\n        }\n      }\n\n      // if index already existed, (re)loading it will likely cause collisions, rebuild always\n      this.constraints.unique[field] = index = new UniqueIndex(field);\n      this.data.forEach(function (obj) {\n        index.set(obj);\n      });\n      return index;\n    };\n\n    /**\n     * Ensure all binary indices\n     * @param {boolean} force - whether to force rebuild of existing lazy binary indices\n     * @memberof Collection\n     */\n    Collection.prototype.ensureAllIndexes = function (force) {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          this.ensureIndex(key, force);\n        }\n      }\n    };\n\n    /**\n     * Internal method used to flag all lazy index as dirty\n     */\n    Collection.prototype.flagBinaryIndexesDirty = function () {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          bIndices[key].dirty = true;\n        }\n      }\n    };\n\n    /**\n     * Internal method used to flag a lazy index as dirty\n     */\n    Collection.prototype.flagBinaryIndexDirty = function (index) {\n      if (this.binaryIndices[index])\n        this.binaryIndices[index].dirty = true;\n    };\n\n    /**\n     * Quickly determine number of documents in collection (or query)\n     * @param {object=} query - (optional) query object to count results of\n     * @returns {number} number of documents in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.count = function (query) {\n      if (!query) {\n        return this.data.length;\n      }\n\n      return this.chain().find(query).filteredrows.length;\n    };\n\n    /**\n     * Rebuild idIndex\n     */\n    Collection.prototype.ensureId = function () {\n      var len = this.data.length,\n        i = 0;\n\n      this.idIndex = [];\n      for (i; i < len; i += 1) {\n        this.idIndex.push(this.data[i].$loki);\n      }\n    };\n\n    /**\n     * Rebuild idIndex async with callback - useful for background syncing with a remote server\n     */\n    Collection.prototype.ensureIdAsync = function (callback) {\n      this.async(function () {\n        this.ensureId();\n      }, callback);\n    };\n\n    /**\n     * Add a dynamic view to the collection\n     * @param {string} name - name of dynamic view to add\n     * @param {object=} options - options to configure dynamic view with\n     * @param {boolean} [options.persistent=false] - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} [options.sortPriority='passive'] - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @returns {DynamicView} reference to the dynamic view added\n     * @memberof Collection\n     * @example\n     * var pview = users.addDynamicView('progeny');\n     * pview.applyFind({'age': {'$lte': 40}});\n     * pview.applySimpleSort('name');\n     *\n     * var results = pview.data();\n     **/\n\n    Collection.prototype.addDynamicView = function (name, options) {\n      var dv = new DynamicView(this, name, options);\n      this.DynamicViews.push(dv);\n\n      return dv;\n    };\n\n    /**\n     * Remove a dynamic view from the collection\n     * @param {string} name - name of dynamic view to remove\n     * @memberof Collection\n     **/\n    Collection.prototype.removeDynamicView = function (name) {\n      for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n        if (this.DynamicViews[idx].name === name) {\n          this.DynamicViews.splice(idx, 1);\n        }\n      }\n    };\n\n    /**\n     * Look up dynamic view reference from within the collection\n     * @param {string} name - name of dynamic view to retrieve reference of\n     * @returns {DynamicView} A reference to the dynamic view with that name\n     * @memberof Collection\n     **/\n    Collection.prototype.getDynamicView = function (name) {\n      for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n        if (this.DynamicViews[idx].name === name) {\n          return this.DynamicViews[idx];\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * Applies a 'mongo-like' find query object and passes all results to an update function.\n     * For filter function querying you should migrate to [updateWhere()]{@link Collection#updateWhere}.\n     *\n     * @param {object|function} filterObject - 'mongo-like' query object (or deprecated filterFunction mode)\n     * @param {function} updateFunction - update function to run against filtered documents\n     * @memberof Collection\n     */\n    Collection.prototype.findAndUpdate = function (filterObject, updateFunction) {\n      if (typeof (filterObject) === \"function\") {\n        this.updateWhere(filterObject, updateFunction);\n      }\n      else {\n        this.chain().find(filterObject).update(updateFunction);\n      }\n    };\n\n    /**\n     * Applies a 'mongo-like' find query object removes all documents which match that filter.\n     *\n     * @param {object} filterObject - 'mongo-like' query object\n     * @memberof Collection\n     */\n    Collection.prototype.findAndRemove = function(filterObject) {\n      this.chain().find(filterObject).remove();\n    };\n\n    /**\n     * Adds object(s) to collection, ensure object(s) have meta properties, clone it if necessary, etc.\n     * @param {(object|array)} doc - the document (or array of documents) to be inserted\n     * @returns {(object|array)} document or documents inserted\n     * @memberof Collection\n     * @example\n     * users.insert({\n     *     name: 'Odin',\n     *     age: 50,\n     *     address: 'Asgard'\n     * });\n     *\n     * // alternatively, insert array of documents\n     * users.insert([{ name: 'Thor', age: 35}, { name: 'Loki', age: 30}]);\n     */\n    Collection.prototype.insert = function (doc) {\n      if (!Array.isArray(doc)) {\n        return this.insertOne(doc);\n      }\n\n      // holder to the clone of the object inserted if collections is set to clone objects\n      var obj;\n      var results = [];\n\n      this.emit('pre-insert', doc);\n      for (var i = 0, len = doc.length; i < len; i++) {\n        obj = this.insertOne(doc[i], true);\n        if (!obj) {\n          return undefined;\n        }\n        results.push(obj);\n      }\n\n      // at the 'batch' level, if clone option is true then emitted docs are clones\n      this.emit('insert', results);\n\n      // if clone option is set, clone return values\n      results = this.cloneObjects ? clone(results, this.cloneMethod) : results;\n\n      return results.length === 1 ? results[0] : results;\n    };\n\n    /**\n     * Adds a single object, ensures it has meta properties, clone it if necessary, etc.\n     * @param {object} doc - the document to be inserted\n     * @param {boolean} bulkInsert - quiet pre-insert and insert event emits\n     * @returns {object} document or 'undefined' if there was a problem inserting it\n     */\n    Collection.prototype.insertOne = function (doc, bulkInsert) {\n      var err = null;\n      var returnObj;\n\n      if (typeof doc !== 'object') {\n        err = new TypeError('Document needs to be an object');\n      } else if (doc === null) {\n        err = new TypeError('Object cannot be null');\n      }\n\n      if (err !== null) {\n        this.emit('error', err);\n        throw err;\n      }\n\n      // if configured to clone, do so now... otherwise just use same obj reference\n      var obj = this.cloneObjects ? clone(doc, this.cloneMethod) : doc;\n\n      if (!this.disableMeta && typeof obj.meta === 'undefined') {\n        obj.meta = {\n          revision: 0,\n          created: 0\n        };\n      }\n\n      // both 'pre-insert' and 'insert' events are passed internal data reference even when cloning\n      // insert needs internal reference because that is where loki itself listens to add meta\n      if (!bulkInsert) {\n        this.emit('pre-insert', obj);\n      }\n      if (!this.add(obj)) {\n        return undefined;\n      }\n\n      // update meta and store changes if ChangesAPI is enabled\n      // (moved from \"insert\" event listener to allow internal reference to be used)\n      if (this.disableChangesApi) {\n        this.insertMeta(obj);\n      }\n      else {\n        this.insertMetaWithChange(obj);\n      }\n\n      // if cloning is enabled, emit insert event with clone of new object\n      returnObj = this.cloneObjects ? clone(obj, this.cloneMethod) : obj;\n      if (!bulkInsert) {\n        this.emit('insert', returnObj);\n      }\n\n      this.addAutoUpdateObserver(returnObj);\n      return returnObj;\n    };\n\n    /**\n     * Empties the collection.\n     * @param {object=} options - configure clear behavior\n     * @param {bool=} [options.removeIndices=false] - whether to remove indices in addition to data\n     * @memberof Collection\n     */\n    Collection.prototype.clear = function (options) {\n      var self = this;\n\n      options = options || {};\n\n      this.data = [];\n      this.idIndex = [];\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      this.maxId = 0;\n      this.DynamicViews = [];\n      this.dirty = true;\n\n      // if removing indices entirely\n      if (options.removeIndices === true) {\n        this.binaryIndices = {};\n\n        this.constraints = {\n          unique: {},\n          exact: {}\n        };\n        this.uniqueNames = [];\n      }\n      // clear indices but leave definitions in place\n      else {\n        // clear binary indices\n        var keys = Object.keys(this.binaryIndices);\n        keys.forEach(function(biname) {\n          self.binaryIndices[biname].dirty = false;\n          self.binaryIndices[biname].values = [];\n        });\n\n        // clear entire unique indices definition\n        this.constraints = {\n          unique: {},\n          exact: {}\n        };\n\n        // add definitions back\n        this.uniqueNames.forEach(function(uiname) {\n          self.ensureUniqueIndex(uiname);\n        });\n      }\n    };\n\n    /**\n     * Updates an object and notifies collection that the document has changed.\n     * @param {object} doc - document to update within the collection\n     * @memberof Collection\n     */\n    Collection.prototype.update = function (doc) {\n      var adaptiveBatchOverride, k, len;\n\n      if (Array.isArray(doc)) {\n        len = doc.length;\n\n        // if not cloning, disable adaptive binary indices for the duration of the batch update,\n        // followed by lazy rebuild and re-enabling adaptive indices after batch update.\n        adaptiveBatchOverride = !this.cloneObjects &&\n          this.adaptiveBinaryIndices && Object.keys(this.binaryIndices).length > 0;\n\n        if (adaptiveBatchOverride) {\n          this.adaptiveBinaryIndices = false;\n        }\n\n        try {\n          for (k=0; k < len; k += 1) {\n            this.update(doc[k]);\n          }\n        }\n        finally {\n          if (adaptiveBatchOverride) {\n            this.ensureAllIndexes();\n            this.adaptiveBinaryIndices = true;\n          }\n        }\n\n        return;\n      }\n\n      // verify object is a properly formed document\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Trying to update unsynced document. Please save the document first by using insert() or addMany()');\n      }\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          oldInternal,   // ref to existing obj\n          newInternal, // ref to new internal obj\n          position,\n          self = this;\n\n        if (!arr) {\n          throw new Error('Trying to update a document not in collection.');\n        }\n\n        oldInternal = arr[0]; // -internal- obj ref\n        position = arr[1]; // position in data array\n\n        // if configured to clone, do so now... otherwise just use same obj reference\n        newInternal = this.cloneObjects || !this.disableDeltaChangesApi ? clone(doc, this.cloneMethod) : doc;\n\n        this.emit('pre-update', doc);\n\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          self.constraints.unique[key].update(oldInternal, newInternal);\n        });\n\n        // operate the update\n        this.data[position] = newInternal;\n\n        if (newInternal !== doc) {\n          this.addAutoUpdateObserver(doc);\n        }\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].evaluateDocument(position, false);\n        }\n\n        var key;\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexUpdate(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.idIndex[position] = newInternal.$loki;\n        //this.flagBinaryIndexesDirty();\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        // update meta and store changes if ChangesAPI is enabled\n        if (this.disableChangesApi) {\n          this.updateMeta(newInternal, null);\n        }\n        else {\n          this.updateMetaWithChange(newInternal, oldInternal);\n        }\n\n        var returnObj;\n\n        // if cloning is enabled, emit 'update' event and return with clone of new object\n        if (this.cloneObjects) {\n          returnObj = clone(newInternal, this.cloneMethod);\n        }\n        else {\n          returnObj = newInternal;\n        }\n\n        this.emit('update', returnObj, oldInternal);\n        return returnObj;\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Add object to collection\n     */\n    Collection.prototype.add = function (obj) {\n      // if parameter isn't object exit with throw\n      if ('object' !== typeof obj) {\n        throw new TypeError('Object being added needs to be an object');\n      }\n      // if object you are adding already has id column it is either already in the collection\n      // or the object is carrying its own 'id' property.  If it also has a meta property,\n      // then this is already in collection so throw error, otherwise rename to originalId and continue adding.\n      if (typeof (obj.$loki) !== 'undefined') {\n        throw new Error('Document is already in collection, please use update()');\n      }\n\n      /*\n       * try adding object to collection\n       */\n      try {\n        this.startTransaction();\n        this.maxId++;\n\n        if (isNaN(this.maxId)) {\n          this.maxId = (this.data[this.data.length - 1].$loki + 1);\n        }\n\n        obj.$loki = this.maxId;\n\n        if (!this.disableMeta) {\n          obj.meta.version = 0;\n        }\n\n        var key, constrUnique = this.constraints.unique;\n        for (key in constrUnique) {\n          if (hasOwnProperty.call(constrUnique, key)) {\n            constrUnique[key].set(obj);\n          }\n        }\n\n        // add new obj id to idIndex\n        this.idIndex.push(obj.$loki);\n\n        // add the object\n        this.data.push(obj);\n\n        var addedPos = this.data.length - 1;\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        var dvlen = this.DynamicViews.length;\n        for (var i = 0; i < dvlen; i++) {\n          this.DynamicViews[i].evaluateDocument(addedPos, true);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexInsert(addedPos, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        return (this.cloneObjects) ? (clone(obj, this.cloneMethod)) : (obj);\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Applies a filter function and passes all results to an update function.\n     *\n     * @param {function} filterFunction - filter function whose results will execute update\n     * @param {function} updateFunction - update function to run against filtered documents\n     * @memberof Collection\n     */\n    Collection.prototype.updateWhere = function(filterFunction, updateFunction) {\n      var results = this.where(filterFunction),\n        i = 0,\n        obj;\n      try {\n        for (i; i < results.length; i++) {\n          obj = updateFunction(results[i]);\n          this.update(obj);\n        }\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n      }\n    };\n\n    /**\n     * Remove all documents matching supplied filter function.\n     * For 'mongo-like' querying you should migrate to [findAndRemove()]{@link Collection#findAndRemove}.\n     * @param {function|object} query - query object to filter on\n     * @memberof Collection\n     */\n    Collection.prototype.removeWhere = function (query) {\n      var list;\n      if (typeof query === 'function') {\n        list = this.data.filter(query);\n        this.remove(list);\n      } else {\n        this.chain().find(query).remove();\n      }\n    };\n\n    Collection.prototype.removeDataOnly = function () {\n      this.remove(this.data.slice());\n    };\n\n    /**\n     * Internal method to remove a batch of documents from the collection.\n     * @param {number[]} positions - data/idIndex positions to remove\n     */\n    Collection.prototype.removeBatchByPositions = function(positions) {\n      var len = positions.length;\n      var xo = {};\n      var dlen, didx, idx;\n      var bic=Object.keys(this.binaryIndices).length;\n      var uic=Object.keys(this.constraints.unique).length;\n      var adaptiveOverride = this.adaptiveBinaryIndices && Object.keys(this.binaryIndices).length > 0;\n      var doc, self=this;\n\n      try {\n        this.startTransaction();\n\n        // create hashobject for positional removal inclusion tests...\n        // all keys defined in this hashobject represent $loki ids of the documents to remove.\n        for(idx=0; idx < len; idx++) {\n          xo[this.idIndex[positions[idx]]] = true;\n        }\n\n        // if we will need to notify dynamic views and/or binary indices to update themselves...\n        dlen = this.DynamicViews.length;\n        if ((dlen > 0) || (bic > 0) || (uic > 0)) {\n          if (dlen > 0) {\n            // notify dynamic views to remove relevant documents at data positions\n            for (didx = 0; didx < dlen; didx++) {\n              // notify dv of remove (passing batch/array of positions)\n              this.DynamicViews[didx].removeDocument(positions);\n            }\n          }\n\n          // notify binary indices to update\n          if (this.adaptiveBinaryIndices && !adaptiveOverride) {\n            // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n            var key, bIndices = this.binaryIndices;\n\n            for (key in bIndices) {\n              this.adaptiveBinaryIndexRemove(positions, key);\n            }\n          }\n          else {\n            this.flagBinaryIndexesDirty();\n          }\n\n          if (uic) {\n            Object.keys(this.constraints.unique).forEach(function (key) {\n              for(idx=0; idx < len; idx++) {\n                doc = self.data[positions[idx]];\n                if (doc[key] !== null && doc[key] !== undefined) {\n                  self.constraints.unique[key].remove(doc[key]);\n                }\n              }\n            });\n          }\n        }\n\n        // emit 'delete' events only of listeners are attached.\n        // since data not removed yet, in future we can emit single delete event with array...\n        // for now that might be breaking change to put in potential 1.6 or LokiDB (lokijs2) version\n        if (!this.disableChangesApi || this.events.delete.length > 1) {\n          for(idx=0; idx < len; idx++) {\n            this.emit('delete', this.data[positions[idx]]);\n          }\n        }\n\n        // remove from data[] :\n        // filter collection data for items not in inclusion hashobject\n        this.data = this.data.filter(function(obj) {\n          return !xo[obj.$loki];\n        });\n\n        // remove from idIndex[] :\n        // filter idIndex for items not in inclusion hashobject\n        this.idIndex = this.idIndex.filter(function(id) {\n            return !xo[id];\n        });\n\n        if (this.adaptiveBinaryIndices && adaptiveOverride) {\n          this.adaptiveBinaryIndices = false;\n          this.ensureAllIndexes(true);\n          this.adaptiveBinaryIndices = true;\n        }\n\n        this.commit();\n\n        // flag collection as dirty for autosave\n        this.dirty = true;\n      } \n      catch (err) {\n        this.rollback();\n        if (adaptiveOverride) {\n          this.adaptiveBinaryIndices = true;\n        }\n        this.console.error(err.message);\n        this.emit('error', err);\n        return null;\n      }      \n    };\n\n    /**\n     *  Internal method called by remove()\n     * @param {object[]|number[]} batch - array of documents or $loki ids to remove\n     */\n    Collection.prototype.removeBatch = function(batch) {\n      var len = batch.length, \n        dlen=this.data.length, \n        idx;\n      var xlt = {};\n      var posx = [];\n      \n      // create lookup hashobject to translate $loki id to position\n      for (idx=0; idx < dlen; idx++) {\n        xlt[this.data[idx].$loki] = idx;\n      }\n\n      // iterate the batch\n      for (idx=0; idx < len; idx++) {\n        if (typeof(batch[idx]) === 'object') {\n          posx.push(xlt[batch[idx].$loki]);\n        }\n        else {\n          posx.push(xlt[batch[idx]]);\n        }\n      }\n\n      this.removeBatchByPositions(posx);\n    };\n\n    /**\n     * Remove a document from the collection\n     * @param {object} doc - document to remove from collection\n     * @memberof Collection\n     */\n    Collection.prototype.remove = function (doc) {\n      if (typeof doc === 'number') {\n        doc = this.get(doc);\n      }\n\n      if ('object' !== typeof doc) {\n        throw new Error('Parameter is not an object');\n      }\n      if (Array.isArray(doc)) {\n        this.removeBatch(doc);\n        return;\n      }\n\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Object is not a document stored in the collection');\n      }\n\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          // obj = arr[0],\n          position = arr[1];\n        var self = this;\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          if (doc[key] !== null && typeof doc[key] !== 'undefined') {\n            self.constraints.unique[key].remove(doc[key]);\n          }\n        });\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to remove\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].removeDocument(position);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var key, bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexRemove(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.data.splice(position, 1);\n        this.removeAutoUpdateObserver(doc);\n\n        // remove id from idIndex\n        this.idIndex.splice(position, 1);\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n        this.emit('delete', arr[0]);\n        delete doc.$loki;\n        delete doc.meta;\n        return doc;\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        return null;\n      }\n    };\n\n    /*---------------------+\n    | Finding methods     |\n    +----------------------*/\n\n    /**\n     * Get by Id - faster than other methods because of the searching algorithm\n     * @param {int} id - $loki id of document you want to retrieve\n     * @param {boolean} returnPosition - if 'true' we will return [object, position]\n     * @returns {(object|array|null)} Object reference if document was found, null if not,\n     *     or an array if 'returnPosition' was passed.\n     * @memberof Collection\n     */\n    Collection.prototype.get = function (id, returnPosition) {\n      var retpos = returnPosition || false,\n        data = this.idIndex,\n        max = data.length - 1,\n        min = 0,\n        mid = (min + max) >> 1;\n\n      id = typeof id === 'number' ? id : parseInt(id, 10);\n\n      if (isNaN(id)) {\n        throw new TypeError('Passed id is not an integer');\n      }\n\n      while (data[min] < data[max]) {\n        mid = (min + max) >> 1;\n\n        if (data[mid] < id) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      if (max === min && data[min] === id) {\n        if (retpos) {\n          return [this.data[min], min];\n        }\n        return this.data[min];\n      }\n      return null;\n\n    };\n\n    /**\n     * Perform binary range lookup for the data[dataPosition][binaryIndexName] property value\n     *    Since multiple documents may contain the same value (which the index is sorted on),\n     *    we hone in on range and then linear scan range to find exact index array position.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.getBinaryIndexPosition = function(dataPosition, binaryIndexName) {\n      var val = this.data[dataPosition][binaryIndexName];\n      var index = this.binaryIndices[binaryIndexName].values;\n\n      // i think calculateRange can probably be moved to collection\n      // as it doesn't seem to need resultset.  need to verify\n      var range = this.calculateRange(\"$eq\", binaryIndexName, val);\n\n      if (range[0] === 0 && range[1] === -1) {\n        // uhoh didn't find range\n        return null;\n      }\n\n      var min = range[0];\n      var max = range[1];\n\n      // narrow down the sub-segment of index values\n      // where the indexed property value exactly matches our\n      // value and then linear scan to find exact -index- position\n      for(var idx = min; idx <= max; idx++) {\n        if (index[idx] === dataPosition) return idx;\n      }\n\n      // uhoh\n      return null;\n    };\n\n    /**\n     * Adaptively insert a selected item to the index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexInsert = function(dataPosition, binaryIndexName) {\n      var index = this.binaryIndices[binaryIndexName].values;\n      var val = this.data[dataPosition][binaryIndexName];\n\n      // If you are inserting a javascript Date value into a binary index, convert to epoch time\n      if (this.serializableIndices === true && val instanceof Date) {\n        this.data[dataPosition][binaryIndexName] = val.getTime();\n        val = this.data[dataPosition][binaryIndexName];\n      }\n\n      var idxPos = (index.length === 0)?0:this.calculateRangeStart(binaryIndexName, val, true);\n\n      // insert new data index into our binary index at the proper sorted location for relevant property calculated by idxPos.\n      // doing this after adjusting dataPositions so no clash with previous item at that position.\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 0, dataPosition);\n    };\n\n    /**\n     * Adaptively update a selected item within an index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexUpdate = function(dataPosition, binaryIndexName) {\n      // linear scan needed to find old position within index unless we optimize for clone scenarios later\n      // within (my) node 5.6.0, the following for() loop with strict compare is -much- faster than indexOf()\n      var idxPos,\n        index = this.binaryIndices[binaryIndexName].values,\n        len=index.length;\n\n      for(idxPos=0; idxPos < len; idxPos++) {\n        if (index[idxPos] === dataPosition) break;\n      }\n\n      //var idxPos = this.binaryIndices[binaryIndexName].values.indexOf(dataPosition);\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 1);\n\n      //this.adaptiveBinaryIndexRemove(dataPosition, binaryIndexName, true);\n      this.adaptiveBinaryIndexInsert(dataPosition, binaryIndexName);\n    };\n\n    /**\n     * Adaptively remove a selected item from the index.\n     * @param {number|number[]} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexRemove = function(dataPosition, binaryIndexName, removedFromIndexOnly) {\n      var bi = this.binaryIndices[binaryIndexName];\n      var len, idx, rmidx, rmlen, rxo = {};\n      var curr, shift, idxPos;\n\n      if (Array.isArray(dataPosition)) {\n        // when called from chained remove, and only one document in array,\n        // it will be faster to use old algorithm\n        rmlen = dataPosition.length;\n        if (rmlen === 1) {\n          dataPosition = dataPosition[0];\n        }\n        // we were passed an array (batch) of documents so use this 'batch optimized' algorithm\n        else {\n          for(rmidx=0;rmidx<rmlen; rmidx++) {\n            rxo[dataPosition[rmidx]] = true;\n          }\n    \n          // remove document from index (with filter function)\n          bi.values = bi.values.filter(function(di) { return !rxo[di]; });\n    \n          // if we passed this optional flag parameter, we are calling from adaptiveBinaryIndexUpdate,\n          // in which case data positions stay the same.\n          if (removedFromIndexOnly === true) {\n            return;\n          }\n    \n          var sortedPositions = dataPosition.slice();\n          sortedPositions.sort(function (a, b) { return a-b; });\n    \n          // to remove holes, we need to 'shift down' the index's data array positions\n          // we need to adjust array positions -1 for each index data positions greater than removed positions\n          len = bi.values.length;\n          for (idx=0; idx<len; idx++) {\n            curr=bi.values[idx];\n            shift=0;\n            for(rmidx=0; rmidx<rmlen && curr > sortedPositions[rmidx]; rmidx++) {\n                shift++;\n            }\n            bi.values[idx]-=shift;\n          }\n\n          // batch processed, bail out\n          return;\n        }\n\n        // not a batch so continue...\n      }\n\n      idxPos = this.getBinaryIndexPosition(dataPosition, binaryIndexName);\n\n      if (idxPos === null) {\n        // throw new Error('unable to determine binary index position');\n        return null;\n      }\n\n      // remove document from index (with splice)\n      bi.values.splice(idxPos, 1);\n\n      // if we passed this optional flag parameter, we are calling from adaptiveBinaryIndexUpdate,\n      // in which case data positions stay the same.\n      if (removedFromIndexOnly === true) {\n        return;\n      }\n\n      // since index stores data array positions, if we remove a document\n      // we need to adjust array positions -1 for all document positions greater than removed position\n      len = bi.values.length;\n      for (idx = 0; idx < len; idx++) {\n        if (bi.values[idx] > dataPosition) {\n          bi.values[idx]--;\n        }\n      }\n    };\n\n    /**\n     * Internal method used for index maintenance and indexed searching.\n     * Calculates the beginning of an index range for a given value.\n     * For index maintainance (adaptive:true), we will return a valid index position to insert to.\n     * For querying (adaptive:false/undefined), we will :\n     *    return lower bound/index of range of that value (if found)\n     *    return next lower index position if not found (hole)\n     * If index is empty it is assumed to be handled at higher level, so\n     * this method assumes there is at least 1 document in index.\n     *\n     * @param {string} prop - name of property which has binary index\n     * @param {any} val - value to find within index\n     * @param {bool?} adaptive - if true, we will return insert position\n     */\n    Collection.prototype.calculateRangeStart = function (prop, val, adaptive) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      if (index.length === 0) {\n        return -1;\n      }\n\n      var minVal = rcd[index[min]][prop];\n      var maxVal = rcd[index[max]][prop];\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (Comparators.lt(rcd[index[mid]][prop], val, false)) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      var lbound = min;\n\n      // found it... return it\n      if (Comparators.aeq(val, rcd[index[lbound]][prop])) {\n        return lbound;\n      }\n\n      // if not in index and our value is less than the found one\n      if (Comparators.lt(val, rcd[index[lbound]][prop], false)) {\n        return adaptive?lbound:lbound-1;\n      }\n\n      // not in index and our value is greater than the found one\n      return adaptive?lbound+1:lbound;\n    };\n\n    /**\n     * Internal method used for indexed $between.  Given a prop (index name), and a value\n     * (which may or may not yet exist) this will find the final position of that upper range value.\n     */\n    Collection.prototype.calculateRangeEnd = function (prop, val) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      if (index.length === 0) {\n        return -1;\n      }\n\n      var minVal = rcd[index[min]][prop];\n      var maxVal = rcd[index[max]][prop];\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (Comparators.lt(val, rcd[index[mid]][prop], false)) {\n          max = mid;\n        } else {\n          min = mid + 1;\n        }\n      }\n\n      var ubound = max;\n\n      // only eq if last element in array is our val\n      if (Comparators.aeq(val, rcd[index[ubound]][prop])) {\n        return ubound;\n      }\n\n       // if not in index and our value is less than the found one\n      if (Comparators.gt(val, rcd[index[ubound]][prop], false)) {\n        return ubound+1;\n      }\n\n      // either hole or first nonmatch\n      if (Comparators.aeq(val, rcd[index[ubound-1]][prop])) {\n        return ubound-1;\n      }\n\n      // hole, so ubound if nearest gt than the val we were looking for\n      return ubound;\n    };\n\n    /**\n     * calculateRange() - Binary Search utility method to find range/segment of values matching criteria.\n     *    this is used for collection.find() and first find filter of resultset/dynview\n     *    slightly different than get() binary search in that get() hones in on 1 value,\n     *    but we have to hone in on many (range)\n     * @param {string} op - operation, such as $eq\n     * @param {string} prop - name of property to calculate range for\n     * @param {object} val - value to use for range calculation.\n     * @returns {array} [start, end] index array positions\n     */\n    Collection.prototype.calculateRange = function (op, prop, val) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n      var lbound, lval;\n      var ubound, uval;\n\n      // when no documents are in collection, return empty range condition\n      if (rcd.length === 0) {\n        return [0, -1];\n      }\n\n      var minVal = rcd[index[min]][prop];\n      var maxVal = rcd[index[max]][prop];\n\n      // if value falls outside of our range return [0, -1] to designate no results\n      switch (op) {\n      case '$eq':\n      case '$aeq':\n        if (Comparators.lt(val, minVal, false) || Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$dteq':\n        if (Comparators.lt(val, minVal, false) || Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$gt':\n        // none are within range\n        if (Comparators.gt(val, maxVal, true)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.gt(minVal, val, false)) {\n          return [min, max];\n        }\n        break;\n      case '$gte':\n        // none are within range\n        if (Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.gt(minVal, val, true)) {\n            return [min, max];\n        }\n        break;\n      case '$lt':\n        // none are within range\n        if (Comparators.lt(val, minVal, true)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.lt(maxVal, val, false)) {\n          return [min, max];\n        }\n        break;\n      case '$lte':\n        // none are within range\n        if (Comparators.lt(val, minVal, false)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.lt(maxVal, val, true)) {\n          return [min, max];\n        }\n        break;\n      case '$between':\n        // none are within range (low range is greater)\n        if (Comparators.gt(val[0], maxVal, false)) {\n          return [0, -1];\n        }\n        // none are within range (high range lower)\n        if (Comparators.lt(val[1], minVal, false)) {\n          return [0, -1];\n        }\n\n        lbound = this.calculateRangeStart(prop, val[0]);\n        ubound = this.calculateRangeEnd(prop, val[1]);\n\n        if (lbound < 0) lbound++;\n        if (ubound > max) ubound--;\n\n        if (!Comparators.gt(rcd[index[lbound]][prop], val[0], true)) lbound++;\n        if (!Comparators.lt(rcd[index[ubound]][prop], val[1], true)) ubound--;\n\n        if (ubound < lbound) return [0, -1];\n\n        return ([lbound, ubound]);\n      case '$in':\n        var idxset = [],\n          segResult = [];\n        // query each value '$eq' operator and merge the seqment results.\n        for (var j = 0, len = val.length; j < len; j++) {\n            var seg = this.calculateRange('$eq', prop, val[j]);\n\n            for (var i = seg[0]; i <= seg[1]; i++) {\n                if (idxset[i] === undefined) {\n                    idxset[i] = true;\n                    segResult.push(i);\n                }\n            }\n        }\n        return segResult;\n      }\n\n      // determine lbound where needed\n      switch (op) {\n        case '$eq':\n        case '$aeq':\n        case '$dteq':\n        case '$gte':\n        case '$lt':\n          lbound = this.calculateRangeStart(prop, val);\n          lval = rcd[index[lbound]][prop];\n          break;\n        default: break;\n      }\n\n      // determine ubound where needed\n      switch (op) {\n        case '$eq':\n        case '$aeq':\n        case '$dteq':\n        case '$lte':\n        case '$gt':\n          ubound = this.calculateRangeEnd(prop, val);\n          uval = rcd[index[ubound]][prop];\n          break;\n        default: break;\n      }\n\n\n      switch (op) {\n      case '$eq':\n      case '$aeq':\n      case '$dteq':\n        // if hole (not found)\n        if (!Comparators.aeq(lval, val)) {\n          return [0, -1];\n        }\n\n        return [lbound, ubound];\n\n      case '$gt':\n        // if hole (not found) ub position is already greater\n        if (!Comparators.aeq(rcd[index[ubound]][prop], val)) {\n          return [ubound, max];\n        }\n        // otherwise (found) so ubound is still equal, get next\n        return [ubound+1, max];\n\n      case '$gte':\n        // if hole (not found) lb position marks left outside of range\n        if (!Comparators.aeq(rcd[index[lbound]][prop], val)) {\n          return [lbound+1, max];\n        }\n        // otherwise (found) so lb is first position where its equal\n        return [lbound, max];\n\n      case '$lt':\n        // if hole (not found) position already is less than\n        if (!Comparators.aeq(rcd[index[lbound]][prop], val)) {\n          return [min, lbound];\n        }\n        // otherwise (found) so lb marks left inside of eq range, get previous\n        return [min, lbound-1];\n\n      case '$lte':\n        // if hole (not found) ub position marks right outside so get previous\n        if (!Comparators.aeq(rcd[index[ubound]][prop], val)) {\n          return [min, ubound-1];\n        }\n        // otherwise (found) so ub is last position where its still equal\n        return [min, ubound];\n\n      default:\n        return [0, rcd.length - 1];\n      }\n    };\n\n    /**\n     * Retrieve doc by Unique index\n     * @param {string} field - name of uniquely indexed property to use when doing lookup\n     * @param {value} value - unique value to search for\n     * @returns {object} document matching the value passed\n     * @memberof Collection\n     */\n    Collection.prototype.by = function (field, value) {\n      var self;\n      if (value === undefined) {\n        self = this;\n        return function (value) {\n          return self.by(field, value);\n        };\n      }\n\n      var result = this.constraints.unique[field].get(value);\n      if (!this.cloneObjects) {\n        return result;\n      } else {\n        return clone(result, this.cloneMethod);\n      }\n    };\n\n    /**\n     * Find one object by index property, by property equal to value\n     * @param {object} query - query object used to perform search with\n     * @returns {(object|null)} First matching document, or null if none\n     * @memberof Collection\n     */\n    Collection.prototype.findOne = function (query) {\n      query = query || {};\n\n      // Instantiate Resultset and exec find op passing firstOnly = true param\n      var result = this.chain().find(query,true).data();\n\n      if (Array.isArray(result) && result.length === 0) {\n        return null;\n      } else {\n        if (!this.cloneObjects) {\n          return result[0];\n        } else {\n          return clone(result[0], this.cloneMethod);\n        }\n      }\n    };\n\n    /**\n     * Chain method, used for beginning a series of chained find() and/or view() operations\n     * on a collection.\n     *\n     * @param {string|array=} transform - named transform or array of transform steps\n     * @param {object=} parameters - Object containing properties representing parameters to substitute\n     * @returns {Resultset} (this) resultset, or data array if any map or join functions where called\n     * @memberof Collection\n     */\n    Collection.prototype.chain = function (transform, parameters) {\n      var rs = new Resultset(this);\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * Find method, api is similar to mongodb.\n     * for more complex queries use [chain()]{@link Collection#chain} or [where()]{@link Collection#where}.\n     * @example {@tutorial Query Examples}\n     * @param {object} query - 'mongo-like' query object\n     * @returns {array} Array of matching documents\n     * @memberof Collection\n     */\n    Collection.prototype.find = function (query) {\n      return this.chain().find(query).data();\n    };\n\n    /**\n     * Find object by unindexed field by property equal to value,\n     * simply iterates and returns the first element matching the query\n     */\n    Collection.prototype.findOneUnindexed = function (prop, value) {\n      var i = this.data.length,\n        doc;\n      while (i--) {\n        if (this.data[i][prop] === value) {\n          doc = this.data[i];\n          return doc;\n        }\n      }\n      return null;\n    };\n\n    /**\n     * Transaction methods\n     */\n\n    /** start the transation */\n    Collection.prototype.startTransaction = function () {\n      if (this.transactional) {\n        this.cachedData = clone(this.data, this.cloneMethod);\n        this.cachedIndex = this.idIndex;\n        this.cachedBinaryIndex = this.binaryIndices;\n\n        // propagate startTransaction to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].startTransaction();\n        }\n      }\n    };\n\n    /** commit the transation */\n    Collection.prototype.commit = function () {\n      if (this.transactional) {\n        this.cachedData = null;\n        this.cachedIndex = null;\n        this.cachedBinaryIndex = null;\n\n        // propagate commit to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].commit();\n        }\n      }\n    };\n\n    /** roll back the transation */\n    Collection.prototype.rollback = function () {\n      if (this.transactional) {\n        if (this.cachedData !== null && this.cachedIndex !== null) {\n          this.data = this.cachedData;\n          this.idIndex = this.cachedIndex;\n          this.binaryIndices = this.cachedBinaryIndex;\n        }\n\n        // propagate rollback to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].rollback();\n        }\n      }\n    };\n\n    // async executor. This is only to enable callbacks at the end of the execution.\n    Collection.prototype.async = function (fun, callback) {\n      setTimeout(function () {\n        if (typeof fun === 'function') {\n          fun();\n          callback();\n        } else {\n          throw new TypeError('Argument passed for async execution is not a function');\n        }\n      }, 0);\n    };\n\n    /**\n     * Query the collection by supplying a javascript filter function.\n     * @example\n     * var results = coll.where(function(obj) {\n     *   return obj.legs === 8;\n     * });\n     *\n     * @param {function} fun - filter function to run against all collection docs\n     * @returns {array} all documents which pass your filter function\n     * @memberof Collection\n     */\n    Collection.prototype.where = function (fun) {\n      return this.chain().where(fun).data();\n    };\n\n    /**\n     * Map Reduce operation\n     *\n     * @param {function} mapFunction - function to use as map function\n     * @param {function} reduceFunction - function to use as reduce function\n     * @returns {data} The result of your mapReduce operation\n     * @memberof Collection\n     */\n    Collection.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data.map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * Join two collections on specified properties\n     *\n     * @param {array|Resultset|Collection} joinData - array of documents to 'join' to this collection\n     * @param {string} leftJoinProp - property name in collection\n     * @param {string} rightJoinProp - property name in joinData\n     * @param {function=} mapFun - (Optional) map function to use\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @returns {Resultset} Result of the mapping operation\n     * @memberof Collection\n     */\n    Collection.prototype.eqJoin = function (joinData, leftJoinProp, rightJoinProp, mapFun, dataOptions) {\n      // logic in Resultset class\n      return new Resultset(this).eqJoin(joinData, leftJoinProp, rightJoinProp, mapFun, dataOptions);\n    };\n\n    /* ------ STAGING API -------- */\n    /**\n     * stages: a map of uniquely identified 'stages', which hold copies of objects to be\n     * manipulated without affecting the data in the original collection\n     */\n    Collection.prototype.stages = {};\n\n    /**\n     * (Staging API) create a stage and/or retrieve it\n     * @memberof Collection\n     */\n    Collection.prototype.getStage = function (name) {\n      if (!this.stages[name]) {\n        this.stages[name] = {};\n      }\n      return this.stages[name];\n    };\n    /**\n     * a collection of objects recording the changes applied through a commmitStage\n     */\n    Collection.prototype.commitLog = [];\n\n    /**\n     * (Staging API) create a copy of an object and insert it into a stage\n     * @memberof Collection\n     */\n    Collection.prototype.stage = function (stageName, obj) {\n      var copy = JSON.parse(JSON.stringify(obj));\n      this.getStage(stageName)[obj.$loki] = copy;\n      return copy;\n    };\n\n    /**\n     * (Staging API) re-attach all objects to the original collection, so indexes and views can be rebuilt\n     * then create a message to be inserted in the commitlog\n     * @param {string} stageName - name of stage\n     * @param {string} message\n     * @memberof Collection\n     */\n    Collection.prototype.commitStage = function (stageName, message) {\n      var stage = this.getStage(stageName),\n        prop,\n        timestamp = new Date().getTime();\n\n      for (prop in stage) {\n\n        this.update(stage[prop]);\n        this.commitLog.push({\n          timestamp: timestamp,\n          message: message,\n          data: JSON.parse(JSON.stringify(stage[prop]))\n        });\n      }\n      this.stages[stageName] = {};\n    };\n\n    Collection.prototype.no_op = function () {\n      return;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extract = function (field) {\n      var i = 0,\n        len = this.data.length,\n        isDotNotation = isDeepProperty(field),\n        result = [];\n      for (i; i < len; i += 1) {\n        result.push(deepProperty(this.data[i], field, isDotNotation));\n      }\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.max = function (field) {\n      return Math.max.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.min = function (field) {\n      return Math.min.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.maxRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        max;\n\n      for (i; i < len; i += 1) {\n        if (max !== undefined) {\n          if (max < deepProperty(this.data[i], field, deep)) {\n            max = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          max = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = max;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.minRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        min;\n\n      for (i; i < len; i += 1) {\n        if (min !== undefined) {\n          if (min > deepProperty(this.data[i], field, deep)) {\n            min = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          min = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = min;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extractNumerical = function (field) {\n      return this.extract(field).map(parseBase10).filter(Number).filter(function (n) {\n        return !(isNaN(n));\n      });\n    };\n\n    /**\n     * Calculates the average numerical value of a property\n     *\n     * @param {string} field - name of property in docs to average\n     * @returns {number} average of property in all docs in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.avg = function (field) {\n      return average(this.extractNumerical(field));\n    };\n\n    /**\n     * Calculate standard deviation of a field\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.stdDev = function (field) {\n      return standardDeviation(this.extractNumerical(field));\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.mode = function (field) {\n      var dict = {},\n        data = this.extract(field);\n      data.forEach(function (obj) {\n        if (dict[obj]) {\n          dict[obj] += 1;\n        } else {\n          dict[obj] = 1;\n        }\n      });\n      var max,\n        prop, mode;\n      for (prop in dict) {\n        if (max) {\n          if (max < dict[prop]) {\n            mode = prop;\n          }\n        } else {\n          mode = prop;\n          max = dict[prop];\n        }\n      }\n      return mode;\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field - property name\n     */\n    Collection.prototype.median = function (field) {\n      var values = this.extractNumerical(field);\n      values.sort(sub);\n\n      var half = Math.floor(values.length / 2);\n\n      if (values.length % 2) {\n        return values[half];\n      } else {\n        return (values[half - 1] + values[half]) / 2.0;\n      }\n    };\n\n    /**\n     * General utils, including statistical functions\n     */\n    function isDeepProperty(field) {\n      return field.indexOf('.') !== -1;\n    }\n\n    function parseBase10(num) {\n      return parseFloat(num, 10);\n    }\n\n    function isNotUndefined(obj) {\n      return obj !== undefined;\n    }\n\n    function add(a, b) {\n      return a + b;\n    }\n\n    function sub(a, b) {\n      return a - b;\n    }\n\n    function median(values) {\n      values.sort(sub);\n      var half = Math.floor(values.length / 2);\n      return (values.length % 2) ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n    }\n\n    function average(array) {\n      return (array.reduce(add, 0)) / array.length;\n    }\n\n    function standardDeviation(values) {\n      var avg = average(values);\n      var squareDiffs = values.map(function (value) {\n        var diff = value - avg;\n        var sqrDiff = diff * diff;\n        return sqrDiff;\n      });\n\n      var avgSquareDiff = average(squareDiffs);\n\n      var stdDev = Math.sqrt(avgSquareDiff);\n      return stdDev;\n    }\n\n    function deepProperty(obj, property, isDeep) {\n      if (isDeep === false) {\n        // pass without processing\n        return obj[property];\n      }\n      var pieces = property.split('.'),\n        root = obj;\n      while (pieces.length > 0) {\n        root = root[pieces.shift()];\n      }\n      return root;\n    }\n\n    function binarySearch(array, item, fun) {\n      var lo = 0,\n        hi = array.length,\n        compared,\n        mid;\n      while (lo < hi) {\n        mid = (lo + hi) >> 1;\n        compared = fun.apply(null, [item, array[mid]]);\n        if (compared === 0) {\n          return {\n            found: true,\n            index: mid\n          };\n        } else if (compared < 0) {\n          hi = mid;\n        } else {\n          lo = mid + 1;\n        }\n      }\n      return {\n        found: false,\n        index: hi\n      };\n    }\n\n    function BSonSort(fun) {\n      return function (array, item) {\n        return binarySearch(array, item, fun);\n      };\n    }\n\n    function KeyValueStore() {}\n\n    KeyValueStore.prototype = {\n      keys: [],\n      values: [],\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      set: function (key, value) {\n        var pos = this.bs(this.keys, key);\n        if (pos.found) {\n          this.values[pos.index] = value;\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, value);\n        }\n      },\n      get: function (key) {\n        return this.values[binarySearch(this.keys, key, this.sort).index];\n      }\n    };\n\n    function UniqueIndex(uniqueField) {\n      this.field = uniqueField;\n      this.keyMap = {};\n      this.lokiMap = {};\n    }\n    UniqueIndex.prototype.keyMap = {};\n    UniqueIndex.prototype.lokiMap = {};\n    UniqueIndex.prototype.set = function (obj) {\n      var fieldValue = obj[this.field];\n      if (fieldValue !== null && typeof (fieldValue) !== 'undefined') {\n        if (this.keyMap[fieldValue]) {\n          throw new Error('Duplicate key for property ' + this.field + ': ' + fieldValue);\n        } else {\n          this.keyMap[fieldValue] = obj;\n          this.lokiMap[obj.$loki] = fieldValue;\n        }\n      }\n    };\n    UniqueIndex.prototype.get = function (key) {\n      return this.keyMap[key];\n    };\n\n    UniqueIndex.prototype.byId = function (id) {\n      return this.keyMap[this.lokiMap[id]];\n    };\n    /**\n     * Updates a document's unique index given an updated object.\n     * @param  {Object} obj Original document object\n     * @param  {Object} doc New document object (likely the same as obj)\n     */\n    UniqueIndex.prototype.update = function (obj, doc) {\n      if (this.lokiMap[obj.$loki] !== doc[this.field]) {\n        var old = this.lokiMap[obj.$loki];\n        this.set(doc);\n        // make the old key fail bool test, while avoiding the use of delete (mem-leak prone)\n        this.keyMap[old] = undefined;\n      } else {\n        this.keyMap[obj[this.field]] = doc;\n      }\n    };\n    UniqueIndex.prototype.remove = function (key) {\n      var obj = this.keyMap[key];\n      if (obj !== null && typeof obj !== 'undefined') {\n        this.keyMap[key] = undefined;\n        this.lokiMap[obj.$loki] = undefined;\n      } else {\n        throw new Error('Key is not in unique index: ' + this.field);\n      }\n    };\n    UniqueIndex.prototype.clear = function () {\n      this.keyMap = {};\n      this.lokiMap = {};\n    };\n\n    function ExactIndex(exactField) {\n      this.index = {};\n      this.field = exactField;\n    }\n\n    // add the value you want returned to the key in the index\n    ExactIndex.prototype = {\n      set: function add(key, val) {\n        if (this.index[key]) {\n          this.index[key].push(val);\n        } else {\n          this.index[key] = [val];\n        }\n      },\n\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function remove(key, val) {\n        var idxSet = this.index[key];\n        for (var i in idxSet) {\n          if (idxSet[i] == val) {\n            idxSet.splice(i, 1);\n          }\n        }\n        if (idxSet.length < 1) {\n          this.index[key] = undefined;\n        }\n      },\n\n      // get the values related to the key, could be more than one\n      get: function get(key) {\n        return this.index[key];\n      },\n\n      // clear will zap the index\n      clear: function clear(key) {\n        this.index = {};\n      }\n    };\n\n    function SortedIndex(sortedField) {\n      this.field = sortedField;\n    }\n\n    SortedIndex.prototype = {\n      keys: [],\n      values: [],\n      // set the default sort\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      // and allow override of the default sort\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      // add the value you want returned  to the key in the index\n      set: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort);\n        if (pos.found) {\n          this.values[pos.index].push(value);\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, [value]);\n        }\n      },\n      // get all values which have a key == the given key\n      get: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        if (bsr.found) {\n          return this.values[bsr.index];\n        } else {\n          return [];\n        }\n      },\n      // get all values which have a key < the given key\n      getLt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos--;\n        return this.getAll(key, 0, pos);\n      },\n      // get all values which have a key > the given key\n      getGt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos++;\n        return this.getAll(key, pos, this.keys.length);\n      },\n\n      // get all vals from start to end\n      getAll: function (key, start, end) {\n        var results = [];\n        for (var i = start; i < end; i++) {\n          results = results.concat(this.values[i]);\n        }\n        return results;\n      },\n      // just in case someone wants to do something smart with ranges\n      getPos: function (key) {\n        return binarySearch(this.keys, key, this.sort);\n      },\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort).index;\n        var idxSet = this.values[pos];\n        for (var i in idxSet) {\n          if (idxSet[i] == value) idxSet.splice(i, 1);\n        }\n        if (idxSet.length < 1) {\n          this.keys.splice(pos, 1);\n          this.values.splice(pos, 1);\n        }\n      },\n      // clear will zap the index\n      clear: function () {\n        this.keys = [];\n        this.values = [];\n      }\n    };\n\n\n    Loki.LokiOps = LokiOps;\n    Loki.Collection = Collection;\n    Loki.KeyValueStore = KeyValueStore;\n    Loki.LokiMemoryAdapter = LokiMemoryAdapter;\n    Loki.LokiPartitioningAdapter = LokiPartitioningAdapter;\n    Loki.LokiLocalStorageAdapter = LokiLocalStorageAdapter;\n    Loki.LokiFsAdapter = LokiFsAdapter;\n    Loki.persistenceAdapters = {\n      fs: LokiFsAdapter,\n      localStorage: LokiLocalStorageAdapter\n    };\n    Loki.aeq = aeqHelper;\n    Loki.lt = ltHelper;\n    Loki.gt = gtHelper;\n    Loki.Comparators = Comparators;\n    return Loki;\n  }());\n\n}));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"axios\"),require(\"bluebird\")):\"function\"==typeof define&&define.amd?define(\"fluent-formio\",[\"axios\",\"bluebird\"],t):\"object\"==typeof exports?exports[\"fluent-formio\"]=t(require(\"axios\"),require(\"bluebird\")):e[\"fluent-formio\"]=t(e.axios,e.bluebird)}(this,function(e,t){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(t,r){t.exports=e},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(r(2));t.default=n.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},o=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),i=f(r(3)),a=f(r(4)),u=f(r(0)),s=r(5),c=f(r(6));function f(e){return e&&e.__esModule?e:{default:e}}function l(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){return function n(o,i){try{var a=t[o](i),u=a.value}catch(e){return void r(e)}if(!a.done)return Promise.resolve(u).then(function(e){n(\"next\",e)},function(e){n(\"throw\",e)});e(u)}(\"next\")})}}t.default=s.Interface.compose({methods:{getToken:function(){return localStorage.getItem(\"formioToken\")},baseUrl:function(){var e=this.connector,t=e.baseUrl,r=e.name;if(!t)throw new Error('You did not provide a baseUrl for the \"'+r+'\" connector');return t.replace(/\\/+$/,\"\")},get:function(){var e=this;return l(regeneratorRuntime.mark(function t(){var r,n,a,u;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e.ownerEmail&&e.andWhere(\"owner\",\"=\",e.ownerEmail),r=void 0,n=void 0,t.next=5,(0,i.default)(e.httpGET());case 5:if(a=t.sent,u=o(a,2),r=u[0],n=u[1],!r){t.next=12;break}throw console.log(r),new Error(\"Error while getting submissions\");case 12:return n=e.jsApplySelect(n.data),n=e.jsApplyOrderBy(n),t.abrupt(\"return\",n);case 15:case\"end\":return t.stop()}},t,e)}))()},all:function(){var e=this;return l(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt(\"return\",e.get());case 1:case\"end\":return t.stop()}},t,e)}))()},insert:function(e,t){var r=this;return l(regeneratorRuntime.mark(function n(){var a,u,s,c;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(!Array.isArray(e)){n.next=2;break}return n.abrupt(\"return\",r.ArrayInsert(e,t));case 2:return n.next=4,(0,i.default)(r.httpPOST(e));case 4:if(a=n.sent,u=o(a,2),s=u[0],c=u[1],!s){n.next=11;break}throw console.log(s),new Error(\"Cannot insert data\");case 11:return n.abrupt(\"return\",c.data);case 12:case\"end\":return n.stop()}},n,r)}))()},update:function(e){var t=this;return l(regeneratorRuntime.mark(function r(){var n,a,u,s;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:if(e._id){r.next=2;break}throw new Error(\"Formio connector error. Cannot update a Model without _id key\");case 2:if(!e._id.includes(\"_local\")){r.next=4;break}throw new Error(\"Formio connector error. Cannot update a local document\");case 4:return r.next=6,(0,i.default)(t.httpPUT(e));case 6:if(n=r.sent,a=o(n,2),u=a[0],s=a[1],!u){r.next=13;break}throw console.log(u),new Error(\"Cannot insert data\");case 13:return r.abrupt(\"return\",s.data);case 14:case\"end\":return r.stop()}},r,t)}))()},clear:function(){var e=this;return l(regeneratorRuntime.mark(function t(){var r,n,a,s,c,f=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).sure;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(f&&!0===f){t.next=2;break}throw new Error('Clear() method will delete everything!, you must set the \"sure\" parameter \"clear({sure:true})\" to continue');case 2:return r=[],t.next=5,(0,i.default)(e.select(\"_id\").pluck(\"_id\"));case 5:if(n=t.sent,a=o(n,2),s=a[0],c=a[1],!s){t.next=12;break}throw console.log(s),new Error(\"Cannot get remote Model\");case 12:return c.forEach(function(t){r.push(e.httpDelete(t))}),t.abrupt(\"return\",u.default.all(r));case 14:case\"end\":return t.stop()}},t,e)}))()},remove:function(e){var t=this;return l(regeneratorRuntime.mark(function r(){var n,a,u,s;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,(0,i.default)(t.httpDelete(e));case 2:if(n=r.sent,a=o(n,2),u=a[0],s=a[1],!u){r.next=9;break}throw console.log(u),new Error(\"FormioConnector: Could not delete \"+e);case 9:return r.abrupt(\"return\",s);case 10:case\"end\":return r.stop()}},r,t)}))()},find:function(e){var t=this;return l(regeneratorRuntime.mark(function r(){var a,u,s,c;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:if(\"string\"==typeof e){r.next=2;break}throw new Error('Formio connector find() method only accepts strings \"'+(void 0===e?\"undefined\":n(e))+'\" given \"'+e+'\"');case 2:return r.next=4,(0,i.default)(t.where(\"_id\",\"=\",e).first());case 4:if(a=r.sent,u=o(a,2),s=u[0],c=u[1],!s){r.next=11;break}throw console.log(s),new Error(\"Find() could not get remote data\");case 11:return r.abrupt(\"return\",c);case 12:case\"end\":return r.stop()}},r,t)}))()},getUrl:function(){var e=this,t=this&&this.baseUrl()?this.baseUrl():void 0,r=a.default.get(function(){return e.remoteConnection.path},void 0),n=a.default.get(function(){return e.remoteConnection.id},void 0);if(!a.default.get(function(){return e.remoteConnection.pullForm},void 0)&&r&&(r=n?r+\"/submission/\"+n:r+\"/submission\"),!t)throw new Error(\"Cannot get remote model. baseUrl not defined\");return r?t+\"/\"+r:t},getHeaders:function(){var e={},t=localStorage.getItem(\"formioToken\");return(this.remoteConnection.token||\"\"===this.remoteConnection.token)&&(t=this.remoteConnection.token),t?(e[this.getTokenType(t)]=t,e):e},getSpacer:function(e){return\"&\"===e.substr(e.length-1)?\"\":\"&\"},httpGET:function(){var e=this.getUrl(),t=this.getHeaders(),r=this.getFilters(),n=this.getLimit(),o=this.getSkip(),i=this.getSelect();if(e=e+\"\"+n,e=r?e+this.getSpacer(e)+r:e,e=o?e+this.getSpacer(e)+o:e,e=i?e+this.getSpacer(e)+i:e,!c.default.isOnline())throw new Error(\"Cannot make get request to \"+e+\".You are not online\");return u.default.get(e,{headers:t})},httpPOST:function(e){var t=this.getUrl(),r=this.getHeaders();if(!c.default.isOnline())throw new Error(\"Cannot make request post to \"+t+\".You are not online\");return u.default.post(t,e,{headers:r})},httpPUT:function(e){var t=this.getUrl()+\"/\"+e._id,r=this.getHeaders();if(!c.default.isOnline())throw new Error(\"Cannot make request post to \"+t+\".You are not online\");return u.default.put(t,e,{headers:r})},httpDelete:function(e){var t=this.getHeaders(),r=this.getUrl()+\"/\"+e;return u.default.delete(r,{headers:t})},getTokenType:function(e){return e.length>32?\"x-jwt-token\":\"x-token\"},getFilters:function(){var e=this.whereArray;if(e&&0!==e.length){var t=\"\";return e.forEach(function(e){var r=\"\",n=e[0],o=e[1],i=e[2];switch(o){case\"=\":t=t+n+\"=\"+i+\"&\";break;case\"!=\":t=t+n+\"__ne=\"+i+\"&\";break;case\">\":t=t+n+\"__gt=\"+i+\"&\";break;case\">=\":t=t+n+\"__gte=\"+i+\"&\";break;case\"<\":t=t+n+\"__lt=\"+i+\"&\";break;case\"<=\":t=t+n+\"__lte=\"+i+\"&\";break;case\"in\":r=\"\",i.forEach(function(e,t,n){r=t===n.length-1?r+e:r+e+\",\"}),t=t+n+\"__in=\"+r+\"&\";break;case\"nin\":r=\"\",i.forEach(function(e,t,n){r=t===n.length-1?r+e:r+e+\",\"}),t=t+n+\"__nin=\"+r+\"&\";break;case\"exists\":t=t+n+\"__exists=\"+!0+\"&\";break;case\"!exists\":t=t+n+\"__exists=\"+!1+\"&\";break;case\"regex\":t=t+n+\"__regex=\"+i+\"&\"}}),t.substring(0,t.length-1)}},getLimit:function(){return this.limitNumber&&0!==this.limitNumber||(this.limitNumber=50),\"?limit=\"+this.limitNumber},getSkip:function(){return this.offsetNumber||(this.offsetNumber=0),\"skip=\"+this.offsetNumber},getSelect:function(){var e=this.selectArray;if(e=e.map(function(e){return e.split(\" as \")[0]}))return\"select=\"+e.join(\",\")}}})},function(e,t,r){\"use strict\";function n(e,t){return e.then(function(e){return[null,e]}).catch(function(e){return t&&Object.assign(e,t),[e,void 0]})}r.r(t),r.d(t,\"to\",function(){return n}),t.default=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};var i=function(){var e=function(e,t){try{return e()}catch(e){return t}},t=function(t,r,n){var o=r;r.includes(\" as \")&&(o=(r=r.split(\" as \"))[0]);var i=e(function(){return Array.isArray(r)&&r[1].trim()},void 0);var a=o.replace(/\\[/g,\".\").replace(/]/g,\"\").split(\".\").filter(Boolean).map(function(e){return e.trim()}).every(function(e){return!(e&&void 0===(t=t[e]))})?t:n;return{label:i||o,value:a}},r=function e(t,r,o,i,a){t&&(i=i||\"\",t.forEach(function(t){if(t){var u=t.columns&&Array.isArray(t.columns),s=t.rows&&Array.isArray(t.rows),c=t.components&&Array.isArray(t.components),f=!1,l=t.key?i?i+\".\"+t.key:t.key:\"\";a&&(t.parent=n({},a),delete t.parent.components,delete t.parent.componentMap,delete t.parent.columns,delete t.parent.rows),(o||t.tree||!u&&!s&&!c)&&(f=r(t,l));var d=function(){return t.key&&![\"panel\",\"table\",\"well\",\"columns\",\"fieldset\",\"tabs\",\"form\"].includes(t.type)&&([\"datagrid\",\"container\",\"editgrid\"].includes(t.type)||t.tree)?l:t.key&&\"form\"===t.type?l+\".data\":i};f||(u?t.columns.forEach(function(n){return e(n.components,r,o,d(),a?t:null)}):s?t.rows.forEach(function(n){Array.isArray(n)&&n.forEach(function(n){return e(n.components,r,o,d(),a?t:null)})}):c&&e(t.components,r,o,d(),a?t:null))}}))};return Object.freeze({cloneDeep:function(e){return JSON.parse(JSON.stringify(e))},get:e,orderBy:function(){},isEmpty:function(e){if(!e)return!0;if(Array.isArray(e)||\"string\"==typeof e)return!e.length;for(var t in e)if(hasOwnProperty.call(e,t))return!1;return!0},debounce:function(e,t){var r=void 0;return function(){var n=this,o=arguments;clearTimeout(r),r=setTimeout(function(){return e.apply(n,o)},t)}},getFromPath:t,deleteNulls:function e(t){var r=t,n=r instanceof Array;for(var i in r)null===r[i]?n?r.splice(i,1):delete r[i]:\"object\"===o(r[i])&&e(r[i]);return r},eachComponent:r,findComponents:function(e,n){var o=[];return r(e,function(e,r){(function(e,r){if(\"string\"==typeof r)return e.key===r;var n=!1;return Object.keys(r).forEach(function(o){if(!(n=t(e,o).value===r[o]))return!1}),n})(e,n)&&(e.path=r,o.push(e))},!0),o},unixDate:function(){return Math.round(+new Date/1e3)}})}();t.default=i},function(e,t,r){e.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=12)}([function(e,t,r){var n=r(2),o=r(16),i=r(6),a=r(17),u=r(1),s=r(3),c=r(8),f=r(7),l=Array.prototype.concat;function d(){var e=l.apply([],arguments).filter(s);return 0===e.length?void 0:e}function p(e){if(!u(e))return e;var t=e.methods,r=e.properties,n=e.props,o=e.initializers,i=e.init,s=e.composers,l=e.deepProperties,p=e.deepProps,h=e.propertyDescriptors,m=e.staticProperties,v=e.statics,g=e.staticDeepProperties,y=e.deepStatics,w=e.configuration,b=e.conf,E=e.deepConfiguration,_=e.deepConf,x=u(n)||u(r)?f({},n,r):void 0,A=u(p)?c({},p):void 0;A=u(l)?c(A,l):A;var O=u(v)||u(m)?f({},v,m):void 0,P=u(y)?c({},y):void 0;P=u(g)?c(P,g):P;var k=e.staticPropertyDescriptors;a(e.name)&&(k=f({},k||{},{name:{value:e.name}}));var C=u(b)||u(w)?f({},b,w):void 0,j=u(_)?c({},_):void 0;j=u(E)?c(j,E):j;var F=d(i,o),S=d(s),N={};return t&&(N.methods=t),x&&(N.properties=x),F&&(N.initializers=F),S&&(N.composers=S),A&&(N.deepProperties=A),O&&(N.staticProperties=O),P&&(N.staticDeepProperties=P),h&&(N.propertyDescriptors=h),k&&(N.staticPropertyDescriptors=k),C&&(N.configuration=C),j&&(N.deepConfiguration=j),N}function h(){\"use strict\";for(var e=arguments.length,t=[],r=0;r<e;r+=1){var o=arguments[r];t.push(i(o)?o:p(o))}return n.apply(this||m,t)}var m=o.compose({staticProperties:{create:function(){return this.apply(this,arguments)},compose:h}}),v=o.compose.staticProperties;for(var g in v)h[g]=v[g].bind(m);h.compose=h.bind(),e.exports=h},function(e,t){e.exports=function(e){var t=typeof e;return Boolean(e)&&(\"object\"===t||\"function\"===t)}},function(e,t,r){var n=r(5),o=r(3),i=r(1),a=r(6),u=r(14),s=r(7),c=r(8),f=Array.prototype.slice;function l(e,t){var r=function e(t){var r=e.compose||{},n={__proto__:r.methods};if(c(n,r.deepProperties),s(n,r.properties),Object.defineProperties(n,r.propertyDescriptors||{}),!r.initializers||0===r.initializers.length)return n;void 0===t&&(t={});for(var i=r.initializers,a=i.length,u=0;u<a;u+=1){var l=i[u];if(o(l)){var d=l.call(n,t,{instance:n,stamp:e,args:f.apply(arguments)});n=void 0===d?n:d}}return n};e.staticDeepProperties&&c(r,e.staticDeepProperties),e.staticProperties&&s(r,e.staticProperties),e.staticPropertyDescriptors&&Object.defineProperties(r,e.staticPropertyDescriptors);var n=o(r.compose)?r.compose:t;return s(r.compose=function(){\"use strict\";return n.apply(this,arguments)},e),r}function d(e,t,r){if(n(t)){var i=t.length,a=e[r]||[];e[r]=a;for(var u=0;u<i;u+=1){var s=t[u];o(s)&&a.indexOf(s)<0&&a.push(s)}}}function p(e,t,r,n){i(t[r])&&(i(e[r])||(e[r]={}),n(e[r],t[r]))}function h(e,t,r){p(e,t,r,c)}function m(e,t,r){p(e,t,r,s)}function v(e,t){var r=t&&t.compose||t;m(e,r,\"methods\"),m(e,r,\"properties\"),h(e,r,\"deepProperties\"),m(e,r,\"propertyDescriptors\"),m(e,r,\"staticProperties\"),h(e,r,\"staticDeepProperties\"),m(e,r,\"staticPropertyDescriptors\"),m(e,r,\"configuration\"),h(e,r,\"deepConfiguration\"),d(e,r.initializers,\"initializers\"),d(e,r.composers,\"composers\")}e.exports=function e(){\"use strict\";var t={},r=[];u(this)&&(v(t,this),r.push(this));for(var o=0;o<arguments.length;o++){var i=arguments[o];u(i)&&(v(t,i),r.push(i))}var s=l(t,e),c=t.composers;if(n(c)&&c.length>0)for(var f=0;f<c.length;f+=1){var d=(0,c[f])({stamp:s,composables:r});s=a(d)?d:s}return s}},function(e,t){e.exports=function(e){return\"function\"==typeof e}},function(e,t){var r;r=function(){return this}();try{r=r||Function(\"return this\")()||(0,eval)(\"this\")}catch(e){\"object\"==typeof window&&(r=window)}e.exports=r},function(e,t){e.exports=Array.isArray},function(e,t,r){var n=r(3);e.exports=function(e){return n(e)&&n(e.compose)}},function(e,t){e.exports=Object.assign},function(e,t,r){var n=r(15),o=r(1),i=r(5);function a(e,t){if(void 0===t)return e;if(i(t))return(i(e)?e:[]).concat(t);if(!n(t))return t;for(var r=o(e)?e:{},u=Object.keys(t),s=0;s<u.length;s+=1){var c=u[s],f=t[c];if(void 0!==f){var l=r[c],d=n(l)||i(f)?l:{};r[c]=a(d,f)}}return r}e.exports=function(e){for(var t=1;t<arguments.length;t++)e=a(e,arguments[t]);return e}},function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(0)),o=i(r(18));function i(e){return e&&e.__esModule?e:{default:e}}t.default=(0,n.default)({properties:{name:\"baseModel\",config:{remote:{path:void 0,token:void 0,pullForm:!1},local:{connector:\"loki\"},merge:{connector:\"formio-loki\"}}},methods:{getModelName:function(){return this.name},getFluentConfig:function(){var t=void 0;return\"undefined\"!=typeof window&&window&&window._FLUENT_?t=window._FLUENT_:e&&e._FLUENT_&&(t=e._FLUENT_),t},getConnector:function(e,t){return Array.isArray(e)?this.getConnectorFromArray(e,t):e instanceof Object?e:void 0},getConnectorFromArray:function(e,t){var r=this;if(1===e.length)return e[0];if(this.config&&this.config[t]&&this.config[t].connector){var n=e.find(function(e){return e.name===r.config[t].connector});if(n instanceof Object)return n}var o=e.find(function(e){return e.default});return o instanceof Object?o:void 0},remote:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.token,r=void 0===t?void 0:t,n=e.pullForm,o=void 0===n?void 0:n,i=this.getFluentConfig(),a=i&&i.connectors&&i.connectors.remote;if(!a)throw new Error(\"No remote connector was defined. Please define it using Fluent.config()\");var u=this.getConnector(a,\"remote\");if(this.config.remote.token=r||this.config.remote.token,o&&(this.config.remote.pullForm=o||this.config.remote.pullForm),u)return u.connector({remoteConnection:this.config.remote,connector:u});throw new Error(\"No default remote connector found. Please assign one as your default in Fluent.config\")},local:function(){var e=this.getFluentConfig(),t=e&&e.connectors&&e.connectors.local;if(!t)throw new Error(\"No local connector was defined. Please define it using Fluent.config()\");var r=this.getConnector(t,\"local\");if(r)return r.connector({name:this.name,connector:r});throw new Error(\"No default local connector found. Please assign one as your default in Fluent.config\")},merged:function(){var e=this.local(),t=this.remote(),r=this.getFluentConfig(),n=r&&r.connectors&&r.connectors.merge;if(!n)throw new Error(\"No merge connector was defined. Please define it using Fluent.config()\");var o=this.getConnector(n,\"merge\");if(o)return o.connector({local:e,remote:t,name:this.name,connector:o});throw new Error(\"No default merge connector found. Please assign one as your default in Fluent.config\")}}}).compose(o.default)}).call(this,r(4))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o=a(r(0)),i=a(r(11));function a(e){return e&&e.__esModule?e:{default:e}}function u(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}t.default=(0,o.default)({init:function(e){if(!Array.isArray(e))throw new Error(\"Collect method only accepts arrays of data\");this.data=e},properties:{data:[]},methods:{get:function(){return this.data},all:function(){return this.get()},avg:function(e){return this.average(e)},average:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=[].concat(u(this.data)),r=t.reduce(function(t,r){var n=r;if(r instanceof Object){var o=i.default.getFromPath(r,e,void 0);void 0!==o&&o.value&&(n=o.value)}return t+n},0);try{return r/t.length}catch(e){throw new Error('Division between \"'+r+'\" and \"'+t.length+'\" is not valid.')}},chunks:function(e){for(var t=[].concat(u(this.data)),r=[];t.length;)r.push(t.splice(0,e));return this.data=r,this},collapse:function(){var e=[];return[].concat(u(this.data)).forEach(function(t){Array.isArray(t)?t.forEach(function(t){e.push(t)}):e.push(t)}),this.data=e,this},unChunk:function(){return this.collapse()},combine:function(e){var t=void 0;return[].concat(u(this.data)).forEach(function(r,o){r instanceof Object?(t||(t=[]),t[o]=n({},r,{_value:e[o]})):(t||(t={}),t[r]=e[o])}),this.data=t,this},concat:function(e){return this.data=[].concat(u(this.data),u(e)),this},contains:function(){var e=void 0,t=void 0,r=void 0;return 1===arguments.length?(this.isFunction(arguments.length<=0?void 0:arguments[0])&&(r=arguments.length<=0?void 0:arguments[0]),e=arguments.length<=0?void 0:arguments[0]):(e=arguments.length<=1?void 0:arguments[1],t=arguments.length<=0?void 0:arguments[0]),[].concat(u(this.data)).some(function(n,o){if(r)return!!r(n,o);var a=n;if(n instanceof Object){var u=i.default.getFromPath(n,t,void 0);u.value&&(a=u.value)}return a===e})},count:function(){return this.data.length},isFunction:function(e){return e&&\"[object Function]\"==={}.toString.call(e)}}})},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(){var e=function(e,t){try{return e()}catch(e){return t}};return Object.freeze({get:e,getFromPath:function(t,r,n){var o=r;r.includes(\" as \")&&(o=(r=r.split(\" as \"))[0]);var i=e(function(){return Array.isArray(r)&&r[1].trim()},void 0),a=o.replace(/\\[/g,\".\").replace(/]/g,\"\").split(\".\").filter(Boolean).map(function(e){return e.trim()}).every(function(e){return!(e&&void 0===(t=t[e]))})?t:n;return{label:i||o,value:a}}})}();t.default=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Interface=t.Fluent=t.Model=void 0;var n=a(r(13)),o=a(r(9)),i=a(r(19));function a(e){return e&&e.__esModule?e:{default:e}}t.Model=o.default,t.Fluent=n.default,t.Interface=i.default},function(e,t,r){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(0)),o=a(r(9)),i=a(r(10));function a(e){return e&&e.__esModule?e:{default:e}}function u(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}var s=(0,n.default)({init:function(){this.registerGlobalVariable()},properties:{},methods:{model:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,u(t))},extend:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,u(t))},compose:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.registerModel(t),o.default.compose.apply(o.default,u(t))},collect:function(e){return(0,i.default)(e)},registerGlobalVariable:function(){\"undefined\"!=typeof window&&window&&!window._FLUENT_&&(window._FLUENT_={connectors:{},models:{}}),e&&!e._FLUENT_&&(e._FLUENT_={connectors:{},models:{}})},registerModel:function(t){var r=t&&t[0]&&t[0].properties&&t[0].properties.name?t[0].properties.name:void 0;if(r&&\"baseModel\"!==r){if(\"string\"!=typeof r)throw new Error(\"You must assign a name to your Model when using Fluent.compose\");\"undefined\"==typeof window?e._FLUENT_.models[r]=!0:window._FLUENT_.models[r]=!0}},config:function(t){var r=t.REMOTE_CONNECTORS,n=void 0===r?void 0:r,o=t.LOCAL_CONNECTORS,i=void 0===o?void 0:o,a=t.MERGE_CONNECTORS,u=void 0===a?void 0:a;\"undefined\"!=typeof window&&window&&(window._FLUENT_.connectors={local:i,remote:n,merge:u}),void 0!==e&&e&&(e._FLUENT_.connectors={local:i,remote:n,merge:u})},getConfig:function(){return\"undefined\"!=typeof window&&window?window._FLUENT_:void 0!==e&&e?e._FLUENT_:void 0}}})();t.default=s}).call(this,r(4))},function(e,t,r){e.exports=r(1)},function(e,t){e.exports=function(e){return Boolean(e)&&\"object\"==typeof e&&Object.getPrototypeOf(e)===Object.prototype}},function(e,t,r){var n=r(2);function o(e){return function(t){\"use strict\";var r={};return r[e]=t,this&&this.compose?this.compose(r):n(r)}}var i=o(\"properties\"),a=o(\"staticProperties\"),u=o(\"configuration\"),s=o(\"deepProperties\"),c=o(\"staticDeepProperties\"),f=o(\"deepConfiguration\"),l=o(\"initializers\");e.exports=n({staticProperties:{methods:o(\"methods\"),props:i,properties:i,statics:a,staticProperties:a,conf:u,configuration:u,deepProps:s,deepProperties:s,deepStatics:c,staticDeepProperties:c,deepConf:f,deepConfiguration:f,init:l,initializers:l,composers:o(\"composers\"),propertyDescriptors:o(\"propertyDescriptors\"),staticPropertyDescriptors:o(\"staticPropertyDescriptors\")}})},function(e,t){e.exports=function(e){return\"string\"==typeof e}},function(e,t,r){var n=r(2),o=new WeakMap,i=function(e,t){function r(){\"use strict\";var t=o.get(this);return e.apply(t,arguments)}return Object.defineProperty(r,\"name\",{value:t,configurable:!0}),r};function a(e,t){var r=t.stamp.compose,n=r.deepConfiguration.Privatize.methods,a={};o.set(a,this);var u=r.methods;if(!u)return a;for(var s=Object.keys(u),c=0;c<s.length;c++){var f=s[c];n.indexOf(f)<0&&(a[f]=i(u[f],f))}if(\"undefined\"!=typeof Symbol){var l=Symbol.for(\"stamp\");u[l]&&(a[l]=t.stamp)}return a}var u=n({initializers:[a],deepConfiguration:{Privatize:{methods:[]}},staticProperties:{privatizeMethods:function(){\"use strict\";for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];\"string\"==typeof r&&r.length>0&&e.push(r)}return(this&&this.compose?this:u).compose({deepConfiguration:{Privatize:{methods:e}}})}},composers:[function(e){var t=e.stamp.compose.initializers;t.splice(t.indexOf(a),1),t.push(a)}]});e.exports=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(0)),o=a(r(11)),i=a(r(10));function a(e){return e&&e.__esModule?e:{default:e}}function u(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function s(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){return function n(o,i){try{var a=t[o](i),u=a.value}catch(e){return void r(e)}if(!a.done)return Promise.resolve(u).then(function(e){n(\"next\",e)},function(e){n(\"throw\",e)});e(u)}(\"next\")})}}t.default=(0,n.default)({init:function(e){var t=e.name,r=e.remoteConnection,n=e.connector;if(!t&&!r)throw new Error(\"Model must have a name or path\");if(!n)throw new Error(\"Model must have a connector. Please register one using Fluent.config\");this.name=t||this.name,this.remoteConnection=r||this.remoteConnection,this.connector=n||this.connector,this.chainReference=[],this.whereArray=[],this.orWhereArray=[],this.selectArray=[],this.orderByArray=[],this.limitNumber=void 0,this.offsetNumber=void 0,this.populate=[],this.chunk=null,this.pullSize=null,this.ownerEmail=void 0},properties:{operators:[\"=\",\"<\",\">\",\"<=\",\">=\",\"<>\",\"!=\",\"in\",\"nin\",\"like\",\"regexp\",\"startsWith\",\"endsWith\",\"contains\"]},methods:{get:function(){throw new Error(\"get() method not implemented\")},all:function(){throw new Error(\"all() method not implemented\")},find:function(e){throw new Error(\"find() method not implemented\")},findOne:function(){throw new Error(\"findOne() method not implemented\")},remove:function(){throw new Error(\"remove() method not implemented\")},softDelete:function(){throw new Error(\"softDelete() method not implemented\")},insert:function(){throw new Error(\"insert() method not implemented\")},update:function(){throw new Error(\"update() method not implemented\")},clear:function(){throw new Error(\"clear() method not implemented\")},updateOrCreate:function(){throw new Error(\"updateOrCreate() method not implemented\")},findAndRemove:function(){throw new Error(\"findAndRemove() method not implemented\")},paginate:function(e,t){throw new Error(\"paginate() method not implemented\")},owner:function(e){return this.chainReference.push({method:\"owner\",args:e}),this.ownerEmail=e,this},own:function(e){return this.owner(e)},first:function(){var e=this;return s(regeneratorRuntime.mark(function t(){var r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.get();case 2:return r=t.sent,t.abrupt(\"return\",o.default.get(function(){return r[0]},[]));case 4:case\"end\":return t.stop()}},t,e)}))()},collect:function(){var e=this;return s(regeneratorRuntime.mark(function t(){var r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.get();case 2:if(r=t.sent,Array.isArray(r)){t.next=5;break}throw new Error(\"Collect method only accepts arrays of data\");case 5:return t.abrupt(\"return\",(0,i.default)(r));case 6:case\"end\":return t.stop()}},t,e)}))()},select:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return t=this.prepareInput(t),this.chainReference.push({method:\"select\",args:t}),this.selectArray=this.selectArray.concat(t).filter(function(e,t,r){return r.indexOf(e)===t}),this},jsApplySelect:function(e){var t=this,r=Array.isArray(e)?[].concat(u(e)):[e];return this.selectArray.length>0&&(r=r.map(function(e){var r={};return t.selectArray.forEach(function(t){var n=o.default.getFromPath(e,t,void 0);void 0!==o.default.get(function(){return n.value},void 0)&&(r[n.label]=n.value)}),r})),r},offset:function(e){return this.chainReference.push({method:\"offset\",args:e}),this.offsetNumber=e,this},skip:function(e){return this.offset(e)},where:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"where\",args:r}),this.whereArray=[],(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There where clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.whereArray.push(t)}),this},andWhere:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"andWhere\",args:r}),(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There where clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.whereArray.push(t)}),this},orWhere:function(){for(var e=this,t=arguments.length,r=Array(t),n=0;n<t;n++)r[n]=arguments[n];return this.chainReference.push({method:\"orWhere\",args:r}),(r=Array.isArray(r[0])?r:[r]).forEach(function(t){if(3!==t.length)throw new Error('There orWhere clouse is not properly formatted, expecting: [\"attribute\", \"operator\",\"value\"] but got \"'+JSON.stringify(t)+'\" ');e.orWhereArray.push(t)}),this},limit:function(e){return this.chainReference.push({method:\"limit\",args:e}),this.limitNumber=e,this},take:function(e){return this.limit(e)},pluck:function(e){var t=this;return s(regeneratorRuntime.mark(function r(){var n;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return t.chainReference.push({method:\"pluck\",args:e}),r.next=3,t.get();case 3:return n=(n=r.sent).map(function(t){var r=o.default.getFromPath(t,e,void 0);if(void 0!==r.value)return r.value}),r.abrupt(\"return\",n);case 6:case\"end\":return r.stop()}},r,t)}))()},orderBy:function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.chainReference.push({method:\"orderBy\",args:t}),this.orderByArray=t,this},jsApplyOrderBy:function(e){var t=[].concat(u(e));if(0===this.orderByArray.length)return t;var r=this.orderByArray[0];if(this.selectArray.length>0&&(r.includes(\".\")||r.includes(\"[\")))throw new Error('Cannot orderBy nested attribute \"'+r+'\" when using Select. You must rename the attribute');var n=this.orderByArray[1],i=this.orderByArray[2];return i||(i=\"string\"),t=t.sort(function(e,t){var a=o.default.getFromPath(e,r,void 0).value,u=o.default.getFromPath(t,r,void 0).value;if(void 0===a||void 0===u)throw new Error('Cannot order by property \"'+r+'\" not all values have this property');return i.includes(\"string\")||i.includes(\"number\")?\"asc\"===n?a>u?1:a<u?-1:0:a>u?-1:a<u?1:0:i.includes(\"date\")?\"asc\"===n?new Date(a)-new Date(u):new Date(u)-new Date(a):void 0})},prepareInput:function(e){var t=[];return e.forEach(function(e){var r=Array.isArray(e)?e:e.split(\",\");r=r.map(function(e){return e.trim()}),t=t.concat(r)}),t.filter(function(e,t,r){return r.indexOf(e)===t}),t},ArrayInsert:function(e,t){var r=this;return s(regeneratorRuntime.mark(function n(){var o,i,a,u,s,c,f,l;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:o=1,i=e.length,a=!0,u=!1,s=void 0,n.prev=5,c=e[Symbol.iterator]();case 7:if(a=(f=c.next()).done){n.next=26;break}return l=f.value,t&&t.showProgress&&console.log(\"Inserting \"+o+\" of \"+i),n.prev=10,n.next=13,r.insert(l,t);case 13:n.sent,t&&t.showProgress&&console.log(\"Element \"+o+\" inserted\"),o++,n.next=23;break;case 18:n.prev=18,n.t0=n.catch(10),console.log(\"ERROR - Element \"+o+\" - \"+JSON.stringify(l)+\" could not be inserted\"),console.log(n.t0),o++;case 23:a=!0,n.next=7;break;case 26:n.next=32;break;case 28:n.prev=28,n.t1=n.catch(5),u=!0,s=n.t1;case 32:n.prev=32,n.prev=33,!a&&c.return&&c.return();case 35:if(n.prev=35,!u){n.next=38;break}throw s;case 38:return n.finish(35);case 39:return n.finish(32);case 40:case\"end\":return n.stop()}},n,r,[[5,28,32,40],[10,18],[33,,35,39]])}))()}}})}])},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(7)),o=a(r(8)),i=a(r(0));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){var e=\"undefined\"==typeof window||!window||!window.navigator||window.navigator.onLine;return Object.freeze({isOnline:function(){return new o.default(function(e,t){i.default.get(\"https://yesno.wtf/api\").then(function(t){e(!0)}).catch(function(t){e(!1)})})},initEventListeners:function(){n.default.listen({name:\"online\",callback:function(){console.log(\"App is now online\"),e||(e=!0,n.default.emit({name:\"FAST:CONNECTION:ONLINE\",data:e,text:\"Application is now online\"}))}}),n.default.listen({name:\"offline\",callback:function(){console.log(\"App is now offline\"),e&&(e=!1,n.default.emit({name:\"FAST:CONNECTION:OFFLINE\",data:e,text:\"Application is now offline\"}))}})}})}();t.default=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(){var e=function(e,t){var r=document.createEvent(\"CustomEvent\");return t=t||{bubbles:!1,cancelable:!1,detail:void 0},r.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),r};return Object.freeze({emit:function(t){var r=t.name,n=t.data,o=t.text;if(!r)throw new Error(\"Event must have a name.\");if(!n)throw new Error(\"Event must have data.\");if(!o)throw new Error(\"Event must have a text.\");var i=e(r,{detail:{data:n,text:o}});window.dispatchEvent(i)},listen:function(e){var t=e.name,r=e.callback;if(!t)throw new Error(\"Listener must have a name.\");if(!r)throw new Error(\"Listener must have a callback.\");window.addEventListener(t,r)},remove:function(e){var t=e.name,r=e.callback;if(!t)throw new Error(\"Listener must have a name to detach\");if(!r)throw new Error(\"Listener must have a callback to detach\");window.removeEventListener(t,r)}})}();t.default=n},function(e,r){e.exports=t}])});\n//# sourceMappingURL=fluent-formio.min.js.map","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","import { Interface } from \"fast-fluent\";\n\nexport default Interface.compose({\n  properties: {\n    localFx: undefined,\n    remoteFx: undefined\n  },\n  init(connectors) {\n    this.connectors = connectors;\n  },\n  methods: {\n    async get() {\n      this.prepareMergedFunctions();\n      const localData = await this.localFx.get();\n      const remoteData = await this.remoteFx.get();\n\n      return localData.concat(remoteData);\n    },\n    prepareMergedFunctions() {\n      this.localFx = this.connectors.local;\n      this.remoteFx = this.connectors.remote;\n\n      this.chainReference.forEach(chain => {\n        const method = chain.method;\n        const args = chain.args;\n\n        this.localFx = this.localFx[method](args);\n        this.remoteFx = this.remoteFx[method](args);\n      });\n    }\n  }\n});\n","import moment from 'moment';\n// import 'moment/min/locales';\n\nlet Moment = class {\n  static setLocales () {\n    moment.locale(Moment.getLenguage());\n  }\n  static changeLanguage (code) {\n    moment.locale(code);\n  }\n\n  static getLenguage () {\n    return localStorage.getItem('defaultLenguage') ? localStorage.getItem('defaultLenguage') : 'en';\n  }\n};\n\nexport default Moment;\n","import uuidv4 from 'uuid/v4';\nimport Utilities from 'utilities';\nimport Submission from 'models/Submission';\nimport Promise from 'bluebird';\n\nlet ParallelSurvey = (() => {\n  function getNewGroupWizard (vm) {\n    let progressSteps = ['1', '2', '3'];\n    let steps = [\n      {\n        title: vm.$t('Group Name'),\n        text: vm.$t('Give the group a name'),\n        inputValidator: (value) => {\n          return new Promise((resolve, reject) => {\n            if (value !== '') {\n              resolve();\n            } else {\n              let error = new Error(vm.$t('The group name is already taken'));\n\n              reject(error);\n            }\n          });\n        }\n      },\n      {\n        title: vm.$t('Current Participant Name'),\n        text: vm.$t('Give the current participant a name')\n      },\n      {\n        title: vm.$t('Next participant Name'),\n        text: vm.$t('Give the next participant a name')\n      }\n    ];\n\n    return { progressSteps: progressSteps, steps: steps };\n  }\n\n  function getNewUserWizard (vm) {\n    let progressSteps = ['1'];\n    let steps = [\n      {\n        title: vm.$t('Participant Name'),\n        text: vm.$t('Give the next participant a name')\n      }\n    ];\n\n    return { progressSteps: progressSteps, steps: steps };\n  }\n\n  function getGroupId (submission) {\n    let groupId = Utilities.get(() => Submission('*').local().getParallelSurvey(submission).groupId);\n\n    return groupId;\n  }\n\n  function submissionHasGroup (groupId) {\n    return groupId;\n  }\n  /**\n   * Creates the Wizard object to have new user or new group\n   * @param {*} param0\n   */\n  async function createWizard ({ submission, vm }) {\n    let groupId = getGroupId(submission);\n\n    if (submissionHasGroup(groupId)) {\n      return Object.assign({}, getNewUserWizard(vm), { groupId: groupId });\n    }\n    return Object.assign({}, getNewGroupWizard(vm), { groupId: groupId });\n  }\n  function prepareNewGroupObject ({ submission, vm, info }) {\n    let groupName = info[0];\n    let participantName = info[1];\n    let nextParticipant = info[2];\n    // Format the parallelSurvey object\n    let parallelSurvey = {\n      groupId: uuidv4(),\n      groupName: groupName,\n      participantName: participantName,\n      submissionId: submission._id\n    };\n\n    // Store information of the parallelSurvey on the current submission\n    vm.currentSubmission.data.parallelSurvey = Submission('*').local().setParallelSurvey(parallelSurvey);\n\n    // New survey Information\n    let surveyData = {\n      parallelSurvey: Submission('*').local().setParallelSurvey({\n        ...parallelSurvey,\n        participantName: nextParticipant\n      })\n    };\n\n    return surveyData;\n  }\n\n  function prepareNewUserObject ({ submission, vm, info }) {\n    let participantName = info[0];\n    let parallelsurveyInfo = Submission('*').local().getParallelSurvey(submission);\n\n    parallelsurveyInfo.participantName = participantName;\n    // New survey Information\n    let surveyData = {\n      parallelSurvey: Submission('*').local().setParallelSurvey(parallelsurveyInfo)\n    };\n\n    return surveyData;\n  }\n\n  async function createNewSurvey ({ submission, vm, info }) {\n    let groupId = getGroupId(submission);\n\n    if (submissionHasGroup(groupId)) {\n      return prepareNewUserObject({ submission, vm, info });\n    }\n    return prepareNewGroupObject({ submission, vm, info });\n  }\n  /*\n  async function storeNewSurvey ({ survey, vm }) {\n    let formio = new Formio(vm.$FAST_CONFIG.APP_URL + '/' + vm.$route.params.idForm);\n    // De register if there was a previous registration\n\n    Formio.deregisterPlugin('offline');\n    // Register the plugin for offline mode\n    Formio.registerPlugin(OFFLINE_PLUGIN.getPlugin({ formio: formio, hashField: vm.hashField }), 'offline');\n\n    let formSubmission = {\n      data: survey,\n      redirect: 'Update',\n      draft: true,\n      trigger: 'createParalelSurvey'\n    };\n\n    let created = await formio.saveSubmission(formSubmission);\n\n    return created;\n  }\n*/\n  return Object.freeze({\n    createWizard,\n    createNewSurvey\n    // storeNewSurvey\n  });\n})();\n\nexport default ParallelSurvey;\n","// import Formio from 'formiojs/Formio';\n// import offlinePlugin from 'offlinePlugin/offlinePlugin';\nimport Submission from 'models/Submission';\nimport Event from 'Wrappers/Event';\nimport Promise from 'bluebird';\nlet Import = class {\n  /**\n   *\n   * @param {*} file\n   * @param {*} vm\n   */\n  static fromJsonFile (file, vm) {\n    var reader = new FileReader();\n    // Closure to capture the file information.\n\n    reader.onload = (function (theFile) {\n      return function (e) {\n        let json;\n\n        try {\n          json = JSON.parse(e.target.result);\n        } catch (ex) {\n          throw new Error('The Json file could not be parsed');\n        }\n        Import.parseJson(json, vm);\n      };\n    })(file);\n    reader.readAsText(file);\n  }\n  /**\n   *\n   * @param {*} json\n   * @param {*} vm\n   */\n  static async parseJson (json, vm) {\n    // let totalSubmissions = json.length;\n    let formio = Import.getFormIOInstance(vm);\n\n    // Loading.show({ message: 'Importing ' + totalSubmissions + ' submissions' });\n    // json = json.slice(151, 200);\n\n    Promise.each(json, async function (row, index) {\n      // await Uploader.sendDataToFormIO(row)\n      let submission = Import.prepareSubmission(row);\n\n      await Import.saveSubmission(submission, formio, vm);\n    })\n      .then(() => {\n        Event.emit({ name: 'FAST:DATA:IMPORTED', data: { imported: true }, text: 'Data was imported' });\n      })\n      .catch((error) => {\n        // Loading.hide(error);\n        console.log(error);\n        vm.$swal(\n          vm.$t('Import Error!'),\n          vm.$t('Your submission could not be Imported. Please check the format of your Json file.'),\n          'error'\n        );\n      });\n  }\n\n  static emitNotification (vm) {\n    vm.$eventHub.emit('FAST-DATA_IMPORTED');\n  }\n  /**\n   *\n   * @param {*} row\n   */\n  static prepareSubmission (row) {\n    if (row.id || row._id) {\n      delete row.id;\n      delete row._id;\n    }\n    if (row.modified) {\n      delete row.modified;\n    }\n    if (row.owner) {\n      delete row.owner;\n    }\n    let data = row.data ? row.data : row;\n    let formSubmission = {\n      data: data,\n      redirect: false,\n      syncError: false,\n      draft: true,\n      trigger: 'importSubmission'\n    };\n\n    return formSubmission;\n  }\n  /**\n   *\n   * @param {*} vm\n   */\n  /*\n  static getFormIOInstance (vm) {\n    Formio.deregisterPlugin('offline');\n    Formio.registerPlugin(offlinePlugin.getPlugin(vm.form.data.path, undefined, false), 'offline');\n    let APP_URL = vm.$FAST_CONFIG.APP_URL;\n    let formUrl = APP_URL + '/' + vm.form.data.path;\n    let formio = new Formio(formUrl);\n\n    return formio;\n  }\n*/\n  /**\n   *\n   * @param {*} vm\n   */\n  static async saveSubmission (submission, formio, vm) {\n    // let processedSubmission = PreProcess.JsonSubmission(submission);\n\n    await Submission('*').add({ submission: submission, formio: formio });\n  }\n};\n\nexport default Import;\n","import GetRequest from './getRequest';\n\nconst OFFLINE_PLUGIN = class {\n  static get () {\n    let plugin = {\n      priority: 0,\n      preRequest: async (args) => {\n        if (args.method === 'GET') {\n          return GetRequest.handle(args);\n        }\n      },\n      request: async (args) => {\n        if (args.method === 'GET') {\n          return GetRequest.handle(args);\n        }\n      },\n      staticRequest: async (args) => {\n        if (args.method === 'GET') {\n          return GetRequest.handle(args);\n        }\n      }\n    };\n\n    return plugin;\n  }\n};\n\nexport default OFFLINE_PLUGIN;\n","import Form from 'models/Form';\n\nconst GetRequest = class {\n  /**\n   *\n   * @param {*} args\n   */\n  static async handle (args) {\n    // If we are making a request to a external API (NOT FORM.io)\n    if (args.url.indexOf('form.io') === -1) {\n      return GetRequest.handleExternalAPI(args);\n    }\n    // If we are trying to get a form we load it locally\n    // This action will get triggered when we load a create form\n    // of a resource from inside of another Form\n    if (args.type === 'form') {\n      return GetRequest.handleLocalForm(args);\n    }\n    // Calling to an internal Form.io route from Select component\n    if (args.type === 'select' && args.url.indexOf('form.io') !== -1) {\n      return GetRequest.handleInternalResource(args);\n    }\n  }\n  /**\n   *\n   */\n  static handleExternalAPI () {\n    // TODO\n    return null;\n  }\n  /**\n   *\n   * @param {*} args\n   */\n  static async handleLocalForm (args) {\n    return await Form.local()\n      .where('data.path', '=', args.formio.formId)\n      .first();\n  }\n  /**\n   *\n   * @param {*} args\n   */\n  static async handleInternalResource (args) {\n    return null;\n    let formID = args && args.url && args.url.split('/')[4];\n    let form = await Form.local().find();\n\n    form = form.filter((f) => {\n      return f.data._id === formID;\n    })[0];\n\n    if (!form) {\n      return;\n    }\n    /* let submissions = await Submission.local().find();\n\n    submissions = submissions.filter((s) => {\n      return s.data.formio.formId === form.data.path && s.data.owner === Auth.user()._id;\n    });\n\n    submissions = submissions.map((s) => {\n      return { data: s.data.data };\n    });\n\n    // return submissions;\n    */\n  }\n};\n\nexport default GetRequest;\n","import md5 from 'md5';\nimport Configuration from '../../models/Configuration';\n\nlet Hash = class {\n  static async string (string) {\n    let config = await Configuration.local().first();\n    let hashed = '';\n\n    hashed = md5(string, config.MD5_KEY);\n    return hashed;\n  }\n};\n\nexport default Hash;\n"],"sourceRoot":""}